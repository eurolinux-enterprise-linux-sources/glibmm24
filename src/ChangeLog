2018-03-31  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	2.56.0

2018-03-29  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::DesktopAppInfo: Add get_locale_string()

2018-03-29  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::Application: Add set_option_context_*()

	Add set_option_context_parameter_string(), set_option_context_summary(),
	set_option_context_description().

2018-03-21  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::Application: Add property_resource_base_path_string()

	property_resource_base_path() has the wrong return type, bool instead of
	std::string. It can't be fixed without breaking API/ABI. For now, deprecate
	property_resource_base_path() and add hand-coded
	property_resource_base_path_string() with the correct type. Bug 787496

2018-03-21  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::RefPtr: Add get()

	Analogous to std::shared_ptr::get(). Bug 495762

2018-03-20  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::Module: Remove obsolete _IGNORE() directives

2018-03-20  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::AppInfo: Change some parameter names

2018-03-20  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::DataInputStream: Deprecate read_until() and friends

	Deprecate read_until(), read_until_async() and read_until_finish().
	The corresponding glib functions have been deprecated.

2018-03-20  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::TlsClientConnection: Deprecate set/get/property_use_ssl3()

	The corresponding glib functions have been deprecated.

2018-03-20  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib, Gio: Regenerate docs.xml and .defs files

	* tools/extra_defs_gen/generate_defs_gio.cc: Add an initial call to
	get_defs(G_TYPE_APPLICATION) to make sure the first call to get_defs()
	requests info on a GObject, not a GInterface.

2018-03-02  Pavlo Solntsev  <pavlo.solntsev@gmail.com>

	member.m4: Add _MEMBER_SET_STR, setter for strings

	Introduce a macro to generate appropriate setter for a structure which
	has gchar* as a member. Bug 793778

2018-02-15  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::DataInputStream: Disable deprecation warnings from glib

	g_data_input_stream_read_until(), _read_until_async() and _read_until_finish()
	have been deprecated in glib/gio. They can't be deprecated in the stable
	glibmm-2-54 branch now. This patch makes it possible to build glibmm-2.54.x
	against the newest glib.

2018-01-25  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::TimeoutSource: Use monotonic time consistently

	* glib/glibmm/main.[cc|h]: Use Source::get_time() consistently.
	Remove a misleading sentence from the documentation of
	Source::get_current_time(). Bug 792524

2018-01-18  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::TlsClientConnection: Disable deprecation warnings from glib

	g_tls_client_connection_[set|get]_use_ssl3() and the use-ssl3 property
	have been deprecated in glib/gio. They can't be deprecated in the stable
	glibmm-2-54 branch now. This patch makes it possible to build glibmm-2.54.x
	against the newest glib.

2018-01-15  Daniel Boles  <dboles@src.gnome.org>

	Variant: Slightly elaborate Variant<Variant> docs

	Point out get_n_children() for checking nullable status, and copy the
	doc for Variant<VariantBase> to Variant< Variant<T> >.

	https://bugzilla.gnome.org/show_bug.cgi?id=778219

2017-12-20  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::Threads::Private: Fix gobj()

	Bug 791711

2017-11-20  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::VariantBase::cast_dynamic(): Remove noexcept(false)

	noexcept(false) has the same meaning as no noexcept specification, but
	Doxygen adds "noexcept" instead of "noexcept(false)" in the detailed
	description of the method, which is confusing. Bug 789329

2017-10-23  Daniel Boles  <dboles@src.gnome.org>

	Variant: Fix typo: unclosed monospace tag

2017-10-13  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gmmproc, _WRAP_METHOD_DOCS_ONLY: Optionally suppress @return section

	Add an optional 'voidreturn' parameter that can be specified if the wrapped
	C function returns a value, but the corresponding C++ method returns void.
	Bug 787978

2017-09-29  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::Action: Add exception specs to errthrow

2017-09-29  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::KeyFile, OptionContext, Regex: Add exception specs to errthrow

2017-09-29  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gmmproc: _WRAP_METHOD: Accept optional list of exceptions in errthrow

	In _WRAP_METHOD[_DOCS_ONLY], the errthrow parameter can now contain an
	optional list of exceptions with default value Glib::Error.
	Corresponding @throws Doxygen commands are included in the documentation,
	if the documentation does not contain other @throws commands (e.g.
	from *_docs_override.xml). Bug 787979

2017-09-24  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::DataInputStream: Fix the documentation of read_line_utf8()

	Hand-code the documentation of read_line_utf8() and read_line_finish_utf8().
	Use Glib::convert_return_gchar_ptr_to_stdstring() to set the output
	parameter. It handles the case when the char* is NULL.
	Minor fixes in the documentation of several other methods.

2017-09-24  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gmmproc: Suppress the @return section if return type is void

	If the wrapped C function returns a value, but the corresponding C++ method
	returns void, _WRAP_METHOD() suppresses the @return section in the
	documentation. Bug 787978

2017-09-20  Murray Cumming  <murrayc@murrayc.com>

	tests: Avoid unused function warnings from G_DECLARE_INTERFACE()

2017-09-19  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	tests/glibmm_variant: Use C++14 features conditionally

	* glib/src/variant.hg: Add (void) to intentionally unused variables,
	thus avoiding warnings when the test case is built with clang++.
	* tests/glibmm_variant/main.cc: Use std::get<Number>(std::tuple)
	(not std::get<Type>()) when compiling with only C++11 support.
	Bug 787648

2017-09-19  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::Variant: Avoid warnings from clang++

	Bug 787648

2017-09-18  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	2.54.1

2017-09-18  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::Variant<std::tuple>: Don't use std::index_sequence from C++14

	std::index_sequence and std::index_sequence_for are new in C++14,
	but this version of glibmm requires only C++11.
	The code that replaces std::index_sequence has been provided by
	Jonathan Wakely <zilla@kayari.org>. Bug 787648

2017-09-17  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gmmproc: Convert all property documentation to C++

	Bug 787698

2017-09-13  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::Application docs: Add a note to property_resource_base_path()

	The type of property_resource_base_path() shall be std::string (is bool).
	Fixing this would break API and ABI. A fix has to wait until the next
	API/ABI break. For now, add a note to the documentation. Bug 787496

2017-09-13  Murray Cumming  <murrayc@murrayc.com>

	2.54.0

2017-09-13  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::ActionGroup, Settings: Add detail_name to some _WRAP_SIGNAL()s

	* gio/src/actiongroup.hg: signal_action_added(), signal_action_removed(),
	signal_action_enabled_changed() and signal_action_state_changed() accept
	an 'action_name' parameter.
	* gio/src/settings.hg: signal_writable_changed() accepts a 'key' parameter.

2017-09-13  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Regenerate gio_signals.defs and gio_signals.defs.patch

2017-09-13  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	generate_extra_defs.cc: Write signal flags to .defs files

	Bug 785895

2017-09-13  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gmmproc: Write signal flags to generated documentation

	Bug 785895

2017-09-12  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gmmproc: Warn for unmatched deprecations in signals and properties

	Warn if a signal or a property is deprecated in the _WRAP_* macro,
	but not in the .defs file. (Warnings if a signal or a property is
	deprecated in the .defs file, but not in the _WRAP_* macro have been
	added previously.)

2017-09-08  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::Variant: Improved support for D-Bus object paths and signatures

	* glib/glibmm/filelist.am: Add variantdbusstring.h and variantdbusstring.cc.
	* glib/glibmm/variantdbusstring.[cc|h]: New files. String classes meant
	only for Variants with D-Bus object paths or D-Bus signatures.
	* glib/src/variant.[ccg|hg]: Add specializations for
	Variant<Glib::DBusObjectPathString>, Variant<Glib::DBusSignatureString>
	and Variant<std::vector<Glib::DBusObjectPathString>>.
	* glib/src/varianttype.[ccg|hg]: Add VARIANT_TYPE_OBJECT_PATH_ARRAY.
	* tests/glibmm_variant/main.cc: Add test_object_path().

	Make it possible to create a composite Variant containing variant type
	o (D-Bus object path) or g (D-Bus signature). Bug 785700

2017-09-08  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	tests/glibmm_variant: Add test of Variant<std::tuple>

	Bug 777791

2017-09-08  Alexander Rössler  <alexander.roessler@zuehlke.com>

	Glib::Variant: Add template specialization for std::tuple

	Bug 777791

2017-09-08  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Regenerate glib_signals.defs and gio_signals.defs

2017-09-08  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	generate_extra_defs.cc: Write default values of properties to .defs files

	Bug 785895

2017-09-08  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gmmproc: Write default values of properties to generated documentation

	Bug 785895

2017-09-07  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gmmproc: Accept curly braces in default values in _WRAP macros

	In C++11 default values of function arguments can contain curly braces,
	such as const Glib::RefPtr<SomeClass>& x = {}. Bug 783216 comment 13

2017-09-07  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gmmproc: Remove obsolete TODO comments

2017-09-07  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gmmproc: Fix _WRAP_ENUM for enumerators with apostrophes

	* tools/enum.pl: Handle enumerator values like 'B', 1u << 2, (gint)(1u << 31).
	Suppress repeated long warnings.
	* tools/pm/Output.pm: Handle enumerator values like 'B'. (1u << 2 and
	(gint)(1u << 31) require no fix.)

2017-09-07  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib, Gio: docs_override.xml: Add substitute_enumerator_name elements

	Don't modify names of preprocessor macros.

2017-09-07  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gmmproc: Add new elements types for the docs_override.xml files

	* tools/pm/DocsParser.pm: Add handling of substitute_type_name and
	substitute_enumerator_name elements in docs_override.xml files.
	This is a small part of the fix for enum class and enums inside classes,
	discussed in bug 86864, which is implemented in full in the next ABI-
	reaking version of glibmm. This particular part does not break ABI,
	it just improves the generated documentation.

2017-09-04  Murray Cumming  <murrayc@murrayc.com>

	2.52.1

2017-09-01  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::VariantIter: Fix typos in copyright notice

2017-08-30  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Update the Free Software Foundation address in copyright notices

	Bug 786824

2017-08-30  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gio/src/filelist.am: Really include all .hg files in giomm_files_hg

	Due to an extra blank some files were not processed by gmmproc.

2017-08-15  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio: Exclude DesktopAppInfo from wrap_init.cc on MacOS

	Modify the conditional inclusion of desktopappinfo.h in giomm.h and
	wrap_init.cc. It shall not be included when running under MacOS. This should
	have been fixed by commit fe99895f8d3b61409c416f1244a29f2aa3478f96.
	Bug 781947

2017-08-15  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	gio/src/filelist.am: Always include all .hg files in giomm_files_hg

	Commit 0bc35fb4fa28ee8564fecab4e21011dc42e74ed1 fixed giomm_files_hg,
	but in the wrong way. giomm_files_hg shall always include all .hg files,
	regardless of which ones are used on the present platform.

2017-07-30  Daniel Boles  <dboles.src@gmail.com>

	miscutils: Update docs of get_*_name() from GLib

	plus some minor tweaks that don't quite seem worth changing upstream.

	This adds some useful extra context for get_(prg|user|real)name().

2017-06-27  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::TlsDatabase: Fix memory leak in a vfunc

	create_certificate_handle_vfunc() shall delete the returned character array
	after it has been copied to a Glib::ustring, or else it leaks memory.
	Bug 783360

2017-06-23  Murray Cumming  <murrayc@murrayc.com>

	2.52.0

2017-05-31  Daniel Boles  <dboles.src@gmail.com>

	RefPtr: Clarify comment about undefined behaviour

	Dereferencing a null pointer does not necessarily cause a segfault:
	it is undefined behaviour, which means anything, or nothing, may happen.
	Avoid setting an expectation that a segfault will reliably occur here.

2017-05-31  Daniel Boles  <dboles.src@gmail.com>

	ActionMap: Revert accidental changes to Slot decls

	I cherry-picked a commit from master that should only have updated
	documentation, but because the way of declaring slots has been changed
	in libsigc++, it ended up changing them here too. That was unintentional

2017-05-29  Daniel Boles  <dboles@src.gnome.org>

	Variant: Use own get_n_children() instead of C API

	This looks much less ugly.

2017-05-18  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Gio::UnixSocketAddress::create(): Remove a default value

	Remove the default value of the 'type' parameter. As there is another
	create() with one parameter, the default value makes a call to
	create("pathname") ambiguous. Bug 782592

2017-05-12  Vyacheslav Yurkov  <uvv.mail@gmail.com>

	Gio::DBus::Proxy: Wrap call() and call_sync() methods. Bug 781818

2017-05-08  Murray Cumming  <murrayc@murrayc.com>

	2.51.7

2017-05-08  Murray Cumming  <murrayc@murrayc.com>

	gio/src/filelist.am: Really use desktopappinfo.hg to fix the build.

	This fixes a build breakage, when building from a fresh checkout,
	introduced by commit dd671f29ff9a005776ebd9e7cf20fdc5e44c14b8 .

2017-05-05  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::VariantType: Deprecate first() and next(). Add get_item_types()

	Bug 775741

2017-05-05  Daniel Boles  <dboles@src.gnome.org>

	ActionMap: Improve add_action_with_parameter docs

	• Clarify why the old overload has been deprecated: it simply does not
	work for the desired result because the parameter_type was not passed

	• Elaborate on the purpose of the parameter_type in the new overload.

	https://bugzilla.gnome.org/show_bug.cgi?id=774444

2017-05-04  Daniel Boles  <dboles@src.gnome.org>

	ActionMap: Really fix add_action_with_parameter()

	I replaced the old line that both created an Action without a parameter
	and added it, only with a line that creates an Action with a
	parameter... but did not add it. Of course, we need to do that, too.

	https://bugzilla.gnome.org/show_bug.cgi?id=774444

2017-05-04  U-eagle\daniel.boles  <daniel.boles@eagle-ws29.eagle.local>

	Gio::SimpleAction: Move set_state to original pos

	If I’d realised there was a specific commit that protected this, I would
	have reverted it, rather than doing it manually in my previous commit.

	Completes reversion of commit b7431bca6ccbd9f918b5ef73bae65a1c7828e7e0 –
	“Gio::SimpleAction: Make set_state() protected.”

	https://bugzilla.gnome.org/show_bug.cgi?id=777953

2017-05-04  Daniel Boles  <dboles@src.gnome.org>

	Gio::SimpleAction: Make set_state() public

	This is needed to apply the requested state in a custom handler for
	signal_change_state(). It was protected on an assumption that when the C
	doc for g_simple_action_set_state() said “This should only be called by
	the implementor of the action”, it meant the implementor of a subclass.

	But the C docs for signal change-state are clear that it means the
	implementor of the signal handler. Without such a user being able to
	call set_state(), they can’t apply the new state, unless they subclass
	SimpleAction, which is a lot to require for such a simple case as this.

	https://bugzilla.gnome.org/show_bug.cgi?id=777953

2017-05-04  Murray Cumming  <murrayc@murrayc.com>

	ActionMap: Add back add_action_with_parameter() without parameter_type.

	To avoid breaking ABI due to this commit that added a parameter:
	https://git.gnome.org/browse/glibmm/commit/?h=glibmm-2-52&id=19ea8885ef17743c7c6e436e770b3b3835ca5016
	Bug #774444

2017-05-04  Daniel Boles  <dboles@src.gnome.org>

	ActionMap—Reorder add_action_with_parameter’s args

	This matches e.g. simpleaction.hg and is what I originally intended.

	https://bugzilla.gnome.org/show_bug.cgi?id=774444

2017-05-04  Daniel Boles  <dboles@src.gnome.org>

	Gio::ActionMap: trivially move an _IGNORE

2017-05-04  Daniel Boles  <dboles@src.gnome.org>

	Gio::ActionMap: Improve declaration order/spacing

	This puts several things in more logical places and adds a couple of
	line breaks that make it easier to see the key sections in the header.

	https://bugzilla.gnome.org/show_bug.cgi?id=774444

2017-05-04  Daniel Boles  <dboles@src.gnome.org>

	Gio::ActionMap: Fix add_action_with_parameter()

	It was not registering the parameter type for the action on create, so
	when activating the action later and passing a parameter, an assertion
	failed about the expected and passed parameter types/counts not matching
	and the parameter was not usable.

	https://bugzilla.gnome.org/show_bug.cgi?id=774444

2017-05-04  Daniel Boles  <dboles@src.gnome.org>

	SettingsSchemaKey: Add missing value/range methods

	https://bugzilla.gnome.org/show_bug.cgi?id=774903

2017-04-30  John Ralls  <jralls@ceridwen.us>

	Bug 781947 - Build fails on MacOS because glib doesn't have gdesktopinfo.

	Disable building desktopapinfo.cpp with the same test used in glib.

2017-04-29  Kjell Ahlstedt  <kjellahlstedt@gmail.com>

	Glib::Object: Suppress deprecation warning for g_object_newv()

	g_object_newv() is deprecated in favor of g_object_new_with_properties(),
	which is new in glib 2.54.

2017-04-04  Murray Cumming  <murrayc@murrayc.com>

	C++11: Variant: Replace more throw(std::bad_cast) with noexcept(false).

	This is necessary for C++17 which completely removes dynamic
	exception specifications.
	See https://bugzilla.redhat.com/show_bug.cgi?id=1438766

2017-04-04  Murray Cumming  <murrayc@murrayc.com>

	C++11: Variant: Replace throw(std::bad_cast) with noexcept(false).

	This is necessary for C++17 which completely removes dynamic
	exception specifications.
	See https://bugzilla.redhat.com/show_bug.cgi?id=1438766

2017-03-22  Murray Cumming  <murrayc@murrayc.com>

	2.51.6

	This is the first 2.51.* version of glibmm-2.4.
	There were previously some 2.51 versions of glibmm-2.52, which
	installed in parallel with glibmm-2.4,
	but there will not be any stable version of glibmm-2.52.
	There might instead be a stable version of glibmm-2.54 eventually.

2017-03-13  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Application::get_default(): Add refreturn

	Bug 779936

2017-02-14  Daniel Boles  <dboles@src.gnome.org>

	SimpleAction—doc—Erase wrong line & duplicate word

	In case anyone is as easily confused as me…

	https://bugzilla.gnome.org/show_bug.cgi?id=778575

2017-02-13  Daniel Boles  <dboles@src.gnome.org>

	Glib::Variant—Improve documentation of get_maybe()

	Clarify what is set and returned, and use lower case “nothing” to match
	how that must be written in GVariant text format, à la GSettings, etc.

	https://bugzilla.gnome.org/show_bug.cgi?id=778219

2017-02-13  Daniel Boles  <dboles@src.gnome.org>

	Glib::Variant—Explain how to create “maybe” types

	It’s not exactly intuitive why the *_maybe() methods are kept in
	ContainerBase, nor that Variant<VariantBase> inherits from the former
	and is the way to get a maybe-typed Variant in glibmm. Let’s fix that!

	https://bugzilla.gnome.org/show_bug.cgi?id=778219

2017-02-13  Daniel Boles  <dboles@src.gnome.org>

	Glib::Variant—Cosmetically tweak braces & newlines

	Donʼt use braces for single-line blocks, and do if the other side of an
	if/else already did. Also, get rid of a couple of extraneous newlines.

	https://bugzilla.gnome.org/show_bug.cgi?id=778219

2017-02-05  Daniel Boles  <dboles@src.gnome.org>

	Glib::Variant: Fix a copy-pasted typo in func docs

2017-02-02  Daniel Boles  <dboles@src.gnome.org>

	Gio::Action: Remove unneeded #includes in ccg

	https://bugzilla.gnome.org/show_bug.cgi?id=777953

2017-02-02  Daniel Boles  <dboles@src.gnome.org>

	Gio::Action: #include <glibmm/variant.h> in hg

	Currently, it is included indirectly, via 3 other headers. This is
	brittle. Without that, users of action.h would have to manually include
	variant.h to use methods returning the forward-declared VariantBase,
	which isn’t very helpful. Plus, the header uses types like Variant<>
	templates and VariantContainerBase, which were never forward-declared.

	Including it directly makes the dependency more obvious and less brittle
	and spares us from having to write a bunch more forward-declarations.

	https://bugzilla.gnome.org/show_bug.cgi?id=777953

2017-01-04  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio builds: "Install" the .pdb files

	Since we generate the .pdb files during the build, we should copy them to
	make debugging glibmm on Windows easier.

2016-12-27  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::ActionMap: Fix some trivial documentation bugs

2016-12-26  Daniel Boles  <dboles@src.gnome.org>

	Gio::ActionMap: Add function to ActivateSlot doc

	It's used in add_action_with_bool() too.

2016-12-26  Daniel Boles  <dboles@src.gnome.org>

	Gio::ActionMap: Clarify doc of ActivateWithParameterSlot

	This brings it in line with the existing doc comment for ActivateSlot.

2016-12-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Dispatcher: Don't cast a HANDLE to an int on Windows

	* glib/glibmm/dispatcher.cc: When a Windows HANDLE must be cast, cast it
	to Glib::PollFD::fd_t instead of int. Bug 772074

2016-12-12  Marcin Kolny  <marcin.kolny@gmail.com>

	PollFD: autodeduce type of fd field

	* glib/glibmm/main.[h|cc]: file descriptor to poll can be either of gint,
	or gint64 type, depending on the platform. glibmm should follow this
	rule as well.

	https://bugzilla.gnome.org/show_bug.cgi?id=772074

2016-12-05  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::DBus::Proxy: Fix memory leak in get_cached_property_names()

	Bug 775210

2016-11-30  djb  <db0451@gmail.com>

	Gio::Settings: Make set_enum() + set_flags() usable

	The _WRAP_METHOD calls had the names typo'd as get_enum() + get_flags().
	Keep and deprecate the misnamed methods.

	https://bugzilla.gnome.org/show_bug.cgi?id=774647

2016-11-19  Marcin Kolny  <marcin.kolny@gmail.com>

	Gio::SettingsSchemaSource: do an extra reference() for returning value

	* gio/src/settingsschemasource.hg: method get_default() returns
	transfer-none value, what means that we need to increase refcount
	before wrapping the pointer by RefPtr class.

	https://bugzilla.gnome.org/show_bug.cgi?id=774593

2016-11-08  Murray Cumming  <murrayc@murrayc.com>

	ustring: Add cbegin() and cend().

	As in std::string since C++11.

2016-11-05  Marcin Kolny  <marcin.kolny@gmail.com>

	Gio::Settings: fix type of 'key' parameter of writable-change-event signal

	https://bugzilla.gnome.org/show_bug.cgi?id=773977

2016-11-05  Murray Cumming  <murrayc@murrayc.com>

	Examples: Avoid a warning about unused code.

	This useful warning seems to be new in g++ 6:

	thread/dispatcher2.cc:88:1: error: ‘{anonymous}::ThreadTimer::~ThreadTimer()’ defined but not used [-Werror=unused-function]
	ThreadTimer::~ThreadTimer()

2016-09-20  Murray Cumming  <murrayc@murrayc.com>

	2.49.7

2016-09-13  Murray Cumming  <murrayc@murrayc.com>

	2.49.7

2016-09-13  Murray Cumming  <murrayc@murrayc.com>

	Gio::Settings: set_uiint(): Deprecate for set_uint().

	This was a typo.

2016-09-13  Murray Cumming  <murrayc@murrayc.com>

	Gio::Settings: Add get/set_uint64().

2016-09-13  Murray Cumming  <murrayc@murrayc.com>

	Gio::Settings: Add get/set_int64().

2016-09-13  Murray Cumming  <murrayc@murrayc.com>

	Gio::Drive: Add is_removable().

2016-09-11  Murray Cumming  <murrayc@murrayc.com>

	Gio::AppInfo: Add launch_default_for_uri_async().

	Using the fairly new, and nifty, slot/slot_callback arguments for
	_WRAP_METHOD().

2016-09-10  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application::get_busy(): return the bool.

	This should not break ABI and this could not have been used anyway.
	Bug #770304

2016-09-10  Murray Cumming  <murrayc@murrayc.com>

	Regenerate *docs.xml files.

2016-09-10  Murray Cumming  <murrayc@murrayc.com>

	Regenerate glib .defs.

2016-09-10  Murray Cumming  <murrayc@murrayc.com>

	Regenerate gio .defs.

2016-09-01  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::OptionGroup: Improve the documentation of add_entry()

2016-08-26  Murray Cumming  <murrayc@murrayc.com>

	giomm: Add include for settingsschemasource.h

2016-08-19  Murray Cumming  <murrayc@murrayc.com>

	2.49.5

2016-08-14  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::OptionContext: Wrap g_option_context_parse_strv()

	* gio/src/applicationcommandline.hg: Fix the documentation of get_arguments(),
	now that g_option_context_parse_strv() has been wrapped.
	* glib/src/optioncontext.hg: Wrap g_option_context_parse_strv() as
	parse(char**& argv). Fix the documentation of get_help(bool).

2016-08-11  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Add DocsParser::remove_c_memory_handling_info()

	When C documentation is converted to C++ documentation, remove sentences
	that contain g_free, g_strfreev, g_list_free or g_slist_free.
	https://mail.gnome.org/archives/gtkmm-list/2016-August/msg00017.html

2016-08-09  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add missing objects to glib/gio_extra_objects.defs

	Doesn't change the generated code, but some gmmproc warnings are avoided.

2016-08-09  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Remove DocsParser::non_object_method_name()

	This function was superseded by gtk_extra_objects.defs 6 years ago.
	The substitution gtk_drag_source => Gtk::DragSource is lost with this
	patch, but that substitution was wrong. There is no Gtk::DragSource
	class or namespace.

2016-08-06  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::SocketService: Update the class documentation

	* gio/src/socketservice.hg: The documentation of GSocketService has been
	slightly modified. Modify the documentation of Gio::SocketService accordingly.
	Fix the indentation.
	Noticed in connection with bug #766151, but not a bug fix.

2016-07-28  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: swap() implementations: Use std::swap().

	Because this simplifies the code.

2016-07-21  Murray Cumming  <murrayc@murrayc.com>

	2.49.4

2016-07-17  Sebastian Geiger  <sbastig@gmx.net>

	docs: Make Doxygen silent

	https://bugzilla.gnome.org/show_bug.cgi?id=768797

2016-07-14  Sebastian Geiger  <sbastig@gmx.net>

	Build: Fix silent builds

	Silent builds were introduced in commit
	fa03634b5963af18340258a67063f3a527c4e471
	but they were not really enabled. Passing
	yes to AM_SILENT_RULES fixes this issue.

	See https://wiki.gnome.org/Initiatives/GnomeGoals/NicerBuilds
	for more information.

	https://bugzilla.gnome.org/show_bug.cgi?id=768797

2016-07-05  Murray Cumming  <murrayc@murrayc.com>

	connection_add_exception_handler(): Use list<slot> instead of signal.

	Because libsigc++ 2.10 deprecates signal::slots() and libsigc++ 3.0
	now has no signal<>::slots() method. Using a signal for the list of
	slots seems rather non-obvious anyway.

2016-06-27  Murray Cumming  <murrayc@murrayc.com>

	2.49.2

2016-06-17  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio build files: Update projects

	Make sure the added sources are included in the builds, and in the list of
	headers to be installed.

2016-06-15  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Make h2def.py recognize some GDK_PIXBUF macros

	gdk-pixbuf has added macros such as GDK_PIXBUF_DEPRECATED* and
	GDK_PIXBUF_AVAILABLE* in the header files. h2def.py must recognize those
	macros in order to successfully decode the function declarations.

2016-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::InputStream, OutputStream: Make some of the new methods const

	* gio/src/inputstream.hg: is_closed() and has_pending() shall be const.
	* gio/src/outputstream.hg: is_closed(), is_closing() and has_pending()
	shall be const. Bug #572471

2016-06-02  Krzysztof Kosiński  <tweenk.pl@gmail.com>

	Gio::FilterOutputStream: Fix property_base_stream()

	Change return type from RefPtr<InputStream> to the correct RefPtr<OutputStream>.
	This change does not break ABI, but it breaks API. That should be acceptable.
	The property has probably been useless with the wrong declared return type.
	Part of a large patch, split by Kjell Ahlstedt. Bug #572471

2016-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Wrap some constructors and methods in giomm streams

	Also, add TODO comments about adding vfuncs at ABI break.
	* gio/src/bufferedinputstream.hg: TODO: Add fill_vfunc().
	* gio/src/filterinputstream.[hg|ccg]: Add ctor.
	* gio/src/filteroutputstream.[hg|ccg]: Add ctor.
	* gio/src/inputstream.hg: Add ctor, is_closed(), has_pending(),
	set_pending(), clear_pending(). TODO: Add read_vfunc(), skip_vfunc(),
	close_vfunc().
	* gio/src/memoryoutputstream.[hg|ccg]: Add ctor and create().
	* gio/src/outputstream.hg: Add ctor, is_closed(), is_closing(), has_pending(),
	set_pending(), clear_pending(). TODO: Add write_vfunc(), splice_vfunc(),
	flush_vfunc(), close_vfunc().
	An updated version of a patch by Krzysztof Kosiński <tweenk.pl@gmail.com>
	Bug #572471

2016-06-02  Krzysztof Kosiński  <tweenk.pl@gmail.com>

	Update gio_vfuncs.defs

	Add vfuncs for GFileInputStream, GFileOutputStream, GInputStream,
	GOutputStream. Move the vfuncs for GPermission and GListModel to their correct
	position in alphabetic order.
	Part of a large patch, split by Kjell Ahlstedt. Bug #572471

2016-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Pollable[Input|Output]Stream: Return -1 on error in vfuncs

	* gio/src/pollableinputstream.hg: read_nonblocking_vfunc_callback():
	Return -1 if the C++ vfunc throws an exception.
	* gio/src/pollableoutputstream.hg: write_nonblocking_vfunc_callback():
	Return -1 if the C++ vfunc throws an exception.
	This is what the glib/gio functions expect, and the behaviour suggested in
	bug 572471 for similar vfuncs in other stream classes.

2016-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Add optional argument err_return_value in _WRAP_VFUNC

	* tools/m4/vfunc.m4:
	* tools/pm/Output.pm:
	* tools/pm/WrapParser.pm: Add the optional argument err_return_value in
	_WRAP_VFUNC. This return value, if specified, applies only when the C++ vfunc
	throws an exception, which is propagated to the C callback function.

2016-05-29  Murray Cumming  <murrayc@murrayc.com>

	2.49.1

2016-05-25  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Discard unused m4 sections

	tools/m4/base.m4: At the end of the _END macro, discard all remaining sections.
	m4_divert(-1) + m4_undivert() was probably meant to do just that, but it does
	nothing. m4_divert(-1) + m4_undivert, without parentheses, discards all
	remaining sections. Bug #756593

2016-05-16  Murray Cumming  <murrayc@murrayc.com>

	Remove trailing whitespace.

2016-05-09  Murray Cumming  <murrayc@murrayc.com>

	Gio::SocketAddress: Hand-code create() because the C func does lots.

	We can only genereate constructors (that are then called by generated
	create() methods) when the C function just sets its properties, as per
	the convention with GObject APIs. This C function does far more.

	Bug #766150 (Vladimir)

2016-04-27  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add tests/giomm_listmodel

	Similar to glib/gio/tests/glistmodel.c
	Bug #755307

2016-04-27  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Gio::ListModel, ListStoreBase and ListStore<>

	Based on work by Murray Cumming <murrayc@murrayc.com>
	and Marcin Kolny <marcin.kolny@gmail.com>
	Bug #755307

2016-04-14  Murray Cumming  <murrayc@murrayc.com>

	ustring: Add {} with a while().

	To make this code slightly clearer.

2016-04-10  Murray Cumming  <murrayc@murrayc.com>

	Use _DEPRECATE_IFDEF_START/END in .hg/ccg files.

2016-04-10  Murray Cumming  <murrayc@murrayc.com>

	VariantBase: Add explicit operator bool().

	Deprecating the operator const void*, which is no longer necessary
	with C++11.

	There doesn't seem to be any ambiguity, but let's see.

2016-04-10  Murray Cumming  <murrayc@murrayc.com>

	FileAtrributeInfoList, Checksum, Module: Make operator bool explicit.

2016-04-10  Murray Cumming  <murrayc@murrayc.com>

	RefPtr: Make operator bool() explicit.

	As in shared_ptr<>, for instance.

	See https://bugzilla.gnome.org/show_bug.cgi?id=626858#c4

2016-04-05  Marcin Kolny  <marcin.kolny@gmail.com>

	Gio::DBus::Proxy: allow using GDBusProxy* conversion outside DBus namespace

	* gio/src/dbusproxy.hg: fix _WRAP_METHOD usage
	* tools/m4/convert_gio.m4: update converstion definition - use
	Gio::DBus::Proxy instead of Proxy.

2016-04-05  Marcin Kolny  <marcin.kolny@gmail.com>

	h2def.py: strip G_DECLARE_FINAL_TYPE macro call

2016-04-03  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Add 'deprecated' option in _WRAP_ENUM and _WRAP_GERROR

	* tools/m4/enum.m4:
	* tools/m4/gerror.m4: Surround code and documentation by #ifndef
	xxx_DISABLE_DEPRECATED, if it's deprecated.
	* tools/pm/DocsParser.pm: lookup_enum_documentation(): Move the parsing of
	options to WrapParser. Add deprecation docs, if any.
	* tools/pm/Enum.pm: build_element_list(): Move the parsing of options to
	WrapParser.
	* tools/pm/Output.pm: output_wrap_enum(), output_wrap_enum_docs_only(),
	output_wrap_gerror(): Handle deprecation docs.
	* tools/pm/WrapParser.pm: Parse options in the new on_wrap_any_enum() function.

2016-04-03  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix some Doxygen warnings

	* glib/glibmm/property.h: More code within #ifndef DOXYGEN_SHOULD_SKIP_THIS.
	* glib/src/bytearray.hg: Change parameter name index_ to index.
	* tools/pm/DocsParser.pm: When the C parameter name does not coincide with
	the C++ name, change to the C++ name in the documentation also when the C
	name ends with an underscore.

2016-04-01  Marcin Kolny  <marcin.kolny@gmail.com>

	gmmproc: _CLASS_GOBJECT(): allow provide custom move  operations.

	If class contains movable fields, custom move constructor and move
	assignment operator should be provided. Use macro _CUSTOM_MOVE_OPERATIONS
	for NOT generating default move operations.

	https://bugzilla.gnome.org/show_bug.cgi?id=756593

2016-04-01  Marcin Kolny  <marcin.kolny@gmail.com>

	Glib::Property: allow to set property nick, blurb and flags.

	* .gitignore: add paramflags generated files to ignore list.
	* glib/glibmm.h: add paramflags header to include list.
	* glib/glibmm/property.{cc|}h: add constructors allowing set nick,
	blurb. Add getters for this values.
	and flags of property.
	* glib/glibmm/value.{cc|h}:
	* glib/src/filelist.am: add paramflags to a build.
	* glib/src/enums.{ccg|hg}: add GParamFlags enum wrapper.
	* glib/glibmm/value_basictypes.{cc|h}.m4: add
	overloaded create_param_spec() for setting additional property
	parameters.

	This patch fixes bug #755256

2016-03-31  Murray Cumming  <murrayc@murrayc.com>

	C++11: .hg\.ccg files: Replace more typedefs with using.

2016-03-31  Murray Cumming  <murrayc@murrayc.com>

	Examples: Use libsigc++ 2.9/10 and its slot/signal<R(Args...)> syntax.

	The older libsigc++ syntax is deprecated.

2016-03-31  Murray Cumming  <murrayc@murrayc.com>

	2.48.1

2016-03-31  Murray Cumming  <murrayc@murrayc.com>

	C++11: gmmproc: Use using instead of typedef.

2016-03-31  Murray Cumming  <murrayc@murrayc.com>

	C++11: .h/.cc files: Replace typedefs with using.

2016-03-31  Murray Cumming  <murrayc@murrayc.com>

	C++11: .hg/.ccg files: Replace typedefs with using.

2016-03-31  Murray Cumming  <murrayc@murrayc.com>

	NEWS: Actually mention 2.48.0

2016-03-28  Murray Cumming  <murrayc@murrayc.com>

	Move thread_local check into a GLIBMM_CXX_* macro, like other checks.

	Bug #759791

2016-03-28  Tom Schoonjans  <Tom.Schoonjans@diamond.ac.uk>

	Build: Use Threads::Private hen thread_local keyword is not supported.

	This fix is necessary for compilation of glibmm on OS X, as the clang
	compiler that currently ships with XCode currently does not support this
	keyword. Bug #759791

2016-03-28  Murray Cumming  <murrayc@murrayc.com>

	2.48.0

2016-03-28  Murray Cumming  <murrayc@murrayc.com>

	Regenerate docs.xml files.

2016-03-28  Murray Cumming  <murrayc@murrayc.com>

	Regenerate gio .defs.

2016-03-18  Murray Cumming  <murrayc@murrayc.com>

	2.47.92

2016-03-11  Murray Cumming  <murrayc@murrayc.com>

	Require the latest libsigc++-2.0.

	In case we really need the std::ref() support in libsigc++ 2.7.2.

2016-03-10  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix "make check" after sigc::mem_fun(pointer,func) was deprecated

2016-03-10  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	generate_extra_defs: Check for deprecated signals and properties

	tools/extra_defs_gen/generate_extra_defs.cc: Mark deprecated signals and
	properties as such in the generated .defs file.

2016-03-10  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Check if signals and properties are deprecated appropriately

	* tools/pm/GtkDefs.pm:
	* tools/pm/Property.pm: Search for (deprecated #t) in the *_signals.defs file.
	* tools/pm/Output.pm:
	* tools/pm/WrapParser.pm: Warn if a signal, property or child property is
	deprecated in the .defs file, but not in the _WRAP_* macro, and the whole
	file is not deprecated (no _IS_DEPRECATED).

2016-03-08  Murray Cumming  <murrayc@murrayc.com>

	Use std::ref instead of sigc::ref.

	As required by the latest (not yet released) libsigc++.

2016-03-08  Murray Cumming  <murrayc@murrayc.com>

	Fix a tiny typo in a comment.

2016-03-08  Murray Cumming  <murrayc@murrayc.com>

	Correct bad uses of sigc::bind<1>.

	sigc::bind<1>() is meant to bind a value for the second argument,
	which makes no sense for a method with 1 parameter.
	sigc::bind() seems fine.

	I found this while working in the sigc3 branch, using libsigc++-3.0,
	which is less forgiving of this error.

2016-03-07  Chun-wei Fan  <fanchunwei@src.gnome.org>

	MSVC builds: Look for includes in include/gio-win32-2.0

	At some point gio.h is going to include headers from this location, so
	make sure we look for headers from here.

2016-03-01  Murray Cumming  <murrayc@murrayc.com>

	2.47.6

2016-02-29  Murray Cumming  <murrayc@murrayc.com>

	Regenerate docs.xml files.

2016-02-29  Murray Cumming  <murrayc@murrayc.com>

	Regenerate gio .defs.

2016-02-27  Murray Cumming  <murrayc@murrayc.com>

	manual refactor target: Error if clang-format is not available.

2016-02-27  Murray Cumming  <murrayc@murrayc.com>

	Rearrange some multiline comments.

	Putting the comment before the code, instead of to the right,
	because clang-format can not (and could not) know which comments
	are meant to be aligned. I prefer this anyway.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Run clang-format on the .ccg files.

	This seems to work.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Run clang-format on the include-all headers.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Re-run clang-format on some files.

	I need to make a subsequent commit to fix the now-unaligned
	trailing comments.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	clang-format: unset AlignTrailingComments.

	Because it sometimes wrongly things that comments on two lines
	are related.

	This now wrongly unaligns some blocks of trailing comments,
	but I would rather just not have them.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Run clang-format on glib .cc files.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Run clang-format on glib .h files.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Run clang-format on gio .cc files.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Run clang-format on gio .h files.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	clang-format: Disable SortIncludes.

	Because this can break builds.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Run clang-format on gendef.cc

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Run clang-format on tools/

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Run clang-format on tests.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Run clang-format on the examples.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Run clang-format on the *_p.h files.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Makefile.am: Added a manual reformat target, to use clang-format.

2016-02-26  Murray Cumming  <murrayc@murrayc.com>

	Added a format file for clang-format.

	For automatic reformatting of the source code.

2016-02-25  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Fix errthrow in _WRAP_VFUNC

	* tools/m4/vfunc.m4: Propagate a Glib::Error exception to GError** error.
	Don't throw an exception in the callback function, called from C code.
	Bug #762437

2016-02-18  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::SocketConnectable: Add to_string()

2016-02-18  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Icon: Add serialize(), deserialize() and documentation of create()

2016-02-11  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _MEMBER_GET: Remove extra spaces, indenting and trailing.

	By changing
	) dnl
	to
	)dnl

2016-02-10  Murray Cumming  <murrayc@murrayc.com>

	Gio::FileInfo::list_attributes(): Make name_space optional.

	Because I noticed that this has just been documented as being allowed
	to be null:
	https://git.gnome.org/browse/glib/commit/?id=a4ed89bf75190631087596be22f9eb10dc6e53ef

2016-02-06  Murray Cumming  <murrayc@murrayc.com>

	Use MM_AX_CXX_COMPILE_STDCXX() instead of MM_AX_CXX_COMPILE_STDCXX_11().

	This makes it easier to try C++14 sometimes and eventually really switch
	to it.

2016-02-05  Murray Cumming  <murrayc@murrayc.com>

	C++11: Use emplace_back() instead of push_back().

2016-02-05  Murray Cumming  <murrayc@murrayc.com>

	C++11: Use initializer list instead of push_back() for initial single item.

2016-02-04  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	DBus::Connection: Pass an empty bus name as nullptr

	* gio/src/dbusconnection.[hg|ccg]: Some string parameters in some C functions
	accept nullptr, others don't.
	call(), call_sync(): bus_name: Pass nullptr for an empty string.
	emit_signal(): Only destination_bus_name can be nullptr.
	Other string parameters: Pass c_str().
	The bug in call() and call_sync() was noticed by Gerlof Fokkema on gtkmm-list.
	The bug in emit_signal() is an overreaction to bug 645072. All string
	parameters were changed to pass nullptr, but only destination_bus_name
	should have been changed.

2016-02-04  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Add NULL option to _WRAP_METHOD

	* tools/pm/Function.pm:
	* tools/pm/Output.pm: Accept {NULL} or {!NULL} after the name of a string
	parameter in _WRAP_METHOD. It specifies how to translate an empty string to
	a C string. {NULL}: nullptr, {!NULL}: pointer to an empty string.
	Both {NULL} and {!NULL} can be useful, because the default translation is
	different for mandatory and optional ({?}) parameters.

2016-02-01  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add some connect() overloads that move the sigc::slot

	* glib/glibmm/dispatcher.[cc|h]: Add Dispatcher::connect(&&).
	* glib/glibmm/objectbase.[cc|h]: Add ObjectBase::connect_property_changed(&&)
	and ObjectBase::connect_property_changed_with_return(&&).
	* glib/glibmm/propertyproxy_base.[cc|h]: Add PropertyProxyConnectionNode(&&)
	ctor, PropertyProxyConnectionNode::connect_changed() and
	SignalProxyProperty::connect(&&).
	* glib/glibmm/signalproxy.[cc|h]: Add SignalProxyNormal::connect_impl_(&&),
	SignalProxy::connect(&&), SignalProxy::connect_notify(&&),
	SignalProxyDetailed::connect_impl_(&&), SignalProxyDetailedAnyType::connect(&&)
	and SignalProxyDetailedAnyType::connect_notify(&&).
	* glib/glibmm/signalproxy_connectionnode.[cc|h]:
	Add SignalProxyConnectionNode(&&) ctor

2016-01-26  Aurelien Jacobs  <aurel@gnuage.org>

	Fix definition of VARIANT_TYPE_DICT_ENTRY to match header declaration

	Bug #761046

2016-01-25  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::PropertyBase: Make custom properties more flexible

	* glib/glibmm/property.[h|cc]: Relax the requirements on Property<>.
	Now custom properties don't have to be direct data menbers of the containing
	type. Instead, all objects of a class must instantiate the same properties
	in the same order. This patch is an improved version of a patch supplied by
	Povilas Kanapickas <povilas@radix.lt>. Bug #731484.

2016-01-21  Marcin Kolny  <marcin.kolny@gmail.com>

	Glib::SignalProxy: use variadic templates

	* .gitignore: signalproxy.h file is no more generated, so it has been
	removed from ignored list.
	* gio/src/application.{ccg|hg}: don't use old-style SignalProxy class.
	* glib/glibmm/filelist.am: add signalproxy.h file to distributed files
	list.
	* gio/glibmm/signalproxy.h: add implementation of SignalProxy and
	SignalProxyDetailedAnyType.
	* glib/src/filelist.am:
	* glib/src/signalproxy.h.m4: signalproxy.h is not generated, thus
	remove m4 file.
	* tools/m4/signal.m4: use new SignalProxy class instead of
	SignalProxy*.

2016-01-21  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Use Glib::c_str_or_nullptr()

	Use Glib::c_str_or_nullptr(s) instead of s.empty() ? nullptr : s.c_str().

2016-01-21  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Glib::c_str_or_nullptr()

	* glib/glibmm/utility.h: Add Glib::c_str_or_nullptr().
	Code such as "s.empty() ? nullptr : s.c_str()" can be replaced by
	Glib::c_str_or_nullptr(s) when C functions are called, where s is
	a std::string or a Glib::ustring.
	A very small part of a fix of bug #755245.

2016-01-20  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Threads example: Fix build on Visual Studio

	We need to include <memory> for unique_* on Visual Studio, and for Visual
	Studio 2013 builds, we need to ensure that glibmmconfig.h is included so
	that noexcept is supported.

	https://bugzilla.gnome.org/show_bug.cgi?id=760612

2016-01-20  Chun-wei Fan  <fanchunwei@src.gnome.org>

	glibmmconfig.h.in: Fix Visual Studio 2013 builds

	The thread_local keyword is only supported natively on Visual Studio 2015,
	so we need to use the Microsoft-specific extension __declspec(thread) for
	supporting thread_local in Visual Studio 2013 builds.

	Also re-organize the Visual Studio 2013-specific parts a bit so that it is
	clearer to people.

	https://bugzilla.gnome.org/show_bug.cgi?id=760612

2016-01-18  Murray Cumming  <murrayc@murrayc.com>

	utility: Correct the deprecation ifndef.

	And correct the documentation.

2016-01-18  Aurelien Jacobs  <aurel@gnuage.org>

	Glib::ustring fix gcc 6 warning in public header

	Avoid a warning when compiling with gcc 6 with -Wmisleading-indentation.
	Bug #760641.

2016-01-18  Murray Cumming  <murrayc@murrayc.com>

	fix the build

	I was editing the generated files. Silly me.

2016-01-18  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .docs.xml files.

2016-01-18  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .defs files.

2016-01-18  Murray Cumming  <murrayc@murrayc.com>

	Replace ScopedPtr with make_unique_ptr_gfree().

	Using std::unique_ptr. ScopedPtr is now deprecated.
	Bug #760223

2016-01-14  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::ustring: Add move operators

	Bug #760282

2016-01-11  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	h2def.py: Accept parameter names beginning with const

	h2def.py misunderstood function declarations where the name of a parameter
	begins with const, e.g. ClutterBindConstraint *constraint.
	https://mail.gnome.org/archives/gtkmm-list/2016-January/msg00004.html

2016-01-07  Murray Cumming  <murrayc@murrayc.com>

	Put deprecation ifdefs around GLIBMM_INITIALIZE_STRUCT.

	It is already deprecated.

2015-12-24  Murray Cumming  <murrayc@murrayc.com>

	C++11: Replace virtual keyword with override keyword on destructors.

	This ensures that the base class is really virtual.

2015-12-24  Murray Cumming  <murrayc@murrayc.com>

	example: Remove unnecessary virtual keywords on destructors.

2015-12-24  Murray Cumming  <murrayc@murrayc.com>

	C++11: gmmproc: GObject/GInterface: Use override on destructor.

	Don't repeat the virtual declaration from Glib::ObjectBase's destructor.
	Instead use override to show that we expect the base destructor to
	be virtual.

2015-12-18  Murray Cumming  <murrayc@murrayc.com>

	2.47.4

2015-12-11  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::ustring: Don't allow comparison to 0

	* glib/glibmm/ustring.h: Don't allow comparison of a ustring to an integer.
	Bug #572978.

2015-12-06  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	examples/network: Improve the time-out functionality

	* examples/network/socket-client.cc:
	* examples/network/socket-server.cc: Store the thread pointer in a
	std::unique_ptr. Then the thread is always joined and deleted. Stop the thread
	immediately in case of error, or if the user requests end of transmission.

2015-12-05  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix the build with --disable-deprecated-api

	* examples/thread/threadpool.cc: If --disable-deprecated-api, just print a
	message and exit.
	* gio/src/<several>.hg: Add _CONFIGINCLUDE(giommconfig.h).
	* gio/src/menuitem.ccg: Add a missing _DEPRECATE_IFDEF_START/_END pair.
	* glib/glibmm/sarray.h:
	* glib/glibmm/threadpool.[cc|h]: #include <glibmmconfig.h> before
	ifndef GLIBMM_DISABLE_DEPRECATED.
	* glib/src/filelist.am: Remove glibmm_files_deprecated_hg. List deprecated
	files in glibmm_files_any_hg.

	The config file must be included before #ifndef xxx_DISABLE_DEPRECATED both
	in the .h file and in the .cc file, or else deprecated API is not properly
	disabled by --disable-deprecated-api.

2015-12-05  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _CONFIGINCLUDE() + _IS_DEPRECATED = #include in .cc file

	* tools/m4/base.m4: If both _CONFIGINCLUDE() and _IS_DEPRECATED are used
	in the .hg file, then #include <xxxconfig.h> is included before
	ifndef xxx_DISABLE_DEPRECATED in the generated .cc file. This is useful if
	the mm module is configured with --disable-deprecated-api, because
	xxx_DISABLE_DEPRECATED is defined in the config file. The .cc file can be
	compiled, but does not generate any executable code. No need to exclude it
	from the build by tampering with the filelist.am file.

2015-12-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::ActionMap: Fix the ref count in lookup_action_vfunc()

	* gio/src/actionmap.hg: Add refreturn in _WRAP_VFUNC(lookup_action).
	Bug #758813.

2015-12-01  T Sailor  <t.sailer@alumni.ethz.ch>

	Dispatcher: #include <mutex> in Windows builds.

	Bug #758894

2015-11-30  Murray Cumming  <murrayc@murrayc.com>

	Threads: Mark the doxygen module as deprecated.

2015-11-29  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Destructor: Use noexcept in the implementation too.

	Bug #758798 (Émeric MASCHINO)

2015-11-29  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	glibmm/main: More declarations within #ifndef GLIBMM_DISABLE_DEPRECATED

	* glib/glibmm/main.h: Include 'namespace Threads' declarations only if
	GLIBMM_DISABLE_DEPRECATED is not defined.
	* glib/glibmm/main.cc: Inlude glibmm/threads.h only if
	GLIBMM_DISABLE_DEPRECATED is not defined.
	Use G_GNUC_[BEGIN|END]_IGNORE_DEPRECATIONS instead of undefining
	G_DISABLE_DEPRECATED.

2015-11-28  Murray Cumming  <murrayc@murrayc.com>

	2.47.3.1

2015-11-28  Murray Cumming  <murrayc@murrayc.com>

	Dispatcher: Actually delete thread_specific_instance_.

	As suggested by Kjell here:
	https://bugzilla.gnome.org/show_bug.cgi?id=757674#c17

2015-11-28  Murray Cumming  <murrayc@murrayc.com>

	Use thread_local instead of Glib::Threads::Private.

	See https://bugzilla.gnome.org/show_bug.cgi?id=757674#c15

2015-11-28  Murray Cumming  <murrayc@murrayc.com>

	2.47.3

2015-11-28  Murray Cumming  <murrayc@murrayc.com>

	Threads: Add @deprecated to more API.

2015-11-28  Murray Cumming  <murrayc@murrayc.com>

	Threads::Private: Suggest use of thread_local.

2015-11-28  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Use std::unique_lock::unlock() instead of release()

	* glib/blibmm/main.cc:
	* gio/src/application.ccg: Glib::Threads::Mutex::Lock::release() should have
	been replaced by std::unique_lock::unlock(). std::unique_lock::release() does
	not unlock the mutex. Bug #757674.

2015-11-27  Murray Cumming  <murrayc@murrayc.com>

	Remove now-unnecessary includes of glibmm/threads.h.

2015-11-27  Murray Cumming  <murrayc@murrayc.com>

	Dispatcher: Use std::mutex instead of Glib::Threads::Mutex.

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	Deprecated Glib::ThreadPool.

	Because we should encourage the use of 2 different thread APIs at
	the same time. Maybe std::async() does what a thread pool would do?
	If so, we should improve the deprecation documentation.

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	Glib::Main: Use std::mutex instead of Glib::Threads::Mutex.

	And std::unique_lock instead of Glib::Threads::Mutex::Lock.

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Use std::mutex instead of Glib::Threads::Mutex.

	And std::unique_lock instead of Glib::Threads::Mutex::Lock.
	Some of these could probably be replaced by std::lock_guard, in
	a smaller scope, instead of using release(), but this is a simpler
	replacement.

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	ObjectBase: Change extra_object_base_data_mutex to a std::mutex.

	Instead of a (now deprecated) Glib::Threads::Mutex*.
	As discussed here:
	https://bugzilla.gnome.org/show_bug.cgi?id=757674#c12

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	Glib::MainContext: Deprecate wait(cond, mutex).

	Because it uses the deprecated Threads API in its API, and doesn't
	seem generally useful.
	As suggested here:
	https://bugzilla.gnome.org/show_bug.cgi?id=757674#c11

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	glibmm_mainloop test: Allocate a thread on the stack.

	As suggested by Kjell Ahlstedt:
	https://bugzilla.gnome.org/show_bug.cgi?id=757674#c10

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	examples/tests: Use simpler std::thread constructor.

	Instead of using a lambda. As suggested by Kjell Ahlstedt:
	https://bugzilla.gnome.org/show_bug.cgi?id=757674#c10

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	thread example: Use std::unique_ptr<> with std::thread.

	As suggested by Andrew Potter:
	https://bugzilla.gnome.org/show_bug.cgi?id=757674#c9

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	resolver example: Use std::mutex instead of G_LOCK_DEFINE_STATIC.

	As noticed by Kjell Ahlstedt:
	https://bugzilla.gnome.org/show_bug.cgi?id=757674#c10

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	tests/glibmm_mainloop: Use the std::thread API instead of Glib::Threads.

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	Network examples: Use std::thread instead of Glib::Threads::Thread.

	Bug #757674

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	examples: dispatcher: Use std::thread and friends.

	Instead of deprecated Glib::Threads::*.

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	thread example: Use std::thread, etc, instead of deprecated Glib::Threads::*.

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	threadpool example: Use std::mutex instead of Glib::Threads::Mutex.

	And std::lock_guard<> instead of Glib::Threads::Mutex::Lock.

2015-11-26  Murray Cumming  <murrayc@murrayc.com>

	Threads: Deprecate in favour of the C++11/C++14 concurrency API.

	Such as std::thread, std::mutex, std::lock_guard, std::condition_variable.

2015-11-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Tests: More nullptr instead of 0

2015-11-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio: More nullptr instead of 0

2015-11-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib: More nullptr instead of 0

2015-11-23  Murray Cumming  <murrayc@murrayc.com>

	Regenerate *_docs.xml files.

2015-11-23  Murray Cumming  <murrayc@murrayc.com>

	Regenerate Glib defs.

2015-11-23  Murray Cumming  <murrayc@murrayc.com>

	Regenerate GIO .defs.

2015-11-22  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Use nullptr instead of 0,NULL,zero in some comments

	* tools/pm/DocsParser.pm: Replace NULL by nullptr, when C comments are
	converted to C++ comments. In many cases "an empty string" would be a better
	replacement text, but it's difficult to automatically decide when "nullptr"
	is not correct.
	* tools/pm/Output.pm: Use nullptr where appropriate in comments.

2015-11-22  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Fix a test in Output.pm::get_ctor_properties()

	* tools/pm/Output.pm: A test whether a parameter is optional was messed up
	in such a way that it was always true. The test is just a precaution.
	In all normal cases the result of a correct test is also true. Probably
	the error has not affected the code generation from any correct .hg file.

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	2.46.2

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	Examples: Use nullptr instead of 0.

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	Gio: Use of nullptr instead of 0.

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus: Use nullptr instead of 0.

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	Glib: More nullptr instead of 0.

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	More use of nullptr instead of 0.

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	Yet more nullptr instead of 0.

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	RefPtr: Use nullptr instead of 0.

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	More use of nullptr instead of 0.

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	Mention nullptr instead of NULL in documentation and some comments.

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	More use of nullptr instead of 0 or NULL.

2015-11-20  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: Use nullptr instead of 0.

2015-11-19  Murray Cumming  <murrayc@murrayc.com>

	Replace static_cast<char*>(0) with nullptr.

2015-11-19  Murray Cumming  <murrayc@murrayc.com>

	Revert "Use -Wzero-as-null-pointer-constant with --enable-warnings=fatal"

	This reverts commit 1755af6e6dc62157737c18e3ed8f5beb4b06e25a.
	Because it breaks the build do the (correct in C) use of NULL for null
	pointers in the glib headers.
	See https://bugzilla.gnome.org/show_bug.cgi?id=757979#c1

2015-11-19  Murray Cumming  <murrayc@murrayc.com>

	Use nullptr intead of 0 in some generated code.

2015-11-19  Murray Cumming  <murrayc@murrayc.com>

	Use nullptr instead of 0.

2015-11-12  Murray Cumming  <murrayc@murrayc.com>

	Use -Wzero-as-null-pointer-constant with --enable-warnings=fatal

	But see mm-common bug #757979 .

2015-11-08  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix the build with --disable-deprecated-api

	* glib/glibmm/containers.h: Inlude glibmm/wrap.h, which is not included via
	sarray.h, when SArray is deprecated.

2015-11-06  Murray Cumming  <murrayc@murrayc.com>

	StreamIOChannel: Use the override keyword.

2015-10-31  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	ObjectBase, Object, Interface: Fix move constructors and move assignments

	* glib/glibmm/interface.cc: Don't call ObjectBase's move assignment operator
	from Interface's move assignment operator.
	* glib/glibmm/object.cc: Perform of job of sigc::trackable's move constructor
	in Object's move constructor.
	* glib/glibmm/objectbase.cc: Move constructor: Set gobject_ = nullptr.
	Fix the assignment of cpp_destruction_in_progress_.
	Move assignment: Add self-assignment guard. Avoid the risk of accidentally
	deleting *this. Let a call to initialize_move() do most of the job.
	* tests/glibmm_interface_move/main.cc:
	* tests/glibmm_object_move/main.cc:
	* tests/glibmm_objectbase_move/main.cc: Really test move assignment.
	Test that the wrapped C object has been moved, and not copied.
	Bug #756962.

2015-10-26  Murray Cumming  <murrayc@murrayc.com>

	C++11: Gio::*Source: Use the override keyword.

2015-10-26  Murray Cumming  <murrayc@murrayc.com>

	C++11: Glib::Error::what(): Use the override keyword.

2015-10-19  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Revert "Add Glib::c_str_or_null()"

	This reverts commit bf69428947398356c86c43e2be4f26dce03583dc.

	Let's wait with this commit until there is a better reason
	to branch glibmm-2-46. Didn't notice that master is a stable
	branch right now.

2015-10-19  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Glib::c_str_or_null()

	* glib/glibmm/utility.h: Add Glib::c_str_or_null().
	Code such as "s.empty() ? nullptr : s.c_str()" can be replaced by
	Glib::c_str_or_null(s) when C functions are called, where s is a std::string
	or a Glib::ustring. A very small part of a fix of bug #755245.

2015-09-25  Murray Cumming  <murrayc@murrayc.com>

	Tiny whitespace fix.

2015-09-25  Murray Cumming  <murrayc@murrayc.com>

	NEWS: List what's new in 2.46.

2015-09-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix the build with --enable-warnings=fatal

	* glib/glibmm/objectbase.cc: Cast pointers to void* in call to g_warning().

2015-09-22  Murray Cumming  <murrayc@murrayc.com>

	2.46.1

2015-09-22  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _CLASS_GOBJECT(): Move = deleted stuff to public.

	It doesn't seem useful as private. The other classes already do this
	correctly.

2015-09-21  Murray Cumming  <murrayc@murrayc.com>

	2.46.0

2015-09-21  Chun-wei Fan  <fanchunwei@src.gnome.org>

	MSVC Builds: Fix Last Revert on GLib::Weakref<>

	We still need to copy the GLib::Weakref<> headers..., as my last commit
	accidently removed.

2015-09-21  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Revert "MSVC Projects: Add Newly-added Sources"

	This is a follow commit for commit 6259a46, which the Gio::ListModel is
	not ready yet.

	This reverts commit 6bb6387237ec8d5d36cdbd44fbadfe3c37392616.

2015-09-21  Murray Cumming  <murrayc@murrayc.com>

	DBus::Connection::signal_subscribe(): Pass nullptr instead of "".

	Because that's what the C documentation requires, and the implementation
	doesn't accept "" to mean the same thing, though that would be
	convenient:
	https://developer.gnome.org/gio/stable/GDBusConnection.html#g-dbus-connection-signal-subscribe

	Noticed by Christof Meerwald on gtkmm-list.

2015-09-20  Murray Cumming  <murrayc@murrayc.com>

	Application: Remove bind/unbind_busy_property().

	Leaving it commented out with a TODO, because I'm not sure if we
	want to pass the ObjectBase by RefPtr, or not, or both. Let's leave this
	until we have some use for it.

2015-09-20  Murray Cumming  <murrayc@murrayc.com>

	Revert "Added Gio::ListModel"

	Because it is not ready yet.
	This reverts commit dd19e282d249dc6009834dad9c2af99039675348.

2015-09-20  Murray Cumming  <murrayc@murrayc.com>

	gio_methods.defs: Add g_list_store_new().

	For some reason this wasn't generated.

2015-09-20  Murray Cumming  <murrayc@murrayc.com>

	Add ListStore to extra objects .defs.

2015-09-20  Murray Cumming  <murrayc@murrayc.com>

	Add GListStore .defs

2015-09-17  Chun-wei Fan  <fanchunwei@src.gnome.org>

	MSVC Projects: Add Newly-added Sources

	There were some more sources that were added along the way that needs to
	be built and "installed" for glibmm and giomm, so don't miss out on them.

2015-09-16  Murray Cumming  <murrayc@murrayc.com>

	Added Gio::ListModel

2015-09-16  Murray Cumming  <murrayc@murrayc.com>

	Generate signal/property defs for GListModel.

2015-09-16  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::RefPtr: Enable disallowance with certain classes

	* glib/glibmm/refptr.h: Make it possible to stop use of RefPtr with
	certain classes. Bug #755048.

2015-09-15  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Update .gitignore

2015-09-15  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::WeakRef: Add noexcept

	* glib/glibmm/weakref.h: Add noexcept.
	* glib/glibmm.h: Add weakref.h.
	* tests/glibmm_weakref/main.cc: Remove #include <glibmm/weakref.h>.
	Bug #583399.

2015-09-15  Murray Cumming  <murrayc@murrayc.com>

	2.45.80

2015-09-15  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Glib::WeakRef<>

	* glib/glibmm/filelist.am: Add weakref.h.
	* glib/glibmm/weakref.h: New file.
	* glib/glibmm.h: Add weakref.h. (Not yet. I'll do it before I push weakref.h.)
	* tests/Makefile.am: Add test case glibmm_weakref.
	* tests/glibmm_weakref/main.cc: New test case. Bug #583399.
	Thanks to worknesday, who attached a first version of WeakRef to
	the bug report. Bug #583399

2015-09-14  Murray Cumming  <murrayc@murrayc.com>

	TlsClientConnection: Add copy_session_state().

2015-09-14  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Add bind/unbind_busy_property() and set_state_hint().

2015-09-14  Murray Cumming  <murrayc@murrayc.com>

	Application: Ignore g_application_add_main_option().

2015-09-11  Chun-wei Fan  <fanchunwei@src.gnome.org>

	MSVC Builds: Fix "Installation" and giomm Builds

	Some newly-added sources were missed from the giomm projects, so make up
	for them.  Also, "install" the headers that were added during the last 2
	development cycles.

2015-09-10  Chun-wei Fan  <fanchunwei@src.gnome.org>

	MSVC Builds: Improve Build Speed and Debugging Experience

	Use multiprocessor compilation, which can cut down build times by quite a
	bit, and use the /d2Zi+ to put more useful info into the .pdb's in release
	builds.

2015-09-09  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix the build after modification of timer.cc

	If glib.h is included, it must be included after glibmm.h, to give thread.h a
	chance to include glib.h with G_DISABLE_DEPRECATED undefined. Bug #753271.

2015-09-09  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Update Visual Studio Info in README.win32

	The information in there regarding Visual Studio builds needs to be
	up-to-date, especially as we dropped support for Visual Studio 2012 and
	earlier, so update the info.  It is no longer necessary, nor is it
	recommended, to use the /vd2 option with later Visual Studio versions, as
	it causes the code to be built incorrectly and causes crashes.

2015-09-09  Chun-wei Fan  <fanchunwei@src.gnome.org>

	MSVC Builds: Move MSVC_Net2010 to MSVC_Net2013

	This moves all the project files that were in MSVC_Net2010/ to
	MSVC_Net2013/, as we can't build glibmm with anything before Visual Studio
	2013.  Note that the project files themselves have already been updated
	to be Visual Studio 2013-compatible.

	Also drop the MSVC_Net2005 and MSVC_Net2008 directories as the projects
	there are simply not enough to build glibmm at all.

2015-09-09  Chun-wei Fan  <fanchunwei@src.gnome.org>

	glibmm: More Fixes on Building on Visual Studio 2013

	timer.cc and random.cc will need to include more of glibmm's headers so
	that they will be able to use _NOEXCEPT during the build of glibmm.

	https://bugzilla.gnome.org/show_bug.cgi?id=753271

2015-09-09  Chun-wei Fan  <fanchunwei@src.gnome.org>

	glib/glibmmconfig.h: Allow Build on Visual Studio 2013

	Visual Studio 2013 supports enough of C++-11 to support the build of
	glibmm, except that it does not support noexcept (which is something
	that Visual Studio 2015 supports).  Define noexcept as _NOEXCEPT on
	Visual Studio 2013, so that one can build glibmm on it.

	Note that since later Visual Studio versions do not allow one to
	define known keywords like noexcet as macros, we need to define
	_ALLOW_KEYWORD_MACROS to workaround this limitation.

	https://bugzilla.gnome.org/show_bug.cgi?id=753271

2015-09-03  Murray Cumming  <murrayc@murrayc.com>

	2.45.70

2015-09-03  Murray Cumming  <murrayc@murrayc.com>

	Require the latest libsigc++

	So we can use the trackable move operations.

2015-09-01  Murray Cumming  <murrayc@murrayc.com>

	Revert "Deprecate Regex now that we have std::regex."

	I didn't mean to push this yet. Maybe we will never deprecate this
	if it offers better UTF-8 support than std::regex.
	This reverts commit a1f0b1a06095d81b6a5b8255b818b1c35c92df29.

2015-09-01  Murray Cumming  <murrayc@murrayc.com>

	ObjectBase: move operations: Call the sigc::trackable base.

2015-09-01  Murray Cumming  <murrayc@murrayc.com>

	IOChannel: move operations: Call the base sigc::trackable.

2015-09-01  Murray Cumming  <murrayc@murrayc.com>

	Markup: Add move operations

2015-09-01  Murray Cumming  <murrayc@murrayc.com>

	resolver example: Use std:stoul instead of stdstrtoul

2015-09-01  Murray Cumming  <murrayc@murrayc.com>

	resolver example: Use std::strtoul instead of strtoul.

2015-09-01  Murray Cumming  <murrayc@murrayc.com>

	Deprecate Regex now that we have std::regex.

2015-08-31  Murray Cumming  <murrayc@murrayc.com>

	RefPtr: Make everything else noexcept too.

2015-08-31  Murray Cumming  <murrayc@murrayc.com>

	RefPtr: Make destructor, move operations and swap() noexcept.

2015-08-31  Murray Cumming  <murrayc@murrayc.com>

	Interface: Make move operations noexcept.

2015-08-31  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: Make all move operations noexcept.

	This is useful for standard containers, for instance.

2015-08-31  Murray Cumming  <murrayc@murrayc.com>

	Make destructors explicitly noexcept.

	Destructors are already noexcept, but this makes that even clearer.
	This might be foolish.

2015-08-31  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: Make destructors explicitly noexcept.

2015-08-26  Daniel Elstner  <daniel.kitta@gmail.com>

	docs: Exclude bogus documentation symbols

	* docs/reference/Doxyfile.in (EXCLUDE_SYMBOLS): Add bogus symbols
	which appeared in the generated documentation but shouldn't.

2015-08-26  Daniel Elstner  <daniel.kitta@gmail.com>

	Update list of files git should ignore

2015-08-26  Daniel Elstner  <daniel.kitta@gmail.com>

	docs: Update configuration for Doxygen 1.8.9.1

	* docs/reference/Doxyfile.in: Regenerate with Doxygen 1.8.9.1.

2015-08-26  Daniel Elstner  <daniel.kitta@gmail.com>

	docs: Include unused headers in reference documentation

	* glib/glibmm/filelist.am (glibmm_files_all_h): New variable
	that holds all header files, even those which are not included
	in the build.
	* gio/giomm/filelist.am (giomm_files_all_h): ditto.
	* docs/Makefile.am (doc_input): Make Doxygen parse all public
	header files, including those which are unused in the current
	build configuration.  This ensures that the documentation covers
	all platforms.

2015-08-26  Daniel Elstner  <daniel.kitta@gmail.com>

	docs: Define G_OS_UNIX and G_OS_WIN32 unconditionally

	* docs/reference/Doxyfile.in (PREDEFINED): Always define both
	G_OS_UNIX and G_OS_WIN32, so that the generated documentation
	covers all platforms.

2015-08-23  Murray Cumming  <murrayc@murrayc.com>

	C++11: _CLASS_GENERIC classes: Add move operations.

	These don't have much in common with each other.
	Like most of our move operations, they are completely untested,
	though they could be.

2015-08-23  Murray Cumming  <murrayc@murrayc.com>

	C++11: Use = delete instead of private copy operations.

	There were still some left in the .hg/.ccg files.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	2.45.52

	I never released 2.45.1. I had meant to rebase the version change
	to be the latest commit  but forgot to do that.
	I might not release this one just yet as a tarball either. I just
	need a version number for the other *mm projects to check for.
	Releasing a tarball might cause disruption if these latest changes
	cause problems.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	tests: Add glibmm_interface_move.

	This code got unpleasantly big because I wanted to test a C++
	class that wraps a GObject while also implementing a C++ Interface
	that wraps a GInterface that the GObject implements. But it seems
	to work.

	However, the code to test a raw TestInterface is commented out
	because the move constructor does not pass the test. I am not sure
	if this should even be expected to work:
	Interface interface = std::move(object);
	or:
	Base base = std::move(derived);

	Surely that would lose the data (and virtual method table) from the
	Derived class anyway?

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	Interface: Move constructor: Add comment about not calling initialize_move().

	I am not entirely sure that this is the right thing to do.
	See my comment in the next commit about the test.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	tests: Split glibmm_object_move into 2 files.

	To test ObjectBase separately.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	Object: Move constructor: Use initialize_move().

	Because the call to the ObjectBase move constructor will not
	actually happen. See the comment for the previous commit.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	ObjectBase: Add initialize_move().

	And _move_current_wrapper() for it to use.
	Object and Interface can use initialize_move() in their move
	constructors. They need to do this because their calls to the
	ObjectBase move constructors will not actually run, at least
	when in a derived class, because ObjectBase is a virtual base
	class (for use in virtual inheritance).
	We have initialize() for much the same reason, for the regular
	constructors.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	2.45.51

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _CLASS_BOXEDTYPE_STATIC: Add copy operations.

	These were previously implicitly generated by the compiler,
	but are no longer generated because we now have explicit move
	operations.
	Being explicit seems like a better way to preserve ABI anyway.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _CLASS_BOXEDTYPE: Make the static swap() noexcept.

	This is generally a good idea because it lets standard containers
	use the swap() while maintaining their own noexcept.

	This would not be an ABI break, hopefully, because this is an inline
	method in the header anyway.
	We have recently added the noexcept to the member swap() method,
	but hopefully that is not an ABI break either. Removing noexcept
	would be an ABI break, I think.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _CLASS_OPAQUE_COPYABLE: Generate static swap().

	As in _CLASS_BOXEDTYPE().
	This can then be used by std::swap(), used by standard containers.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _CLASS_BOXEDTYPE_STATIC(): Add move operations.

	Roughly as in _CLASS_BOXEDTYPE().

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _CLASS_OPAQUE_COPYABLE(): Add move operations.

	The same as in _CLASS_BOXEDTYPE().

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	C++11: Mark all _CLASS_OPAQUE_REFCOUNTED classes as final.

	Because _CLASS_OPAQUE_REFCOUNTED already generates a comment
	telling us not to derive from them, presumably because they can
	only be instantiated by reinterpret_cast<>ing a base C struct.

	Ideally, _CLASS_OPAQUE_REFCOUNTED would add the final keyword,
	but the class line is is not generated, so that would be a little
	difficult.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _CLASS_OPAQUE_REFCOUNTED: Use = delete for the default constructor.

	And move it (and the = deleted copy operations) to public.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	Add simple test for Object move.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	Gio::FileIcon: Remove unncessary IMPLEMENTS_INTERFACE

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _CLASS_GOBJECT(): Move operations: Call interfaces' move operations.

	The (virtual base) ObjectBase's move operations will not be called
	multiple times, so this might be useless, but it seems more complete.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _CLASS_INTERFACE(): Generate move operations.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _CLASS_GOBJECT(): Generate move operations.

	Generate move constructor and move assignment operator.
	These might never be used, but it seems generally wise to have them.

2015-08-22  Murray Cumming  <murrayc@murrayc.com>

	Glib::ObjectBase, Object, Interface: Add move operators.

	Add move constructors and move assignment operators so that derived
	classes can have these too.

2015-08-20  Murray Cumming  <murrayc@murrayc.com>

	2.45.50

2015-08-20  Murray Cumming  <murrayc@murrayc.com>

	Regenerate _docs.xml files.

2015-08-20  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .defs files.

2015-08-15  Murray Cumming  <murrayc@murrayc.com>

	Boxed types: Declare move operations as noexcept.

	Because this can let standard containers more efficiently reallocate
	memory while still preserving their own noexcept guarantees.
	I found out about this in Scott Meyer's Effective Modern C++11:
	Item 14.
	Likewise make swap() noexcept because we use it in our noexcept
	move assignment operator.

2015-08-15  Murray Cumming  <murrayc@murrayc.com>

	Regenerate *_docs.xml files.

2015-08-12  Murray Cumming  <murrayc@murrayc.com>

	Gio::SocketService: Add active property.

2015-08-12  Murray Cumming  <murrayc@murrayc.com>

	Gio::NetworkMonitor: Add get_network_metered() and property.

2015-08-12  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .defs

2015-08-07  Marcin Kolny  <marcin.kolny@gmail.com>

	Glib::RefPtr: minor release() improvements.

	https://bugzilla.gnome.org/show_bug.cgi?id=752812

	* glib/glibmm/refptr.h: add warning in a comment, replace
	warn_unused_result attribute with corresponding GLib macro.

2015-08-05  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio Projects: Update to 2013

	The latest glibmm requires enough C++11 to be supported so that it can be
	built, which is Visual Studio 2013 for the Visual Studio compilers.  This
	updates the 2010 projects (and their settings) to 2013.  The folder in
	which the projects reside in need to be updated, and we would preferably
	need to make the projects compatible with Visual Studio 2015, from the 2013
	projects, which is not too different from the 2010 ones.

2015-08-01  Murray Cumming  <murrayc@murrayc.com>

	RefPtr: move assignment operator: Use swap().

	This is not actually less efficient - the code is inline anyway.
	Bug #752876

2015-07-30  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Remove unnecessary _IGNORE()

	* gio/src/inputstream.hg:
	* gio/src/notification.hg:
	* gio/src/outputstream.hg:
	* gio/src/resolver.hg:
	* gio/src/socketconnection.hg: Remove _IGNORE() directives that have become
	unnecessary when the .defs files don't contain information from private.h
	files. gmmproc warns about unnecessary _IGNORE().

2015-07-30  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Regenerate gio_methods.defs, glib_functions.defs, gobject_functions.defs

	Regenerated without information from private.h files.

2015-07-30  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	tools/gen_scripts: Don't read private.h files

	* tools/gen_scripts/gio_generate_enums.sh:
	* tools/gen_scripts/gio_generate_methods.sh:
	* tools/gen_scripts/glib_generate_enums.sh:
	* tools/gen_scripts/glib_generate_methods.sh: Don't collect information
	from header files with names ending in private.h.

2015-07-30  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Remove gio/src/gio_unix_functions.defs

	* gio/src/gio.defs:
	* gio/src/filelist.am: Remove gio_unix_functions.defs.
	* gio/src/gio_unix_functions.defs: Remove the whole file.
	All data in this file is also included in gio_methods.defs.

2015-07-30  Marcin Kolny  <marcin.kolny@flytronic.pl>

	generate_wrap_init.pl: Allow to use nested namespaces for whole module.

	https://bugzilla.gnome.org/show_bug.cgi?id=753013

	* tools/generate_wrap_init.pl.in: add support for nested namespaces in
	--namespace parameter, i.e. --namespace=Gst::Bad. It requires to
	store all classes from module at least in Gst::Bad namespace, but
	allows to use this namespace in wrap_init.h class.

2015-07-28  Murray Cumming  <murrayc@murrayc.com>

	tests/glibmm_refptr: Add simpler tests for move constructor/operator=.

	The *with_parent* tests test much the same thing, but these ones
	are simpler, based on Marcin Kolny's simpler tests for the
	universal reference versions.

2015-07-28  Murray Cumming  <murrayc@murrayc.com>

	tests/glibmm_refptr: Slight improvement.

	test_refptr_universal_reference_move_constructor(): Make even
	more sure that its the copy constructor that the compiler uses.

2015-07-27  Marcin Kolny  <marcin.kolny@gmail.com>

	Glib::RefPtr: add missing constructor and assignment operator

	* glib/glibmm/refptr.h: add move constructor and move assignment
	operator which allow to set underlying object to castable type.
	* tests/glibmm_refptr/main.cc: add tests for move constructor and
	move assignment operator containing universal reference as an
	argument.

2015-07-27  Marcin Kolny  <marcin.kolny@gmail.com>

	Glib::RefPtr: add "release()" method

	https://bugzilla.gnome.org/show_bug.cgi?id=752812

	* glib/glibmm/refptr.h: "release" method gives an access to managed
	underlying object, releasing RefPtr's ownership. Method is useful
	e.g. in wrappers of functions containing transfer-full arguments.

2015-07-27  Murray Cumming  <murrayc@murrayc.com>

	tests/glibmm_refptr: Correct the move constructor test.

	The && was const, which was a silly typo. Thanks to Marcin Kolny
	for noticing.

2015-07-27  Murray Cumming  <murrayc@murrayc.com>

	Add tests/glibmm_refptr.

	To test refcounting, though I'm not sure that the test for the
	move constructor is quite right.

2015-07-27  Murray Cumming  <murrayc@murrayc.com>

	tls_client test: Use gnome.org instead of google.org

	Because I recently find that the connection often, but not always,
	times out. Maybe Google has changed something about its servers.
	I was seeing this output when running the test:

	$ ./giomm_tls_client/test
	Successfully resolved address of test host 'www.google.com'.
	First address of test host is 2a00:1450:4016:802::1011.
	Could not connect socket to 2a00:1450:4016:802::1011:443. Exception: Connection timed out

2015-07-27  Murray Cumming  <murrayc@murrayc.com>

	Correct a comment.

2015-07-24  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Update glib_enums.defs.patch, add gio_enums.defs.patch

	* glib/src/glib_enums.defs.patch: G_IO_FLAG_IS_WRITEABLE is an enum constant
	since 2013-02-04. No patch needed for that any more.
	* gio/src/gio_enums.defs.patch: New file. Such a file has been useful for a
	long time. It should have been stored in git long ago.

2015-07-24  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Update scripts that generate .defs files

	* tools/gen_scripts/gio_generate_enums.sh:
	* tools/gen_scripts/gio_generate_extra_defs.sh:
	* tools/gen_scripts/glib_generate_enums.sh:
	* tools/gen_scripts/glib_generate_methods.sh: These scripts patch the
	generated .defs files. Update them like gtkmm's gtk_generate_extra_defs.sh,
	i.e. more comments and an option to regenerate the patch file.

2015-07-24  Murray Cumming  <murrayc@murrayc.com>

	2.45.41

2015-07-24  Murray Cumming  <murrayc@murrayc.com>

	Revert "Glib::List_Iterator (and similar): Deprecate via ifdef."

	This reverts commit 05610cec2ccbc54f20fcc3e995e41649f21c5714.

	See the commit in the previous commit about gtkmm-2.24. This is a
	temporary act of kindness to Inkscape.

2015-07-24  Murray Cumming  <murrayc@murrayc.com>

	HelperList: Don't use ifndef GLIBMM_DISABLE_DEPRECATED around this.

	To avoid breaking the gtkmm-2.24 build with --enable-warnings=fatal,
	and the build of apps that do this too.
	However, those apps (Inkscape) need to stop using that ancient
	deprecated version of gtkmm.
	Bug #752797

2015-07-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	test_scripts/testheaders.sh: Add -std=c++11 in the g++ commands

2015-07-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Improve processing of documentation

	* tools/pm/Output.pm:
	* tools/pm/DocsParser.pm: When a C++ parameter name differs from the
	corresponding C parameter name, change the name in the documentation.
	The translation of argument names works for _WRAP_METHOD() and _WRAP_SIGNAL().
	Bug #752469

2015-07-22  Murray Cumming  <murrayc@murrayc.com>

	2.45.40

	I named the previous version 2.45.31 instead of 2.45.3.1, so we have to
	use a number bigger than 31. Let's say that 40 is like 4 and we'll
	use 50 for the next one instead of 5. Sorry.

2015-07-22  Murray Cumming  <murrayc@murrayc.com>

	2.45.4

2015-07-19  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Add the shutdown signal.

	For some reason, gmmproc didn't warn about this unwrapped signal.
	Bug #752600 (Ben)

2015-07-19  Murray Cumming  <murrayc@murrayc.com>

	C++11: Replace throw() with noexcept.

2015-07-19  Murray Cumming  <murrayc@murrayc.com>

	Glib::RefPtr: Move assignment operator: Unref the previous object.

2015-07-18  Murray Cumming  <murrayc@murrayc.com>

	RefPtr: Add move constructor and move assignment operator.

2015-07-18  Murray Cumming  <murrayc@murrayc.com>

	RefPtr<>: Don't mention RefPtr<T_CppObject> when just RefPtr is allowed.

	This seems to be correct and allowed. It makes the code clearer.

2015-07-18  Murray Cumming  <murrayc@murrayc.com>

	C++11: Use = delete instead of private to make classes noncopyable.

2015-07-17  Murray Cumming  <murrayc@murrayc.com>

	Glib::List_Iterator (and similar): Deprecate via ifdef.

	I don't think these have been used since before gtkmm 3.0.
	They were already hidden from the documentation.

2015-07-17  Murray Cumming  <murrayc@murrayc.com>

	IOChannel: Documentation: Mark vfuncs as deprecated.

	Though we cannot hide them via GIOMM_DISABLE_DEPRECATED.

2015-07-17  Murray Cumming  <murrayc@murrayc.com>

	C++11: Use of the override keyword.

2015-07-16  Murray Cumming  <murrayc@murrayc.com>

	C++11: Use nullptr.

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	2.45.31

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	2.45.31

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	Regenerated glib _docs.xml

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	Regenerate glib_functions.defs.

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	Regenerate gio _docs.xml

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	C++11: examples/tests: More use of auto.

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	C++11: More use of auto.

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	C++11: More uses of range-based for.

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	Examples: OptionGroup: Make the args public again to fix the build.

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	examples: Avoid more shadowed variables.

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	C++11: gmmproc: Use of auto in generated files.

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	C++11: Some use of the auto keyword.

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	Avoid shadowed variables.

	Because this generally invites programming errors, though I am
	less concerned about shadowing of method names by parameter or
	variable names, which requires some tedious parameter renaming.

	In MatchInfo::set_gobject() the confusion between take_ownership and
	this.take_ownership does seem to have caused a programming error,
	hopefully now corrected.

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	configure.ac: Use -Wsuggest-override and -Wshadow with --enable-warnings=fatal.

	Although -Wsuggest-override isn't actually available yet in my version
	of g++ (4.9.2).

2015-07-15  Murray Cumming  <murrayc@murrayc.com>

	C++11: Use the override keyword.

2015-07-14  Murray Cumming  <murrayc@murrayc.com>

	configure.ac: Use MM_AX_CXX_COMPILE_STDCXX_11 from mm-common.

	Instead of AX_CXX_COMPILE_STDCXX_11().
	See bug #751432

2015-07-09  Murray Cumming  <murrayc@murrayc.com>

	C++11: examples: more use of auto.

2015-07-09  Murray Cumming  <murrayc@murrayc.com>

	C++11: examples: Use nullptr.

2015-07-09  Murray Cumming  <murrayc@murrayc.com>

	C++11: examples: No need for > > now.

2015-07-09  Murray Cumming  <murrayc@murrayc.com>

	C++11: Use range-based for loops.

2015-07-09  Murray Cumming  <murrayc@murrayc.com>

	C++11: _CLASS_BOXEDTYPE: Generate move constructors and assignment operators.

	Bug #751432

2015-07-09  Murray Cumming  <murrayc@murrayc.com>

	Require C++11.

	configure.ac: Use AX_CXX_COMPILE_STDCXX_11 to check for compiler
	support for C++11 and use it (--std=c++11 for current versions of
	g++).

2015-07-09  Maks Naumov  <maksqwe1@ukr.net>

	Glib::HelperList: fix iterator check in operator[]

	Signed-off-by: Maks Naumov <maksqwe1@ukr.net> Bug #751530.

2015-07-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _WRAP_SIGNAL: Accept apostrophes in a preceding comment

	* tools/pm/Output.pm: If a _WRAP_SIGNAL() is preceded by a Doxygen comment,
	add enough m4 quotes to the comment in the call to _SIGNAL_PROXY().
	If not, the generated code is wrong if the comment contains an apostrophe.
	This bug was probably introduced when I added support for detail_name.

2015-06-30  Murray Cumming  <murrayc@murrayc.com>

	2.45.3

2015-06-29  Murray Cumming  <murrayc@murrayc.com>

	SArray: Deprecate this and remove ifdef0-ed code.

	Nothing seems to use this anymore, so it seems safe to deprecate it.

2015-06-29  Murray Cumming  <murrayc@murrayc.com>

	ArrayHandle: Add a comment about removing this one day.

	We still use it in lots of glibmm API, because glibmm (unlike gtkmm)
	hasn't had an ABI break since 2004.

2015-06-29  Murray Cumming  <murrayc@murrayc.com>

	HelperList: Deprecate this.

	Because nothing uses it anymore. See the previous commit about GP_LIST.

2015-06-29  Murray Cumming  <murrayc@murrayc.com>

	tools/m4/list.m4: GP_LIST: Remove this because nothing uses it.

	I think this has not been used by any *mm projects since gtkmm-2.4

	We can add it back if I am wrong. And we doing new gtkmm-2.4 releases
	is hard enough anyway so there isn't much point in keeping stuff
	around just for that.

2015-06-21  Murray Cumming  <murrayc@murrayc.com>

	Add SettingsSchema, SettingsSchemaKey and SettingsSchemaSource.

	However, these are completely untested, and not all functions
	have been wrapped.

2015-06-21  Murray Cumming  <murrayc@murrayc.com>

	Regenerate gio .defs.

2015-06-21  Murray Cumming  <murrayc@murrayc.com>

	Regenerate glib docs.xml.

2015-06-21  Murray Cumming  <murrayc@murrayc.com>

	Regenerate glib method .defs.

2015-06-17  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Don't disable more deprecation warnings than necessary

	* gio/src/application.hg:
	* gio/src/desktopappinfo.hg:
	* gio/src/file.hg:
	* gio/src/notification.hg:
	* gio/src/settings.[ccg|hg]:
	* gio/src/simpleactiongroup.hg:
	* gio/src/tlsconnection.hg:
	* gio/src/volumemonitor.hg:
	* glib/src/date.hg: Don't #undef G_DISABLE_DEPRECATED or #define
	GLIB_DISABLE_DEPRECATION_WARNINGS. This is unnecessary when deprecated code
	is surrounded by G_GNUC_[BEGIN|END]_IGNORE_DEPRECATIONS. Bug #750379.

2015-06-17  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _WRAP_METHOD: Use G_GNUC_[BEGIN|END]_IGNORE_DEPRECATIONS

	* tools/m4/method.m4: Put G_GNUC_[BEGIN|END]_IGNORE_DEPRECATIONS around
	deprecated code. In most cases it's then not necessary to undef
	[G|GDK|GTK]_DISABLE_DEPRECATED and define
	[GLIB|GDK]_DISABLE_DEPRECATION_WARNINGS. Bug #750379.

2015-06-17  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Thread: Don't disable more deprecation warnings than necessary

	* glib/src/thread.hg: Don't define GLIB_DISABLE_DEPRECATION_WARNINGS in
	the .h file, only in the .cc file. If it's defined in the .h file,
	it disables warnings in every file that includes glibmm/thread.h or glibmm.h.
	Don't include <glibmmconfig.h> in the .cc file. It became unnecessary when
	thread.hg was added to glibmm_files_deprecated_hg in glib/src/filelist.am.
	Bug #750379.

2015-06-08  Murray Cumming  <murrayc@murrayc.com>

	2.45.2

2015-06-04  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	docextract_to_xml.py: Minor fix in internal data

	* tools/defs_gen/docextract.py:
	* tools/defs_gen/docextract_to_xml.py: Keep 'SECTION:' in section names when
	data is stored in a dictionary (map, hash table). As before, don't write it
	to the 'section' elements in the generated xml file.

2015-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Regenerate docs.xml files, excluding some subdirectories

	* tools/gen_scripts/gio_generate_docs.sh:
	* tools/gen_scripts/glib_generate_docs.sh: Add the --no-recursion option
	to the call to docextract_to_xml.py.
	* gio/src/gio_docs.xml: Regenerate without traversing uninteresting
	subdirectories.

2015-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	docextract_to_xml.py: Add support for the --no-recursion option

	* tools/defs_gen/docextract.py:
	* tools/defs_gen/docextract_to_xml.py: Add support for the --no-recursion
	command-line option, meaning that only the specified directories shall be
	traversed, but not their subdirectories.

2015-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix the version numbers in some @newin Doxygen commands

	* gio/src/appinfo.hg: Change @newin{3,2} to @newin{2,30}.
	* gio/src/application.hg:
	* gio/src/networkmonitor.hg:
	* gio/src/simpleiostream.hg:
	* gio/src/tcpwrapperconnection.hg:
	* glib/src/binding.hg: Add 'newin 2,n"' to some _WRAP_PROPERTY().

2015-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Regenerate docs.xml files, including property documentation

	* tools/gen_scripts/gio_generate_docs.sh:
	* tools/gen_scripts/glib_generate_docs.sh: Add the --with-properties option
	to the call to docextract_to_xml.py.
	* gio/src/gio_docs.xml:
	* gio/src/glib_docs.xml: Regenerate with property documentation.

2015-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Fetch property docs from the docs.xml file, if available there

	* tools/pm/DocsParser.pm: Read info from <property> tags.
	* tools/pm/Output.pm: output_wrap_any_property(): Handle 'newin' option.
	Read documentation from DocsParser, if available there, else (like before)
	from the Property object.
	* tools/pm/Property.pm: get_docs(): Handle 'newin' option.
	* tools/pm/WrapParser.pm: on_wrap_any_property(): Add support for the
	'newin "m,n"' option in _WRAP_PROPERTY and _WRAP_CHILD_PROPERTY.

2015-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	docextract_to_xml.py: Distinguish sections from properties

	* tools/defs_gen/docextract.py:
	* tools/defs_gen/docextract_to_xml.py: Don't treat sections as properties.
	Add the --with-sections command-line option. Generate <section> tags.

2015-05-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Settings: Don't use the deprecated "schema" property

	* gio/src/settings.[hg|ccg]: Replace the deprecated "schema" property by
	"schema_id" in constructors.

2015-05-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Settings: Replace connect_changed() by signal_changed(key)

	* gio/src/settings.[hg|ccg]: Add signal_changed(key). Remove connect_changed().
	* examples/settings/settings.cc: Test signal_changed(key). Bug #749034.

2015-05-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _WRAP_SIGNAL: Add support for detail_name

	* tools/m4/signal.m4:
	* tools/pm/Output.pm:
	* tools/pm/WrapParser.pm: Add support for optional 'detail_name $name' and
	'two_signal_methods' parameter in _WRAP_SIGNAL. Bug #749034.

2015-05-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Glib::SignalProxyDetailed

	* glib/glibmm/signalproxy.cc:
	* glib/src/signalproxy.h.m4: Add SignalProxyDetailed and
	SignalProxyDetailed[0-6]. Bug #749034.

2015-05-21  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _WRAP_SIGNAL: Fix the exception_handler parameter

	* tools/m4/signal.m4: Fix the exception_handler parameter. It was added as
	a result of bug #735132, but the code was enough changed after it was copied
	from vfunc.m4.

2015-05-08  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix the version numbers in some @newin Doxygen commands

	* gio/src/application.hg:
	* gio/src/dbusintrospection.hg:
	* gio/src/memoryinputstream.hg:
	* gio/src/networkmonitor.hg:
	* gio/src/notification.hg:
	* gio/src/resource.hg:
	* gio/src/tcpwrapperconnection.hg:
	* glib/src/binding.hg:
	* glib/src/variant.hg: Correct the version numbers in some @newin commands
	by adding 'newin "2,n"' parameters to _WRAP_xxx macros. Bug #748856.

2015-05-08  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Add support for 'newin "n,m"' in some _WRAP macros

	* tools/pm/DocsParser.pm:
	* tools/pm/Enum.pm:
	* tools/pm/Output.pm:
	* tools/pm/WrapParser.pm: Add support for the optional 'newin "n,m"' parameter
	in _WRAP_METHOD, _WRAP_METHOD_DOCS_ONLY, _WRAP_SIGNAL, _WRAP_ENUM,
	_WRAP_ENUM_DOCS_ONLY and _WRAP_GERRROR. Bug #748856.

2015-05-06  Mikhail Titov  <mlt@gmx.us>

	Missing GLIBMM_API for Interface

	It is used by Gtk::CellLayout and Gtk::TreeViewColumn. Bug #748719.

2015-05-06  Murray Cumming  <murrayc@murrayc.com>

	Gio::Settings: Add connect_changed().

	This wraps the strange "somekeyname::changed" signal in GSettings,
	so we can get notification when a specific key has changed.
	I would welcome any suggestion to improve this API.

2015-05-03  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::ObjectBase: Don't use std::auto_ptr

	* glib/glibmm/objectbase.[h|cc]: Use a plain pointer instead of std::auto_ptr.
	auto_ptr is deprecated in C++11, and can cause compilation warnings.
	Bug #748630.

2015-04-29  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Threads::Thread: Don't use GThread, only GThread pointer

	* glib/src/threads.[hg|ccg]: Skip the member data GThread gobject_ in Thread.
	Use the same technique as in classes wrapped with _CLASS_OPAQUE_REFCOUNTED,
	i.e. let Glib::Threads::Thread be a class without member data and convert
	both ways between GThread* and Thread* with reinterpret_cast. Bug #746533.

2015-04-27  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Variant: Wrap handles, add get_data_as_bytes()

	* glib/src/variant.[hg|ccg]: VariantBase::is_castable_to(): Accept casts of
	handles to Variant<gint32>. Add VariantBase::get_data_as_bytes().
	Deprecate the non-const get_data() and add a const one.
	* glib/src/variant_basictypes.[h|cc].m4: Add Variant<gint32>::create_handle().

2015-04-27  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::InetAddress, MemoryOutputStream: Add some _IGNORE

	* gio/src/inetaddress.hg: Ignore g_inet_address_mask_new(). gmmproc does not
	understand that it belongs to GInetAddressMask.
	* gio/src/memoryoutputstream.hg: Ignore the destroy-function and
	realloc-function properties.

2015-04-21  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Add _IGNORE_PROPERTY() and _IGNORE_CHILD_PROPERTY() macros

	tools/pm/WrapParser.pm: Add code for _IGNORE_PROPERTY() and
	_IGNORE_CHILD_PROPERTY(), similar to _IGNORE_SIGNAL().

2015-04-15  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Glib::get_user_special_dir(UserDirectory)

	* glib/src/miscutils.[hg|ccg]: Add _WRAP_ENUM(UserDirectory,...) and
	Glib::get_user_special_dir(UserDirectory directory).
	Deprecate get_user_special_dir(GUserDirectory directory). Bug #747311.

2015-04-15  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Glib::format_size()

	* .gitignore: Ignore glib/glibmm/miscutils.[h|cc].
	* glib/src/filelist.am: Add miscutils.hg.
	* glib/glibmm/filelist.am: Remove miscutils.[h|cc].
	* glib/glibmm/miscutils.[h|cc]: Move to glib/src and rename to
	miscutils.[hg|ccg].
	* glib/src/miscutils.[hg|ccg]: New files. Move from glib/glibmm and rename.
	Add _WRAP_ENUM(FormatSizeFlags,...). Add Glib::format_size(). Bug #747311.

2015-04-13  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Variant: Improve handling of object paths and signatures

	* glib/src/variant.[ccg|hg]: Add VariantBase::is_castable_to() and
	VariantContainerBase::get_iter(). Accept casts of complicated types
	containing object paths and DBus type signatures to Variant<> types
	containing Glib::ustring and std::string. Change some get(), get_child()
	and get_iter() methods similarly.
	* tests/glibmm_variant/main.cc: Add test_dynamic_cast_composite_types().
	Bug #747508.

2015-04-13  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _WRAP_PROPERTY: Remove a line from the generated docs

	* tools/m4/property.m4: Remove the line "You rarely need to use properties..."
	It's becoming less true. Some new glib and gtk+ classes (GSimpleIOStream,
	GtkModelButton, GtkPopoverMenu) have no public set/get methods corresponding
	to their properties.

2015-04-10  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Gio::SimpleIOStream

	* gio/giomm.h: Add simpleiostream.h.
	* gio/src/filelist.am: Add simpleiostream.hg.
	* gio/src/gio_signals.defs: Regenerated.
	* tools/extra_defs_gen/generate_defs_gio.cc: Add G_TYPE_SIMPLE_IO_STREAM.
	* gio/src/simpleiostream.[hg|ccg]: New files.

2015-03-25  Murray Cumming  <murrayc@murrayc.com>

	NEWS: Mention API Additions since 2.42

2015-03-24  Murray Cumming  <murrayc@murrayc.com>

	2.44.0

2015-03-24  Murray Cumming  <murrayc@murrayc.com>

	Regenerate docs.xml files.

2015-03-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: No #ifdef GLIBMM_*_ENABLED in generated code

	* gio/src/asyncinitable.ccg: Remove #ifdef GLIBMM_EXCEPTIONS_ENABLED.
	* tools/m4/property.m4: No #ifdef GLIBMM_PROPERTIES_ENABLED in generated code.
	* tools/m4/signal.m4:
	* tools/m4/vfunc.m4: No #ifdef GLIBMM_EXCEPTIONS_ENABLED in generated code.
	These preprocessor macros are always defined.

2015-03-19  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::SignalSocket docs: Add an empty line after @newin

	* gio/giomm/socketsource.h: Add an empty line after @newin where it's needed
	in order to avoid bad side effects in the documentation. Doxygen assumes that
	@newin is followed by a paragraph that describes what is new.

2015-03-17  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Improve tests/glibmm_interface_implementation

	* tests/glibmm_interface_implementation/main.cc: Return EXIT_FAILURE if some
	test fails. Add more tests of virtual functions. Bug #705124.

2015-03-17  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Action, ActionGroup: Fix critical messages from vfuncs

	* glib/glibmm/wrap.h: Add unwrap_copy(const T& obj).
	* gio/src/action.hg:
	* gio/src/actiongroup.hg: Make vfuncs that return a GVariant* use the
	new Glib::unwrap_copy() overload by adding the _WRAP_VFUNC parameter
	refreturn_ctype. It avoids a critical message if Glib::VariantBase::
	gobj() == 0, which is not an error in these functions. Bug #705124.

2015-03-17  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Action etc: Add keep_return to some _WRAP_VFUNC()

	* gio/src/action.hg: Add keep_return to get_name_vfunc(),
	get_parameter_type_vfunc() and get_state_type_vfunc().
	* gio/src/actiongroup.hg: Add keep_return to get_action_parameter_type_vfunc()
	and get_action_state_type_vfunc().
	* gio/src/dbusobject.hg: Add keep_return to get_object_path_vfunc().
	* gio/src/tlspassword.hg: Add keep_return to get_default_warning_vfunc().
	The C code that calls these functions does not get its own copy of the
	returned object. The called function must store a copy. Bug #705124.

2015-03-17  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _WRAP_VFUNC: Add the keep_return parameter

	* glib/glibmm/utility.h: Add template function destroy_notify_delete().
	* tools/pm/WrapParser.pm:
	* tools/pm/Output.pm:
	* tools/m4/vfunc.m4: Add optional parameter keep_return to _WRAP_VFUNC().
	Bug #705124.

2015-03-16  Murray Cumming  <murrayc@murrayc.com>

	Regenerate _docs.xml files.

2015-03-16  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .defs.

2015-03-06  Murray Cumming  <murrayc@murrayc.com>

	2.43.91

2015-03-06  Murray Cumming  <murrayc@murrayc.com>

	Gio::OutputStream: write_async(), write_all_async(): Improve docs.

	Add the warning about the buffer needing to stay valid because it
	is not copied, adding to the C API here:
	https://git.gnome.org/browse/glib/commit/gio/goutputstream.c?id=0f800cd1a863bc0c3e51c03592e2fb1ffbda8982

2015-03-05  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::ThemedIcon: Change parameter name to use_default_fallbacks

	* gio/src/themedicon.[hg|ccg]: Change parameter name use_default_callbacks
	to use_default_fallbacks in constructor and create().

2015-03-03  Murray Cumming  <murrayc@murrayc.com>

	Gio::OutputStream: Add write_all_async() and write_all_finish().

2015-03-03  Murray Cumming  <murrayc@murrayc.com>

	Gio::MemoryInputStream: Add add_bytes().

2015-03-03  Murray Cumming  <murrayc@murrayc.com>

	InputStream: Add read_all_async() and read_all_finish().

2015-03-03  Murray Cumming  <murrayc@murrayc.com>

	Gio::File: Add replace_contents_bytes_aync().

	There is no g_file_replace_content_bytes_finish() because this
	uses the existing g_file_replace_contents_finish().

2015-03-03  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus::InterfaceInfo: Add cache_build() and cache_release().

2015-03-03  Murray Cumming  <murrayc@murrayc.com>

	OptionContext: Add get/set_strict_posix().

2015-03-03  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Add get/set/unset_resource_base_path() and property.

2015-03-03  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Add get_is_busy() and property.

2015-03-03  Murray Cumming  <murrayc@murrayc.com>

	Regenerate *_docs.xml files.

2015-03-03  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .defs.

2015-02-26  Murray Cumming  <murrayc@murrayc.com>

	2.43.90

2015-02-26  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::OptionGroup: Fix memory leaks

	* glib/src/optiongroup.ccg: CppOptionEntry::set_c_arg_default(),
	convert_c_to_cpp(), release_c_arg(): Fix memory leaks for string-valued
	options. Bug #745173.

2015-02-25  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::OptionGroup: Fix enable/disable bool option pairs

	* glib/src/optiongroup.ccg: add_entry_with_wrapper(): Don't allocate a new
	C variable, if another entry has already been added for the same C++ variable.
	It makes GLib::OptionContext::parse() behave like g_option_context_parse()
	when two or more options refer to the same variable, typically
	an --enable-x / --disable-x pair. Bug #744854.

2015-02-20  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix error messages from gmmproc

	* gio/src/gio_extra_objects.defs: Add NetworkMonitor, Notification and
	Resource.
	* gio/src/file.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/notification.hg:
	* glib/src/iochannel.hg:
	* glib/src/nodetree.hg: Avoid "gtkmmproc error" messages in the generated
	files by not _IGNORE()ing non-existent functions. Unnecessary _IGNORE()s
	generate error messages after the fix in bug 737212 was implemented.

2015-02-20  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	h2def.py: Remove *_DEPRECATED_IN_*_*_FOR(*) prefixes with white space

	* tools/defs_gen/h2def.py: A *_DEPRECATED_IN_*_*_FOR(*) prefix before a
	function prototype may contain white space within the parenthesis.
	Remove such prefixes, otherwise the function prototype is not found.

2015-02-18  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Value: Deprecate Value<char>, add Value<signed char>

	* glib/src/value_basictypes.[cc|h].m4: Deprecate Value<char>.
	Add Value<signed char>. g_value_[get,set]_char() are deprecated in favour of
	g_value_[get,set]_schar(). G_TYPE_CHAR is a signed char even on platforms
	where a plain char is unsigned.

2015-02-18  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Notification: Add set_priority() and enum NotificationPriority

	* gio/src/notification.hg: Add enum NotificationPriority and set_priority().
	* tools/m4/convert_gio.m4: Add conversion of GNotificationPriority.

2015-02-18  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Application, UnixSocketAddress: Deprecate some properties

	* gio/src/application.hg: Deprecate property_action_group().
	* gio/src/unixsocketaddress.hg: Deprecate property_abstract().

2015-02-17  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::OptionGroup: Don't use the deprecated g_option_group_free()

	* glib/src/optiongroup.ccg: Replace the deprecated g_option_group_free() by
	g_option_group_unref().
	* glib/src/optiongroup.hg: Add a TODO comment.

2015-02-17  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Regenerate methods .defs  and .defs.patch files

	* gio/src/gio_methods.defs:
	* glib/src/glib_functions.defs:
	* glib/src/glib_functions.defs.patch:
	* glib/src/gobject_functions.defs: Updated.

2015-02-16  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Delete obsolete .defs files

	* gio/src/filelist.am: Remove gio_others.defs.
	* gio/src/gio_methods.defs.patch: Deleted, not used.
	* gio/src/gio_others.defs: Deleted, not used.
	* glib/src/filelist.am: Remove glib_deprecated_enums.defs and gobject.defs.
	* glib/src/glib.defs: Remove glib_deprecated_functions.defs and
	glib_deprecated_enums.defs.
	* glib/src/glib_deprecated_enums.defs: Deleted, not needed.
	* glib/src/glib_deprecated_functions.defs: Deleted, not needed.
	* glib/src/gobject.defs: Deleted, not used.

2015-02-09  Murray Cumming  <murrayc@murrayc.com>

	Gio: TcpWrapperConnection: Add documentation.

	Based on the C documentation.

2015-02-09  Murray Cumming  <murrayc@murrayc.com>

	Gio: Add TcpWrapperConnection.

	* tools/extra_defs_gen/genererate_defs_gio.cc:
	Add G_TCP_WRAPPER_CONNECTION.
	* gio/src/gio_signals.defs: Regenerate this to add the signals
	for GTcpWrapperConnection.
	* gio/src/filelist.am:
	* gio/src/tcpwrapperconnection.[hg|ccg]:
	Add TcpWrapperConnection.

	Markus Kolb noticed that this was missing.
	* gio/giomm.h: Include tcpwrapperconnection.h

2015-02-04  Murray Cumming  <murrayc@murrayc.com>

	Regenerate methods .defs files.

2015-02-04  Murray Cumming  <murrayc@murrayc.com>

	Regenerate enums .defs files.

2015-02-04  Murray Cumming  <murrayc@murrayc.com>

	Regenerate _docs.xml files.

2015-02-03  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: Put DOXYGEN_SHOULD_SKIP_THIS around *_Class prototypes.

	These predeclarations, such as below, seem to confuse doxygen.
	See bug #743918 .

	namespace Gtk
	{ class Window_Class; } // namespace Gtk

2015-01-25  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Error::register_init(): Call Glib::wrap_register_init()

	* glib/glibmm/error.cc: Call wrap_register_init() before wrap_init().
	It was not necessary, when Error::register_init() was called from Glib::init(),
	but Error::register_init() can be called from other places (Glib::thread_init()
	and Glib::Error::throw_exception()).
	* glib/glibmm/init.cc: Not necessary to call Glib::wrap_register_init() before
	calling Glib::Error::register_init(). Bug #743466 (Mike Fleetwood).

2015-01-20  Murray Cumming  <murrayc@murrayc.com>

	2.43.3

2015-01-20  Murray Cumming  <murrayc@murrayc.com>

	Regenerated _docs.xml files.

2015-01-13  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Binding: Rename and change BindingTransformSlot

	* glib/src/binding.[hg|ccg]: Change "typedef sigc::slot<bool,
	const Glib::RefPtr<Binding>&, const GValue*, GValue*> BindingTransformSlot"
	to "typedef sigc::slot<bool, const GValue*, GValue*> SlotTransform".
	Bug #738663.

2015-01-11  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Glib::SlotSpawnChildSetup

	* glib/src/spawn.[hg|ccg]: Add typedef SlotSpawnChildSetup, and say in
	the documentation that the child_setup parameters can be empty slots.
	That should make it clear how to avoid having a child_setup slot called.
	Bug #528285.

2015-01-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Resource docs: Suppress inappropriate doxygen links

	* gio/src/resource.hg: Insert '%' before 'Resource' where doxygen shall not
	generate a link to Gio::Resource.

2014-12-16  Murray Cumming  <murrayc@murrayc.com>

	2.43.2

2014-12-15  Murray Cumming  <murrayc@murrayc.com>

	Gio: Added NetworkMonitor.

2014-12-15  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .docs.xml

2014-12-15  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .defs.

2014-12-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::UnixFDList, UnixFDMessage: Fix array lengths in steal_fds()

	* gio/src/unixfdlist.[hg|ccg]: Hand-code both constructors that take a
	Glib::ArrayHandle<int>, and call g_unix_fd_list_new_from_array() in them.
	* gio/src/unixfdlist.ccg: Don't subtract 1 from the length returned by
	g_unix_fd_list_[peek|steal]_fds().
	* gio/src/unixfdmessage.hg: get_fd_list(): Add refreturn.
	* gio/src/unixfdmessage.ccg: Don't subtract 1 from the length returned by
	g_unix_fd_message_steal_fds(). Bug #741365.

2014-12-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Don't make one very long line for the enum documentation

	* tools/pm/DocsParser.pm: lookup_enum_documentation(): Don't replace newlines
	by spaces in the description of the enum constants.

2014-12-11  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add an empty line after @newin where it's missing

	* gio/src/action.hg:
	* gio/src/cancellable.hg:
	* gio/src/charsetconverter.hg:
	* gio/src/mount.hg:
	* gio/src/notification.hg:
	* gio/src/simpleaction.hg:
	* gio/src/socket.hg:
	* glib/src/datetime.hg:
	* glib/src/glib_docs_override.xml:
	* glib/src/keyfile.hg:
	* glib/src/variant.hg: Add an empty line after @newin where it's needed in
	order to avoid bad side effects in the documentation. Doxygen assumes that
	@newin is followed by a paragraph that describes what is new.

2014-12-11  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Improve the conversion of Since to @newin

	* tools/m4/enum.m4: Add a blank line in the enum documentation.
	* tools/pm/Output.pm: Don't always add a blank line in the enum documentation.
	* tools/pm/DocsParser.pm: Improve the rules for conversion of Since to @newin.

2014-12-04  Murray Cumming  <murrayc@murrayc.com>

	Tiny comment spelling fix.

2014-12-03  Murray Cumming  <murrayc@murrayc.com>

	2.43.1

2014-12-03  Murray Cumming  <murrayc@murrayc.com>

	tests/giomm_tls_client: Put try/catch around Socket::connect().

	Because it's currently timing out for me.

2014-12-03  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .docs.xml files.

2014-12-03  Murray Cumming  <murrayc@murrayc.com>

	Regnerate glib .defs.

2014-12-03  Murray Cumming  <murrayc@murrayc.com>

	Regenerate gio .defs.

2014-12-01  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Tidy up the generation of enum docs

	* tools/m4/gerror.m4: Add "/** " at the start of the documentation,
	like enum.m4 does.
	* tools/pm/DocsParser.pm: lookup_enum_documentation(): Don't add "/** "
	which is deleted by the caller. Add "\n * " with the right indentation.
	* tools/pm/Output.pm: output_wrap_enum(), output_wrap_enum_docs_only(),
	output_wrap_gerror(): Don't delete "/** ". Don't change indentation.

2014-12-01  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Change messages that MS Visual Studio can misunderstand

	* tools/gmmproc.in:
	* tools/pm/DocsParser.pm:
	* tools/pm/Output.pm: Change messages that MS Visual Studio can misunderstand.
	https://mail.gnome.org/archives/gtkmm-list/2014-November/msg00044.html

2014-11-21  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Checksum::ChecksumType: Remove erroneous documentation

	* glib/src/checksum.hg: Remove the erroneous '@class ChecksumType' comment.
	Should have been '@enum ChecksumType'. It's unnecessary now that gmmproc
	generates enum documentation.

2014-11-21  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _WRAP_GERROR: Add documentation to the generated enum Code

	* tools/pm/Output.pm: output_wrap_gerror(): Get the enum documentation from
	the docs.xml file.
	* tools/m4/gerror.m4: Include the documentation before 'enum Code' in
	the generated code.

	_WRAP_GERROR was overlooked when José Alburquerque implemented the
	documentation of other enums (bug 544694).

2014-11-20  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Glib::Binding

	* .gitignore: Ignore binding.[h|cc].
	* glib/glibmm/objectbase.h: Add a comment.
	* glib/src/filelist.am: Add glib_signals.defs and binding.hg.
	* glib/src/glib.defs:  Add glib_signals.defs.
	* glib/glibmm.h: Add binding.h.
	* tools/extra_defs_gen/generate_defs_glib.cc: Add get_defs(G_TYPE_BINDING).
	* tools/m4/convert_glib.m4: Add conversion for BindingFlags.
	* tools/generate_wrap_init.pl.in: Define GLIBMM_INCLUDED_FROM_WRAP_INIT_CC.
	* glib/src/binding.[hg|ccg]: New files with enum BindingFlags and class Binding.
	* glib/src/glib_signals.defs: New file with info about GBinding's properties.
	Bug #738663.

2014-11-20  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Resource: Add get_file_exists_nothrow(). Rename some methods

	* gio/src/resource.[hg|ccg]: Add get_file_exists_nothrow() and
	get_file_exists_global_nothrow(). Rename the get_info() and get_info_global()
	methods that only check if a file exists. Use std::string for path names.
	Bug #739206.

2014-11-14  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Docs: Use doxygen-extra.css

	* configure.ac: Require mm-common 0.9.7.
	* .gitignore: Ignore doxygen-extra.css.
	* docs/reference/Doxyfile.in: Use doxygen-extra.css instead of doxygen.css.

2014-11-14  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Gio::Resource

	* gio/src/resource.[hg|ccg]: Add class Resource, enum ResourceFlags and
	enum ResourceLookupFlags.
	* glib/src/bytes.hg: Mention Resource in a comment.
	* tools/m4/convert_gio.m4: Add conversions for GResource, GResourceFlags and
	GResourceLookupFlags. Bug #739206.

2014-10-01  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Property: Add some documentation

	* glib/glibmm/propertyproxy.h:
	* glib/glibmm/property.h: Move the documentation about registering
	properties from PropertyProxy to Property, which is the class that registers
	custom properties. Add a code snippet to the documentation. Bug #523043.

2014-09-30  Marcin Kolny  <marcin.kolny@gmail.com>

	gmmproc: added warning when ignored method or signal doesn't exists

	(bgo#737212)

	* tools/pm/WrapParser.pm: when method used in _IGNORE or signal used
	in _IGNORE_SIGNAL doesn't exists, there is a message posted on
	stderr and also proper comment in a generated header.

2014-09-22  Murray Cumming  <murrayc@murrayc.com>

	2.42.0

2014-09-22  Murray Cumming  <murrayc@murrayc.com>

	Notification: Deprecate set_urgent().

	Using the same uninformative deprecation message that the C API has.

2014-09-22  Murray Cumming  <murrayc@murrayc.com>

	Regenerate *_docs.xml files.

2014-09-22  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .defs files.

2014-09-22  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Fix MSVC 2010 "Installation"

	* MSVC_Net2010/glibmm-install.props: Fix Typo in creating path for
	the *mmconfig.h headers.

2014-09-20  Chun-wei Fan  <fanchunwei@src.gnome.org>

	ustring.h: Comment On Last Commit for Specialization

	Mention that the new specialization for Stringify for const char[N] is to
	avoid ambiguous constructor overloads for later versions of Visual C++.

	* glib/glibmm/ustring.h: Mention in the comments for the
	specialization on Stringify for const char[N] is for later
	versions of Visual C++, to avoid ambiguous contructor overloads.

	https://bugzilla.gnome.org/show_bug.cgi?id=736778

2014-09-19  Chun-wei Fan  <fanchunwei@src.gnome.org>

	ustring.h: Add Specialization for Stringify<const char[N]>

	This adds a specialization for string literals in the form of const char[N]
	as some compilers would take such things to have ambiguous constructor
	overloads, such as Visual Studio, which take string literals in this form.

	* glib/glibmm/ustring.h: Add a specialization for Stringify for
	const char[N] so that ambiguous constructor overloads can be
	avoided for string literals in this form.

	https://bugzilla.gnome.org/show_bug.cgi?id=736778

2014-09-17  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Make giomm tests Run Under Windows

	/etc/fstab is a *nix only file, which would not normally exist under
	Windows unless one is under Cygwin.  Use the path for the Wordpad
	application on Windows, which is a standard part of Windows; and use
	/etc/fstab otherwise.

	* tests/giomm_ioerror/main.cc:
	* tests/giomm_simple/main.cc: Test for c:/windows/write.exe
	(Wordpad application) on Windows, and use /etc/fstab otherwise.

	https://bugzilla.gnome.org/show_bug.cgi?id=736778

	https://bugzilla.gnome.org/show_bug.cgi?id=736778

2014-09-17  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio 2008 Builds: Further Tweaks

	Don't generate .ilk files (incremental link files) for release builds.

	* MSVC_Net2008/glibmm.vcproj:
	* MSVC_Net2008/giomm.vcproj: Use optimize references for release
	builds so that we don't link incrementally for release builds.
	It is mainly a debug build option.

2014-09-17  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Cleanup and Tweak Visual Studio 2010 Projects

	Remove the /vd2 compilation option, as it is no longer necessary[1], and
	generate debug info (.pdb files, with little to no performance deficit),
	to ease debugging release builds.

	* MSVC_Net2010/glibmm.vcxproj:
	* MSVC_Net2010/giomm.vcxproj: Remove /vd2 build option from the
	builds, and generate .pdb files for release builds as well.

	[1]: http://msdn.microsoft.com/en-us/library/7sf3txa8%28v=vs.100%29.aspx

2014-09-17  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio 2008 Projects: More Cleanups and Tweaks

	Remove items from the projects that are no longer necessary to build
	glibmm[1], and generate debug info (.pdb files, with little to no
	performance defecit) for release builds as well.  These changes also fixes
	the builds of glibmm and gtkmm as the glibmm_interface_implementation test
	now runs successfully, and the gtkmm demo program now starts without
	crashing (although it still does crash when a window is being closed).

	* MSVC_Net2008/*.vproj: Remove the build of blank.cpp and the /vd2
	build options, as they are no longer needed.
	* MSVC_Net2008/giomm.vcproj:
	* MSVC_Net2008/glibmm.vcproj: Generate Debug Info for the Release
	builds as well.

2014-09-16  Chun-wei Fan  <fanchunwei@src.gnome.org>

	MSVC Builds: Fix Missed Headers for "Install"

	There were some more m4-generated headers that need to be installed.  Make
	up for that.

	* MSVC_Net2008/glibmm-install.vsprops:
	* MSVC_Net2010/glibmm-install.props: "Install" the generated
	headers indicated by glibmm_files_h_m4.

2014-09-16  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio Builds: Add "install" project

	This adds an install project to the Visual Studio 2008 and 2010 projects,
	which is used to install the built .dll and .lib, along with the headers
	needed for glibmm and giomm, to make it easier to deploy amd use after
	compilation.

	* MSVC_Net2008/glibmm-install.vsprops:
	* MSVC_Net2010/glibmm-install.props: New property sheets to
	"install" built DLLs, LIBs and headers.
	* MSVC_Net2008/install.vcproj:
	* MSVC_Net2010/install.vcxproj: New projects to carry out the
	"installation" process.
	* MSVC_Net2008/glibmm.sln:
	* MSVC_Net2010/glibmm.sln: Build the new install project
	* MSVC_Net2008/filelist.am:
	* MSVC_Net2010/filelist.am: Add the newly-added files for
	distribution

2014-09-16  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Bug 736720: Fix ustring for Visual Studio Builds

	Update the property sheets so that SIZEOF_WCHAR_T is defined as 2 when
	the glibmm library is built.  This ensures that the correct code path in
	the ustring class is taken for Visual Studio builds, which avoids an
	unhandled GLib::ConvertError exception.

	* MSVC_Net2005/glibmm-build-defines.vsprops:
	* MSVC_Net2008/glibmm-build-defines.vsprops:
	* MSVC_Net2010/glibmm-build-defines.props: Define SIZEOF_WCHAR_T
	when building glibmm so that ustring will use the correct code
	path on Visual Studio builds.

2014-09-16  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Fix Previous Commit On Visual Studio 2010 Projects

	* MSVC_Net2010/filelist.am: Include the newly-added property
	sheets.

2014-09-16  Marcin Kolny  <marcin.kolny@gmail.com>

	h2def.py: fixed generator in case of inline functions (bgo#736427)

	* tools/gen_scripts/h2def.py: removing inline methods body, removing
	'static' and 'inline' keywords in function declaration, avoiding
	double entries of the same method in generated *.def file by storing
	method's names in a Set collection.

2014-09-15  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Update and Overhaul Visual Studio 2005 Projects

	Give the Visual Studio 2005 projects, like the Visual Studio 2008 projects
	in the previous commits, a much-needed overhaul and cleanup, so to ease
	future maintenance, by consolidating commonly-used items into property
	sheets.

	* MSVC_Net2005/glibmm-build-defines.vsprops:
	* MSVC_Net2005/glibmm-version-paths.vsprops: New property sheets to
	consolidate commonly-used items, so that they can be referred to
	from the projects and changes to them will only have to be done
	here, which will greatly simplify maintenace of the projects.
	* MSVC_Net2005/glibmm/glibmm.vcproj:
	* MSVC_Net2005/giomm/giomm.vcproj:
	and clean up by making use of the newly-added property sheets.
	Update the paths accordingly.  Remove unwanted/unneeded items in
	them as well.
	* MSVC_Net2005/examples/*/*.vcproj:
	* MSVC_Net2005/tests/*/*.vcproj:
	MSVC_Net2005/, and adjust the file paths in them accordingly.
	Clean up by using the property sheets, and remove unwanted/
	unneeded items.  Remove the example_ and test_ prefixes from the
	project names, and correct the source file names for the
	socket-client and socket-server projects
	* MSVC_Net2005/glibmm.sln: Update project names and paths
	accordingly.
	* MSVC_Net2005/filelist.am: Update file names and paths accordingly

2014-09-15  Murray Cumming  <murrayc@murrayc.com>

	2.41.4

2014-09-13  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Update and Overhaul Visual Studio 2010 Projects

	Give the Visual Studio 2010 projects, like the Visual Studio 2008 projects
	in the previous commits, a much-needed overhaul and cleanup, so to ease
	future maintenance, by consolidating commonly-used items into property
	sheets.

	* MSVC_Net2010/glibmm-build-defines.props:
	* MSVC_Net2010/glibmm-version-paths.props: New property sheets to
	consolidate commonly-used items, so that they can be referred to
	from the projects and changes to them will only have to be done
	here, which will greatly simplify maintenace of the projects.
	* MSVC_Net2010/glibmm/glibmm.vcxproj:
	* MSVC_Net2010/glibmm/glibmm.vcxproj.filters:
	* MSVC_Net2010/giomm/giomm.vcxproj:
	* MSVC_Net2010/giomm/giomm.vcxproj.filters: Move to MSVC_Net2010/,
	and clean up by making use of the newly-added property sheets.
	Update the paths accordingly.  Remove unwanted/unneeded items in
	them as well.
	* MSVC_Net2010/examples/*/*.vcxproj:
	* MSVC_Net2010/examples/*/*.vcxproj.filters:
	* MSVC_Net2010/tests/*/*.vcxproj
	* MSVC_Net2010/tests/*/*.vcxproj.filters: Move all the projects to
	MSVC_Net2010/, and adjust the file paths in them accordingly.
	Clean up by using the property sheets, and remove unwanted/
	unneeded items.  Remove the example_ and test_ prefixes from the
	project names, and correct the source file names for the
	socket-client and socket-server projects
	* MSVC_Net2010/glibmm.sln: Update project names and paths
	accordingly.
	* MSVC_Net2010/filelist.am: Update file names and paths accordingly

2014-09-13  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio 2008 Projects: Further Cleanups

	* MSVC_Net2008/glibmm-version-paths.vsprops:
	* MSVC_Net2008/glibmm-build-defines.vsprops: Remove unneeded items
	and move path-related item into glibmm-version-paths.vsprops

2014-09-13  Chun-wei Fan  <fanchunwei@src.gnome.org>

	MSVC_Net2008/filelist.am: Fix up Dist'ed Files

	* MSVC_Net2008/filelist.am: Change thread_pool.vcproj to
	threadpool.vcproj, as that project file has been renamed.

2014-09-12  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio 2008 Projects: Update and Overhaul

	Update the Visual Studio 2008 projects, and give them a cleanup, by moving
	many repeated parts into property sheets.  Similar changes to the Visual
	Studio 2005 and 2010 project files will follow in the next few days.

	* MSVC_Net2008/glibmm-version-paths.vsprops:
	* MSVC_Net2008/glibmm-build-defines.vsprops: Add property sheets to
	group together commonly-used items in the Visual Studio 2008
	projects, like what is done in GLib.
	* MSVC_Net2008/giomm/giomm.vcproj: Move to MSVC_Net2008, clean up
	by using the property sheets and adjust the paths accordingly.
	Also add the sources that are added to the giomm sources.
	Simplify project names a bit.
	* MSVC_Net2008/gendef/gendef.vcproj:
	* MSVC_Net2008/glibmm/glibmm.vcproj:
	* MSVC_Net2008/examples/compose/compose.vcproj:
	* MSVC_Net2008/examples/dispatcher/dispatcher.vcproj:
	* MSVC_Net2008/examples/dispatcher2/dispatcher2.vcproj:
	* MSVC_Net2008/examples/keyfile/keyfile.vcproj:
	* MSVC_Net2008/examples/markup/markup.vcproj:
	* MSVC_Net2008/examples/options/options.vcproj:
	* MSVC_Net2008/examples/properties/properties.vcproj:
	* MSVC_Net2008/examples/regex/regex.vcproj:
	* MSVC_Net2008/examples/resolver/resolver.vcproj:
	* MSVC_Net2008/examples/thread/thread.vcproj:
	* MSVC_Net2008/tests/glibmm_simple/glibmm_simple.vcproj:
	* MSVC_Net2008/tests/giomm_simple/giomm_simple.vcproj: Move to
	MSVC_Net2008/, and clean up by using the property sheets.  Update
	paths accordingly and simplify propject names a bit.
	* MSVC_Net2008/examples/socket-client/socket-client.vcproj:
	* MSVC_Net2008/examples/socket-server/socket-server.vcproj: Move to
	MSVC_Net2008/, clean up by using the property sheets, and correct
	the sources that are being built.  Update paths accordingly too,
	and simplify project names a bit.
	* MSVC_Net2008/examples:
	* MSVC_Net2008/tests: Remove directories as projects have been
	moved to MSVC_Net2008/.
	* MSVC_Net2008/filelist.am: Reflect on the movement of the project
	files and also the added property sheets.

2014-09-08  Marcin Kolny  <marcin.kolny@gmail.com>

	gmmproc: Added parameter exception_handler in _WRAP_VFUNC (bgo#735132)

	This change allows developer to use custom exception handler, instead of
	using Glib::exception_handlers_invoke() method. It might be useful, if
	developer can't get access to a thread, where exception might appear, or
	it is very difficult to register handler in this thread.

	* tools/m4/signal.m4:
	* tools/m4/vfunc.m4:
	* tools/pm/Output.pm:
	* tools/pm/WrapParser.pm: added additional parameter
	to a _WRAP_VFUNC and _WRAP_SIGNAL, allowing write custom
	exception handlers

2014-09-01  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Better error checks in some _WRAP_* macros

	* tools/pm/Output.pm: When reordering parameters (cpp_type cpp_name{c_name}),
	check that there really are C parameters with the given names.
	A missing check together with a mis-spelt C parameter name can cause an
	infinite loop in _WRAP_SIGNAL and _WRAP_VFUNC.

2014-08-27  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::DBus: Don't use parameter name 'interface'

	* gio/src/dbusmessage.hg:
	* gio/src/dbusobject.hg: Change parameter name 'interface' to 'iface',
	to avoid compilation errors with MinGW. Bug #735137.

2014-08-22  Murray Cumming  <murrayc@murrayc.com>

	Updated NEWS

2014-08-22  Murray Cumming  <murrayc@murrayc.com>

	2.41.3

2014-08-22  Murray Cumming  <murrayc@murrayc.com>

	Regenerated *_docs.xml.

2014-08-22  Murray Cumming  <murrayc@murrayc.com>

	Regenerated *_signals.defs.

2014-08-22  Murray Cumming  <murrayc@murrayc.com>

	Regenerate *_methods.defs.

2014-08-22  Murray Cumming  <murrayc@murrayc.com>

	Regenerate *_enums.defs.

2014-08-06  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Network example: Use Glib::OptionEntry and friends

	* examples/network/socket-client.cc:
	* examples/network/socket-server.cc: Use Glib::OptionEntry, OptionGroup,
	OptionContext instead of the glib equivalents.

2014-08-06  Shashank  <shashank1.m@samsung.com>

	Network example: Add --use-ipv6 command line option

	* examples/network/socket-client.cc:
	* examples/network/socket-server.cc: Add --use-ipv6 command line option.
	Bug #734094.

2014-07-31  Andre Klapper  <a9016009@gmx.de>

	doap: add <programming-language>

2014-07-30  Olav Vitters  <olav@vitters.nl>

	doap category core

2014-07-28  Murray Cumming  <murrayc@murrayc.com>

	2.41.2

2014-07-25  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Menu: Allow detailed_action == null

	* gio/src/menu.hg: insert/prepend/append(): Make it possible to pass
	detailed_action == 0 to the glib/gio functions. Bug #733203.

2014-07-21  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Make custom interface properties instance data

	* glib/glibmm/class.cc: Copy the default values of the interface properties
	to the class's iface_properties_quark.
	* glib/glibmm/property.cc: custom_set_property_callback(): Copy the
	default values to object-specific data.
	custom_get_property_callback(): Get object-specific value if it exists, else
	class-specific default value. Bug #732746.

2014-07-19  Juan R. García Blanco  <juanrgar@gmail.com>

	Add Gio::SimplePermission

	* gio/giomm.h: Add giomm/simplepermission.h.
	* gio/src/simplepermission.[hg|ccg]: New files.
	* gio/src/filelist.am: Add simplepermission.hg.
	* tools/extra_defs_gen/generate_defs_gio.cc: Add
	G_TYPE_SIMPLE_PERMISSION (although SimplePermission has no
	signals nor properties).
	* See https://bugzilla.gnome.org/show_bug.cgi?id=732436

2014-07-19  Juan R. García Blanco  <juanrgar@gmail.com>

	Add Gio::Permission

	* gio/giomm.h: Add giomm/permission.h.
	* gio/src/filelist.am: Add permission.hg.
	* gio/src/gio_signals.defs: Add allowed, can-acquire, and
	can-acquire properties.
	* gio/src/gio_vfuncs.defs: Add vfuncs.
	* gio/src/permission.[hg|ccg]: New files.
	* tools/extra_defs_gen/generate_defs_gio.cc: Add
	G_TYPE_PERMISSION.
	* See https://bugzilla.gnome.org/show_bug.cgi?id=732436

2014-07-07  Povilas Kanapickas  <povilas@radix.lt>

	PropertyBase: Use g_object_notify_by_pspec() instead of g_object_notify()

	This approach is faster and recommended by GLib. Bug #731484.

2014-07-07  Povilas Kanapickas  <povilas@radix.lt>

	Rename ambiguously named overridden property variable and type

	* glib/glibmm/class.[cc|h]:
	* glib/glibmm/interface.cc:
	* glib/glibmm/property.cc: Rename properties_quark and properties_type to
	iface_properties_quark and iface_properties_type.
	As custom_[set|get]_property_callback() in property.cc also sets and gets
	user-defined properties, this naming choice may be confusing.
	These names are intended for use by glibmm only. Renaming is not an
	ABI/API break. Bug #731484.

2014-07-05  Juan R. García Blanco  <juanrgar@gmail.com>

	Add support for GtkContainer child properties

2014-06-28  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _WRAP_METHOD: Allow multi-word parameter types (unsigned int)

	* tools/pm/Function.pm: parse_param(): Allow multi-word parameter types,
	as in _WRAP_METHOD(void set_button(unsigned int button = 0),
	gtk_gesture_single_set_button).
	Affects _WRAP_METHOD, _WRAP_SIGNAL, _WRAP_CTOR, _WRAP_CREATE, _WRAP_VFUNC.

2014-06-26  Murray Cumming  <murrayc@murrayc.com>

	2.41.1

2014-06-13  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Deprecate API which is deprecated in glib

	* gio/src/application.hg: Deprecate set_action_group().
	* gio/src/desktopappinfo.hg: Deprecate set_desktop_env().
	* gio/src/settings.[hg|ccg]: Deprecate list_schemas(), range_check() and
	property_schema().
	* gio/src/simpleactiongroup.hg: Define GLIB_DISABLE_DEPRECATION_WARNINGS
	in the .cc file.
	* gio/src/tlsconnection.hg: Deprecate [set|get]_use_system_certdb()
	and property_use_system_certdb().
	* gio/src/volumemonitor.hg: Deprecate adopt_orphan_mount() also in
	the .cc file.
	* glib/glibmm/filelist.am: Build only the glibmm_files_used.
	* glib/src/filelist.am: Add glibmm_files_deprecated_hg. Move thread.hg
	and valuearray.hg to it.
	* glib/src/keyfile.hg: Deprecate one of the load_from_dirs() methods
	also in the .cc file.
	* glib/src/valuearray.hg: Deprecate the whole class Glib::ValueArray.
	* tests/glibmm_valuearray/main.cc: Undefine GLIBMM_DISABLE_DEPRECATED.

2014-06-10  José Alburquerque  <jaalburquerque@gmail.com>

	tests/glibmm_interface_implementation: Use the new base class order

	* tests/glibmm_interface_implementation/main.cc: Interface before
	Glib::Object in the list of base classes. Test a custom property and
	an interface with properties.
	This patch is almost identical to the attachment in bug 697229 comment 14.

2014-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Add a blank line after @deprecated and @newin

	* tools/pm/DocsParser.pm: A blank line after @deprecated and @newin tells
	Doxygen where the accompanying text paragraph ends.

2014-05-29  Murray Cumming  <murrayc@murrayc.com>

	2.41.0

2014-05-25  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Don't interpret a comma as the end of a deprecation message

	* tools/pm/WrapParser.pm: extract_bracketed_text(): Warn if the text ends
	in a quoted string.
	string_split_commas(): Don't split at a comma in a quoted string.

2014-05-15  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	examples/network: Use SocketSource and SignalSocket.

	* examples/network/socket-client.cc: Use Gio::Socket::create_source().
	* examples/network/socket-server.cc: Use Gio::signal_socket().connect().
	Bug #725281.

2014-05-15  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Gio:SocketSource, SignalSocket and Socket::create_source()

	* .gitignore: Add !gio/giomm/socketsource.[cc|h].
	* gio/giomm.h:
	* gio/giomm/filelist.am: Add socketsource.h.
	* gio/giomm/socketsource.[cc|h]: New files. SocketSource and SignalSocket.
	* gio/src/socket.[ccg|hg]: Add create_source().
	Remove many trailing blanks in socket.hg.
	* glib/glibmm/main.[cc|h]: Add functions required when a class derived from
	Source is defined in another file. Bug #725281.

2014-05-14  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Application: Add some @newin{2,42}

2014-05-14  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Application: Fix some typos

2014-05-14  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Application: Add add_main_option_entry() taking a slot parameter

	* gio/src/application.[hg|ccg]: Add add_main_option_entry() and
	add_main_option_entry_filename() taking slot parameters.
	Add add_main_option_entry_private(). Bug #727822.

2014-05-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Application: Add add_main_option_entry() and enum OptionType

	* gio/src/application.[hg|ccg]: Add add_main_option_entry() and
	enum Application::OptionType. Bug #727822.

2014-04-24  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Remove unnecessary parts of the docs_override.xml files

	* gio/src/gio_docs_override.xml:
	* glib/src/glib_docs_override.xml: Remove parts with no significant
	difference compared to the docs.xml files. Remove duplicates.

2014-04-14  Murray Cumming  <murrayc@murrayc.com>

	NEWS: Mention API additions in 2.40

2014-04-13  Murray Cumming  <murrayc@murrayc.com>

	2.40.0

2014-04-09  Murray Cumming  <murrayc@murrayc.com>

	Application: Also comment out add_option_group() for now.

	* gio/src/application.hg: We can add it back when we are sure how
	it should look, and how it should be used.
	See bug #727822

2014-04-08  Murray Cumming  <murrayc@murrayc.com>

	VariantType: Fix typo in VARIANT_TYPE_BYTESTRING_ARRAY.

	* gio/src/varianttype.ccg: VARIANT_TYPE_BYTESTRING_ARRAY was set
	to G_VARIANT_TYPE_STRING_ARRAY instead of
	G_VARIANT_TYPE_BYTESTRING_ARRAY, causing VariantDict::lookup_value()
	to fail on an array of filenames when given a vector<std::string>.

2014-04-08  Murray Cumming  <murrayc@murrayc.com>

	Options example: For the remaining arg(s), remove description.

	The long description doesn't seem to be necessary for the
	G_OPTION_REMAINING entry.

2014-04-08  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	tools/extra_defs_gen/generate_extra_defs.cc: Update some comments

	* tools/extra_defs_gen/generate_extra_defs.cc: Change comments stating
	that get_properties() fails for GVolume. GVolume is an ordinary GInterface.
	If the first call is get_properties(G_TYPE_VOLUME), it fails if glib
	bug #465631 has not been fixed.

2014-04-08  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Small improvement of enum documentation

	* tools/pm/DocsParser.pm: Some small improvements of
	lookup_enum_documentation(). E.g. '\n' is replace by ' ' instead of removed,
	and G_NORMALIZE_DEFAULT is converted to NORMALIZE_DEFAULT instead of
	Normalize::DEFAULT. But still not perfect.

2014-04-07  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio Builds: Update glibmm Project

	Add the newly-added variantdict.[cc|h] sources into the build, so that the
	build of glibmm is complete.

2014-04-05  Murray Cumming  <murrayc@murrayc.com>

	2.39.93

2014-04-04  Murray Cumming  <murrayc@murrayc.com>

	TlsInteraction: Add certificate request methods.

	* gio/src/tlsinteraction.hg: Add invoke_request_certificate(),
	request_certificate(), request_certificate_async() and
	request_certificate_finish().

2014-04-04  Murray Cumming  <murrayc@murrayc.com>

	Socket: Add get/set_option().

2014-04-04  Murray Cumming  <murrayc@murrayc.com>

	Settings: Add get_user_value() and get_default_value().

2014-04-04  Murray Cumming  <murrayc@murrayc.com>

	Keyfile: Add save_to_file().

2014-04-04  Murray Cumming  <murrayc@murrayc.com>

	Application: Comment out an implementation too.

2014-04-04  Murray Cumming  <murrayc@murrayc.com>

	Application: Remove add_option_entries().

	Because it seems useless. We need a new function, I think.
	See glib bug:
	https://bugzilla.gnome.org/show_bug.cgi?id=727602

2014-04-04  Murray Cumming  <murrayc@murrayc.com>

	VariantDict::lookup_value(): Return soon enough on failure.

2014-04-04  Murray Cumming  <murrayc@murrayc.com>

	VarantDict::lookup_value(): Add a missing return.

2014-04-03  Murray Cumming  <murrayc@murrayc.com>

	Variant: Remove the now-unnecessary local g_variant_parse_error_quark().

	This is in glib itself now:
	https://git.gnome.org/browse/glib/commit/glib/gvariant.h?id=eeac91f866939fd033303f34c7eb9d2b57c769fb
	and was causing segfaults.

	Bug #727554 (Antoine Jacoutot)

2014-04-03  Murray Cumming  <murrayc@murrayc.com>

	Application, ApplcationCommandLine: #include variantbase.h

	This was a problem when building gtkmm and would probably have
	been shown by a test case in glibmm.

2014-04-03  Murray Cumming  <murrayc@murrayc.com>

	Regenerated *_docs.xml files.

2014-04-03  Murray Cumming  <murrayc@murrayc.com>

	Application, ApplicationCommandLine: Wrap API that uses VariantDict.

	* gio/src/application.hg: Add the handle-local-options signal.
	* gio/src/applicationcommandline: Add get_options_dict().
	* tools/m4/convert_glib.m4: Add necessary conversions.

	I really need to try using this API so we can be sure that it
	is correct before calling it stable, because this part of the awful
	GApplication documentation is particularly awful.

2014-04-03  Murray Cumming  <murrayc@murrayc.com>

	Add a TODO comment

2014-04-03  Murray Cumming  <murrayc@murrayc.com>

	Add Glib::VariantDict, needed for GApplication.

	* glib/src/filelist.am:
	* glib/src/variantdict.[hg|ccg]: Add it as a generic refcounted
	type, with templated lookup_value() and insert_value() methods,
	though these are completely untested so far.
	* glib/src/variant.hg: Ignore a g_variant_dict_* function that
	gmmproc thinks is part of Variant.
	* tools/m4/convert_gio.m4:
	* tools/m4/convert_glib.m4: Move all Variant* conversion to the
	glib conversions and add a necessary one.
	* glib/glibmm.h: Include variantdict.h.

2014-04-03  Murray Cumming  <murrayc@murrayc.com>

	genereate_defs_glib: Add some more glib GTypes.

	Though we don't actually use them or need to use them.
	Still, it would be nice to see when something changes about these
	types.

2014-04-02  Murray Cumming  <murrayc@murrayc.com>

	extra_defs: Add some new gio classes.

	* tools/extra_defs_gen/generate_defs_gio.cc:
	* tools/extra_defs_gen/generate_defs_glib.cc:
	Mention some recently-added GTypes.
	* gio/src/gio/gio_signals.defs: Regenerate.

2014-04-02  Murray Cumming  <murrayc@murrayc.com>

	Add some TODOs about VariantDict.

	We should remove Application::add_main_option_entries() and
	add_option_group() if we cannot get the handle_local_entries signal
	and its VariantDict right.

2014-04-02  Murray Cumming  <murrayc@murrayc.com>

	Minor comments updates.

2014-03-28  Murray Cumming  <murrayc@murrayc.com>

	h2def.py: Handle *_DEPRECATED_IN_* and AVAILABLE_IN_* with 0 digits.

	* tools/defs_gen/h2def.py: clean_func(): Use 0-9 instead of just
	1-9. clutter's headers showed that this was a problem.

2014-03-28  Murray Cumming  <murrayc@murrayc.com>

	h2def.py: clean_func() also strip *_DEPRECATE_IN_*_FOR () without a space.

	* tools/defs_gen/h2def.py: Because clutter has lines such as this:
	CLUTTER_DEPRECATED_IN_1_6_FOR(clutter_actor_animate and ClutterActor:depth)
	without a space after the FOR.

2014-03-20  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio Projects: Update giomm Projects

	Add to the projects the sources for notification, so that giomm builds
	properly.

2014-03-18  Murray Cumming  <murrayc@murrayc.com>

	2.39.92

2014-03-17  Murray Cumming  <murrayc@murrayc.com>

	Regenerate docs XML files.

2014-03-05  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::ustring docs: Say more clearly that it must be only UTF-8

	* glib/glibmm/ustring.h: Mention in the documentation of ustring and
	ustring_Iterator that bad things can happen if the string does not contain
	only valid UTF-8 data. Bug #681560.

2014-03-05  Murray Cumming  <murrayc@murrayc.com>

	Application: Add add_main_option_entry() and add_option_group().

	* gio/src/application.hg: Wrap g_application_add_main_option_entries()
	and g_application_add_option_group().

2014-03-05  Murray Cumming  <murrayc@murrayc.com>

	Add ActionMap to gio_extra_objects.defs.

	This lets the documentation generator guess the appropriate C++ method
	name.

2014-03-05  Giuseppe Penone  <giuspen@gmail.com>

	win32: Surround content_type_get_symbolic_icon() with ifdefs.

	This matches a similar ifdeffing in the underlying C header,
	because ths function is apparently not useful on win32.

2014-03-04  Murray Cumming  <murrayc@murrayc.com>

	2.39.91

2014-03-04  Murray Cumming  <murrayc@murrayc.com>

	Regenerate docs XML.

2014-03-04  Murray Cumming  <murrayc@murrayc.com>

	Fix tiny typo in commit

2014-02-26  Murray Cumming  <murrayc@murrayc.com>

	Regenerated docs XML

2014-02-26  Murray Cumming  <murrayc@murrayc.com>

	Regenerated signal/property .defs

2014-02-26  Murray Cumming  <murrayc@murrayc.com>

	Regenerated methods .defs

2014-02-26  Murray Cumming  <murrayc@murrayc.com>

	Gio::Socket::bind() docs: Use @a instead of <tt></tt> for a parameter.

	* gio/src/socket.hg: @a is the doxygen way to say that we are
	referring to a parameter in the method being documented.

2014-02-26  Murray Cumming  <murrayc@murrayc.com>

	Gio::Socket docs: Do not say that the Cancellable (reference) can be 0.

	* gio/src/socket.hg: That makes sense only in the C API, which uses
	a pointer. We instead have method overloads without that parameter.

2014-02-26  Tomasz Jankowski  <tomcioj@gmail.com>

	Improve Gio::Socket documentation.

	* gio/src/socket.hg: Added documentation for the bind(),
	listen() and accept() methods, based on original Glib
	API reference but mentioning our exceptions rather than
	GError or return values.
	Bug #725178

2014-02-17  Murray Cumming  <murrayc@murrayc.com>

	2.39.4

2014-02-13  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	MemoryInputStream test: Small improvements

	* tests/giomm_memoryinputstream/main.cc: Slightly better test of the
	deletion of the data. More output in case of failure.

2014-02-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Gio::MemoryInputStream test

	* tests/giomm_memoryinputstream/main.cc: New file.
	* tests/Makefile.am: Add the MemoryInputStream test.
	Bug #609946

2014-02-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::MemoryInputStream: Add add_data() taking a sigc::slot

	* gio/src/memoryinputstream.[h|cc]: Add add_data(
	const void*, gssize, const SlotDestroyData&). Deprecate
	add_data(const std::string&) and add_data(const void*, gssize).
	Bug #609946

2014-01-31  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gio/src/fileattributeinfo.hg: Remove NO_GTYPE from _WRAP_ENUMs

	* gio/src/fileattributeinfo.hg: A comment said that NO_GTYPE was necessary
	because gmmproc generated the wrong name for the _get_type() functions.
	That was fixed in tools/m4/base.m4 on 2009-03-19 by commit
	https://git.gnome.org/browse/glibmm/commit/?id=2343e537edae800a2969d57ec49cb58585b3de22
	Probably many more NO_GTYPE can be removed in glibmm.

2014-01-31  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::MenuModel: Add signal_items_changed()

	* gio/src/menumodel.hg:  Wrap the "items-changed" signal.

2014-01-31  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix some doxygen warnings

	* gio/src/action.hg:
	* gio/src/actionmap.hg:
	* gio/src/dbusconnection.hg:
	* gio/src/dbusproxy.hg:
	* gio/src/file.hg:
	* gio/src/fileinfo.hg:
	* gio/src/menuitem.hg:
	* gio/src/mount.hg:
	* gio/src/settings.hg:
	* gio/src/simpleaction.hg:
	* gio/src/threadedsocketservice.hg:
	* glib/glibmm/base64.h:
	* glib/glibmm/refptr.h:
	* glib/src/variant.hg: Fix some warnings in doxygen.log.

2014-01-31  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Regenerate gio_methods.defs

	* gio/src/gio_methods.defs: Some inconsistent parameter names have been fixed
	in glib/gio header files.

2014-01-31  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Don't change NULL to 0 in docs, when it's part of a longer name

	* tools/pm/DocsParser.pm: Don't change NULL to 0, TRUE to true,
	FALSE to false, when they are part of a longer name.

2014-01-30  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Action: Add parse_detailed_name() and parse_detailed_name_variant()

	* gio/src/action.hg: Add parse_detailed_name() and
	parse_detailed_name_variant().
	* tools/m4/initialize_glib.m4: Add _INITIALIZATION of Glib::ustring&
	from gchar*.

2014-01-29  Murray Cumming  <murrayc@murrayc.com>

	OptionContext: TODO comment discussing g_option_context_parse_strv() and win32.

2014-01-29  Murray Cumming  <murrayc@murrayc.com>

	OptionContext: Add API documentation based on the C docs.

	* glib/src/optioncontext.hg: Add class overview documentation
	based on the C documentation, but reworded to match our C++ API.
	This should now provide some clue about where to start other
	than with our (well hidden) example code.
	* glib/src/optiongroup.hg: Add documentation for the add_entry*()
	methods.

2014-01-28  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add Gio::Notification

	* gio/src/application.hg: Add send_notification(), withdraw_notification().
	* gio/src/notification.[hg|ccg]: New files.
	* gio/src/filelist.am: Add notification.hg.
	* gio/giomm.h: Add giomm/notification.h.
	* tools/m4/convert_gio.m4: Add conversions between GNotification and
	Gio::Notification. Bug #722896.

2014-01-25  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Action: Fix activate(const Glib::Variant<T_Value>& value)

	* gio/src/action.hg: Make activate(const Glib::Variant<T_Value>& value)
	call activate_variant(). Fix a typo in a comment. Bug #722896 comment 3.

2014-01-21  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add _IGNORE()s, remove obsolete comments

	* gio/src/cancellable.hg: Remove obsolete comment.
	* gio/src/dbusmessage.hg: Fix a typo. Remove obsolete comment. Add _IGNORE().
	* gio/src/application.hg:
	* gio/src/inputstream.hg:
	* gio/src/outputstream.hg:
	* gio/src/socketconnection.hg:
	* glib/src/bytes.hg:
	* glib/src/module.hg:
	* glib/src/variant.hg: Add _IGNORE().

2014-01-17  Murray Cumming  <murrayc@murrayc.com>

	2.39.3

2014-01-17  Murray Cumming  <murrayc@murrayc.com>

	Regenerate C docs.

2014-01-17  Murray Cumming  <murrayc@murrayc.com>

	Regenerate signal/property .defs

2014-01-17  Murray Cumming  <murrayc@murrayc.com>

	Regenerate functions .defs.

2014-01-17  Murray Cumming  <murrayc@murrayc.com>

	Regenerate enums defs.

2014-01-17  Murray Cumming  <murrayc@murrayc.com>

	Add a TODO comment for C++11.

2013-12-09  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::ustring: Delete an obsolete TODO comment

	* glib/glibmm/ustring.cc: The comment added 2007-08-12 by commit
	https://git.gnome.org/browse/glibmm/commit/?id=132b0ceb8c30ef82a6c11635eff8e7b41feba357
	is obsolete or a misunderstanding. A std::wostream requires a wchar_t string
	as input from the C++ code, but the character encoding of a written file is
	determined by the std::wostream's std::locale.

2013-12-09  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::ThemedIcon::get_names(): Use _WRAP_METHOD

	* gio/src/themedicon.[hg|ccg]: Use _WRAP_METHOD instead of hand-written
	code. gmmproc does not complain.

2013-12-09  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Mount::guess_content_type_finish(): Correct the documentation

	* gio/src/mount.hg: guess_content_type_finish(): Adapt the docs to C++
	instead of copying directly from glib.

2013-12-09  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::DBus::AuthObserver: Add example from the C API docs in class docs

	* gio/src/dbusauthobserver.hg: Add the example from the C API docs,
	translated to C++.

2013-12-08  Adam Sampson  <ats-gnomebugs@offog.org>

	This test assumes that the first DNS result it gets for www.google.com is an IPv4 address -- but it can equally well be an IPv6 address. Create the right kind of socket to match.

2013-11-18  Murray Cumming  <murrayc@murrayc.com>

	2.38.1

2013-11-13  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::content_type_*(): Improve documentation

	* gio/giomm/contenttype.h: Add @defgroup giommContentType. Useful as
	a link target from Gtk::AppChooser, similar to a link from
	GtkAppChooser:content-type to GContentType. See gtk+ bug #650012.
	Several minor fixes in content_type_*() docs.

2013-11-07  Murray Cumming  <murrayc@murrayc.com>

	Added a comment.

2013-10-30  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	giomm_tls_client test: Add some comments

	* tests/giomm_tls_client/main.cc: Add comments describing what to do if
	the test fails because glib does not find a TLS backend.

2013-10-14  Murray Cumming  <murrayc@murrayc.com>

	Gio::ActionGroup: Remove a nonsensical check.

	* gio/src/actiongroup.hg: get_action_state_hint():
	Remove a wrongly copy/pasted g_return_if_fail() line that
	causes a compiler error when the template is actually used.
	Ideally we would have tests for uses of templated methods.
	Bug #709963 (Johannes Meng, David Evans)

2013-10-11  Murray Cumming  <murrayc@murrayc.com>

	2.38.0

2013-10-11  Murray Cumming  <murrayc@murrayc.com>

	Gio::Settings: Add create_action().

2013-10-08  Murray Cumming  <murrayc@murrayc.com>

	Gio::MenuItem: Add set_action(), unset_target() and unset_action_and_target().

	* gio/src/menuitem.[hg|ccg]: set_action() and unset_target()
	replace set_action_and_target(action), which is now deprecated.

2013-10-08  Murray Cumming  <murrayc@murrayc.com>

	Action/ActionGroup: Make some parameter parameters optional.

	* gio/src/action.[hg|ccg]: Add an activate() method that takes no
	parameter.
	* gio/src/actiongroup.hg: activate_action(): Add a method overload
	that takes no parameter parameter.

2013-10-08  Murray Cumming  <murrayc@murrayc.com>

	Action: print_detailed_name(): Remove the action_name parameter.

	* gio/src/action.hg: This is a non-static version of the method,
	so we can just use get_name(). We already use the instance to
	get the state type.

2013-10-08  Murray Cumming  <murrayc@murrayc.com>

	Docs: Add Action* and MenuItem docs.

2013-10-01  Murray Cumming  <murrayc@murrayc.com>

	Updated a comment

2013-10-01  Murray Cumming  <murrayc@murrayc.com>

	Updated a comment

2013-09-27  Murray Cumming  <murrayc@murrayc.com>

	Menu: Add a TODO

2013-09-27  Murray Cumming  <murrayc@murrayc.com>

	Gio::MenuItem: get/set_attribute(): Deprecated for *_value() methods.

	* gio/src/menuitem.hg: set_attribute(): Deprecate this in favour of
	set_attribute_value() though it was previously the other way around.
	Add get_attribute_value() and deprecate get_attribute() in favour
	of it.
	This lets us, one day, remove those set_attribute() and
	get_attribute() methods and replace them with more pleaseant
	templated set/get_attribute() methods that just call the
	*_value() methods, as in Gio::Action.

2013-09-26  Murray Cumming  <murrayc@murrayc.com>

	Add a comment

2013-09-26  Murray Cumming  <murrayc@murrayc.com>

	Gio::ActionMap: Fix a reference-counting problem.

	* gio/src/actionmap.hg: add_action_vfunc(): Add a custom _CONVERSION()
	that takes a reference, just for this vfunc. We would have
	seen the need for this before if it had used a const & instead
	of passing the RefPtr by value, which we probaby cannot change
	now without breaking ABI.

2013-09-23  Krzesimir Nowak  <qdlacz@gmail.com>

	.gitignore: Update.

	* .gitignore: Ignore the files generated by Automake testing
	infrastructure.

2013-09-23  Krzesimir Nowak  <qdlacz@gmail.com>

	ByteArray: Fix refcount problems.

	* glib/src/bytearray.hg: Add refreturn to methods returning self.

2013-09-23  Krzesimir Nowak  <qdlacz@gmail.com>

	ByteArray: Add some tests for methods returning self.

	* tests/Makefile.am:
	* tests/glibmm_bytearray/main.cc: New file with tests. These are
	failing now.

2013-09-20  Murray Cumming  <murrayc@murrayc.com>

	2.37.93

2013-09-20  Murray Cumming  <murrayc@murrayc.com>

	Regenerated methods .defs files

2013-09-20  Murray Cumming  <murrayc@murrayc.com>

	tools: h2def.py: Handle *_DEPRECATED_IN_*_FOR (*)

2013-09-20  Murray Cumming  <murrayc@murrayc.com>

	Spawn: Use the new SPAWN_DEFAULT instead of 0.

	* glib/src/spawn.hg: The value is the same, however.

2013-09-20  Murray Cumming  <murrayc@murrayc.com>

	Gio::File: Add measure_disk_usage() and measure_disk_usage_async().

	* gio/src/file.[hg|ccg]: Wrap g_file_measure_disk_usage(),
	g_file_measure_disk_usage_async() and
	g_file_measure_disk_usage_finish(), based on the copy() and
	copy_async() methods, which also have 2 slots.
	* tools/m4/convert_glib.m4: Add a conversion for guint64&.

2013-09-20  Murray Cumming  <murrayc@murrayc.com>

	Gio::Settings: Add get/set_uint().

2013-09-20  Murray Cumming  <murrayc@murrayc.com>

	Regenerated docs .xml files

2013-09-20  Murray Cumming  <murrayc@murrayc.com>

	Regenerated extra .defs files

2013-09-20  Murray Cumming  <murrayc@murrayc.com>

	Regenerated methods .defs files

2013-09-20  Murray Cumming  <murrayc@murrayc.com>

	Regenerated enums .defs files

2013-09-17  Murray Cumming  <murrayc@murrayc.com>

	Fix the build after previous commit

2013-09-17  Murray Cumming  <murrayc@murrayc.com>

	Remove obsolete comment.

2013-09-17  Murray Cumming  <murrayc@murrayc.com>

	giomm: Add VariantParseError.

2013-09-16  Murray Cumming  <murrayc@murrayc.com>

	ActionMap: lookup_action(): Fix the reference counting.

	* gio/src/actionmap.hg: Use refreturn.

2013-09-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Port tools/defs_gen to Python 3.

	* .gitignore: Ignore /tools/defs_gen/__pycache__/.
	* tools/defs_gen/*.py: Port to Python 3. These Python sources now run with
	both Python 2 and Python 3. Tested with 2.7.3 and 3.2.3.
	Bug #690969.

2013-09-10  Murray Cumming  <murrayc@murrayc.com>

	2.37.7

2013-09-08  José Alburquerque  <jaalburquerque@gmail.com>

	gmmproc: Pass NULL to C function calls for optional empty strings.

	* tools/pm/Output.pm (convert_args_cpp_to_c): When generating
	conversions for the C++ arguments, if the argument is optional
	and it is a std::string or a Glib::ustring, prepend a check for
	the empty string to the standard conversion, passing NULL to the
	C function if the string is empty.

	Bug #686909.

2013-09-08  Murray Cumming  <murrayc@murrayc.com>

	Revert "gmmproc: Pass 0 (NULL) instead of  to C functions."

	This reverts commit 5acce15576a91aec89c04b8fe5f8532b192acb71.

2013-09-08  Murray Cumming  <murrayc@murrayc.com>

	Revert "Pass 0 (NULL) instead of  for C properties."

	This reverts commit db1668a39d9646882d5aa6b7386a3b7ea70f99af.

2013-09-08  Murray Cumming  <murrayc@murrayc.com>

	Revert "Fix the build"

	This reverts commit 5d4342dd14bb7ca79b63c1341fdfa420164b35e4.

2013-09-06  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Update Visual Studio Projects

	* Purge some of the unecessary entries form the project files, notably the
	empty items in the Visual Studio 2005/2008 projects and linking to
	gthread-2.0.lib, as the gthread library is considered deprecated and it
	is no longer necessary to link to it since quite some time ago.
	* Clean up the formatting of the Project Files.
	* Fix the include paths on including the libsigc++ headers, notably
	sigc++config.h.
	* Update the glibmm and giomm projects as newer sources were added so that
	these libraries will build properly.

2013-09-03  Murray Cumming  <murrayc@murrayc.com>

	Gio: Menu: Add insert/append/prepend_section() with no label parameter.

	* gio/src/menu.hg: Because the label may be NULL in C,
	meaning that the sections will just be separated by spaces
	instead of having titles in the menu.
	Bug #702456 .

2013-09-03  Murray Cumming  <murrayc@murrayc.com>

	Fix the build

2013-09-03  Murray Cumming  <murrayc@murrayc.com>

	Pass 0 (NULL) instead of  for C properties.

	* glib/glibmm/objectbase.cc: set_property_value():
	* glib/glibmm/propertyproxy_base.cc: set_property():
	If the value is a G_TYPE_STRING (a gchar*), and is "",
	then pass 0 instead.
	Bug #686909

2013-09-03  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: Pass 0 (NULL) instead of  to C functions.

	* tools/m4/convert_glib.m4: Avoid passing "" to C functions
	because some C developers insist on treating "" and NULL
	differently even when there is no meaningful distinction
	and when that means obviously unwanted behaviour in response
	to the "".
	Bug #686909
	And this should help with bug #702456 .

2013-09-03  Murray Cumming  <murrayc@murrayc.com>

	Link to a bug from a TODO comment

2013-08-31  Marcin Kolny  <marcin.kolny@gmail.com>

	gmmproc: Add parameter return_value in _WRAP_VFUNC.

	* tools/m4/vfunc.m4:
	* tools/pm/Output.pm:
	* tools/pm/WrapParser.pm: Add parameter return_value in _WRAP_VFUNC.
	Bug #705699.

2013-08-28  Murray Cumming  <murrayc@murrayc.com>

	2.37.6

2013-08-28  Murray Cumming  <murrayc@murrayc.com>

	Remove a comment about a fixed bug.

2013-08-28  Murray Cumming  <murrayc@murrayc.com>

	Threads: Add a new doc line from the C docs.

2013-08-15  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Fix _WRAP_SIGNAL with 'ifdef' and 'deprecated'.

	* tools/pm/Output.pm: Since 2012-09-18 convert_args_cpp_to_c() returns an
	array. Use only the first array element ($conversions) when _SIGNAL_CC is
	written.
	* tools/pm/WrapParser.pm: _WRAP_SIGNAL: Fix the merge of a doxygen comment
	in a .hg file with a comment from the .defs file. Write #if[n]def directives
	before the merged comment. (Was in the middle of the comment.)

2013-08-09  Murray Cumming  <murrayc@murrayc.com>

	Gio::Action: Add templated change_state() and activate().

	* gio/src/action.hg: Also adding change_state_variant() and
	activate_variant() for them to call, and deprecating the
	change_state() and activate() methods that take VariantBase.
	Also added change_state() and activate() templated methods
	that take Variant<T_Value> to preserve API for application
	code that previously called change_state(VariantBase) with
	a Variant<>.

2013-08-09  Murray Cumming  <murrayc@murrayc.com>

	Link to a bug report

2013-08-09  Murray Cumming  <murrayc@murrayc.com>

	Gio::SimpleAction: Make set_state() protected.

2013-08-09  Murray Cumming  <murrayc@murrayc.com>

	Gio::ActionGroup: Add templated getters.

	* gio/src/actiongroup.hg: Add templated get_action_state()
	and get_action_state_hint() methods, adding
	*_variant() methods that they call, and deprecating the
	existing methods that have no output parameters.
	Thanks to Kjell for the suggestion.

2013-08-09  Murray Cumming  <murrayc@murrayc.com>

	Gio::Action:: get_state_hint(): Correct a check.

2013-08-07  Murray Cumming  <murrayc@murrayc.com>

	Gio::ActionMap: add_action_radio_*(): Use better Slot types.

	* gio/src/actionmap.[hg|ccg]: add_action_radio_string(): Take
	a Slot that provides a string, rather than a VariantBase.
	add_action_radio_int(): Take a Slot that provides an int, rather
	than a VariantBase.
	Hopefully passing a Slot via sigc::bind() is a good idea.
	The various slot types would be less confusing if we moved
	some of this to a derived class.

2013-08-07  Murray Cumming  <murrayc@murrayc.com>

	Gio::SimpleAction: add_action() now takes a slot with no parameter.

	* gio/src/actionmap.[hg|ccg]: Change ActionSlot to take no parameter,
	hiding it via sigc::hide(), because in most cases the parameter
	is useless and annoying.
	Add add_action_with_parameter() which takes a slot with the
	parameter. We cannot just have an add_action() method overload
	because the compiler considers that ambiguous.

2013-08-07  Murray Cumming  <murrayc@murrayc.com>

	Gio::SimpleActionGroup: Some API improvements.

	* gio/src/simpleactiongroup.hg: lookup(): Add a const version
	and use refreturn. Deprecate both lookup() methods,
	however, because they just call lookup_action() in the
	base ActionMap.
	Deprecate insert() and remove() because they just call
	add_action() and remove_action() in the base ActionMap,
	confusing the API.
	I filed bug #705600 about this API problem in the C API,
	hoping they can be deprecated there.

2013-08-06  Murray Cumming  <murrayc@murrayc.com>

	Gio::ActionGroup: Add more TODOs about methods that should be templated.

	Unforunately it is too late to correct this.

2013-08-06  Murray Cumming  <murrayc@murrayc.com>

	Gio::Action: Add TODOs to templatize change_state() and activate().

	Sadly, we cannot do this until we can break ABI, I think.

2013-08-06  Murray Cumming  <murrayc@murrayc.com>

	Gio::Action: print_detailed_name() Make this templated.

	Renaming the original method to print_detaild_name_variant().
	This method is new in this development cycle, so we may still
	change it.

2013-08-06  Murray Cumming  <murrayc@murrayc.com>

	Gio::Action: Make get_state() templated.

	And do the same for get_state_hint(), renaming the originals to
	get_state_variant() and get_state_hint_variant(). We had already
	decided to break the ABI of these because the method signatures
	in the stable release were useless, so this is OK.
	We use the same technique elsewhere in glibmm and gtkmm for
	Glib::ValueBase.

2013-08-05  Murray Cumming  <murrayc@murrayc.com>

	2.37.5

2013-08-05  Murray Cumming  <murrayc@murrayc.com>

	Add some comments and point to relevant bugs.

2013-08-02  loganek  <marcin.kolny@gmail.com>

	enums.pl: fixed multi-argument defines as enum values

2013-08-01  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add interfaces to custom types before class_init.

	* glib/glibmm/class.[h|cc]: Add a clone_custom_type() overload that takes
	a vector of pointers to Interface_Class instances, so we can call their
	add_interface() functions on the GType just after registering it, but before
	instantiating the first GObject.
	custom_class_init_function(): Override properties of implemented interfaces
	that have not been overridden in a base class.
	* glib/glibmm/interface.cc:
	Interface::Interface(const Interface_Class& interface_class):
	If the GObject has not been instantiated yet, then add interface_class to
	the Class::custom_interface_classes vector.
	* glib/glibmm/objectbase.[h|cc]: Add extra_object_base_data and
	extra_object_base_data_mutex.
	* glib/glibmm/objectbase.cc: ~ObjectBase(): Erase 'this' from
	extra_object_base_data.
	* glib/glibmm/object.cc: Default constructor and
	Object::Object(const Glib::ConstructParams& construct_params): Pass the list
	of Interface_Class pointers to the new Class::clone_custom_type() method
	overload.  Bug #697229.

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	MenuItem: Reimplement the constructors.

	* gio/src/menuitem.[hg|ccg]: Because GMenuItem (and GMenu) do not
	have any properties and have actual code in their *_new() C
	convenience functions.
	Bug #705199 (Pete Woods)

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	Gio: SimpleAction, ActionMap: Reorder some parameters

	Put the initial state at the end so we can have a default value
	where that would make sense.

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	Gio::MenuItem: Add set/unset_icon().

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	Regex: Add get_max_lookbehind().

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	Gio::Menu: Add remove_all().

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	Gio::File: Wrap some new methods.

	* gio/src/file.[hg|ccg]: Add trash_async(), trash_finish(),
	make_directory_async() and make_directory_finish().

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Add mark/unmark_busy().

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	Gio::DesktopAppInfo: Wrap some new methods.

	* gio/src/desktopappinfo.hg:
	Add list_actions(), launch_action() and get_action_name().

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	Gio::Action: Wrap some new methods.

	* gio/src/action.hg: Add name_is_valid()
	and print_detailed_name().

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	Regenerate *_docs.xml files

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	Regenerate functions defs

2013-07-31  Murray Cumming  <murrayc@murrayc.com>

	Regenerate enums defs

2013-07-30  Murray Cumming  <murrayc@murrayc.com>

	Gio::Action::get_state_bool(): Correction.

	Use g_variant_type_equal() instead of comparing the pointers.

2013-07-30  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Action, ActionGroup: Fix memory problems.

	* gio/src/action.ccg: get_state_bool(): Unref GVariant.
	* tools/m4/convert_gio.m4: Take a copy when const GVariantType* is converted
	to Glib::VariantType. Affects Action and ActionGroup. Bug #690134.

2013-07-29  Murray Cumming  <murrayc@murrayc.com>

	ActionMap, SimpleAction: Add API for creating radio actions.

	* gio/src/simpleaction.[hg|ccg]:
	Add create_radio_string() and create_radio_integer().
	* gio/src/actionmap.[hg|ccg]:
	Add add_action_radio_string() and add_action_radio_integer().

	With GAction, radio items seem to be one action with multiple
	possible parameter/state values, with the parameter and state
	values always being equal. This C++ API assumes that string
	and integer will be the most commonly-used types for those values.
	These values are specified in the GtkBuilder <menu> as target
	values for <item>s each having the same action name.

	I am really not sure that this is the best API we can have.

2013-07-29  Andrew Potter  <agpotter@gmail.com>

	Gio::Action: Fix API for get_state() and get_state_hint().

	* glib/src/action.hg: get_state() and get_state_hint() now return
	a VariantBase instead of void. Bug #690134.

2013-07-27  Murray Cumming  <murrayc@murrayc.com>

	ActionMap: add_action(): Add more overloads

2013-07-27  Murray Cumming  <murrayc@murrayc.com>

	Gio::Action: Add convenience methods for bool-state (toggle) actions.

	* gio/src/simpleaction.[hg|ccg]: Add constructors and
	create_bool() methods that take a bool instead of a VariantBase
	for the state.
	* gio/src/action.[hg|ccg]: Add get_state_bool() and
	change_state(bool).

	It might be better to put these in a derived class, but I still
	hope that the developers of the C API decide not to make this
	common case so awkward:
	https://bugzilla.gnome.org/show_bug.cgi?id=704392#c4

2013-07-27  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Variant: Fix memory leaks.

	* glib/src/variant.[hg|ccg]: Call g_variant_builder_unref(). Don't take
	extra ref on objects returned from g_variant_get_child_value() or
	g_variant_get_variant(). Bug #704851.

2013-07-26  Murray Cumming  <murrayc@murrayc.com>

	configure.ac: Avoid deprecated libsigc++ API.

2013-07-24  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::TypeTraits<>: Avoid warnings when compiling with -Wcast-qual.

	* glib/glibmm/containerhandle_shared.h: Move const_cast<CTypeNonConst>(ptr)
	from the TypeTraits< Glib::RefPtr<T> > specialization to the
	TypeTraits< Glib::RefPtr<const T> > specialization, thus avoiding warnings
	when compiling with -Wcast-qual. Bug #704640.

2013-07-23  Murray Cumming  <murrayc@murrayc.com>

	ActionMap: add_action(): Actually add the action.

	Thanks to Kjell.

2013-07-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	tools: Add docs to the default constructor of _CLASS_OPAQUE_COPYABLE.

	* tools/m4/class_opaque_copyable.m4: Add documentation to the generated
	default constructor, mentioning that the constructed object is invalid.
	Bug #704639.

2013-07-23  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::DateTime: Fix compare() and equal().

	* glib/src/datetime.hg: Fix the conversion from const DateTime& to
	gconstpointer. Bug #704639.

2013-07-22  Murray Cumming  <murrayc@murrayc.com>

	Gio::SimpleAction: set_enabled(): Add default parameter value.

2013-07-22  Murray Cumming  <murrayc@murrayc.com>

	ActionMap: Add add_action(name, slot).

	This is a convenience method similar to
	g_action_map_add_action_entries() in C.

2013-07-10  Murray Cumming  <murrayc@murrayc.com>

	2.37.4

2013-07-10  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Use std::memset() instead of GLIBMM_INITIALIZE_STRUCT.

	* glib/glibmm/utility.h: Add a comment that GLIBMM_INITIALIZE_STRUCT is
	deprecated. It generates compiler warnings when __STRICT_ANSI__ is defined.
	* glib/glibmm/value.cc:
	* glib/src/optiongroup.ccg:
	* tools/m4/class_boxedtype_static.m4: Replace GLIBMM_INITIALIZE_STRUCT
	by std::memset().

2013-07-03  José Alburquerque  <jaalburquerque@gmail.com>

	Move to a generated ChangeLog.

2013-07-02  José Alburquerque  <jaalburquerque@gmail.com>

	Auto-generate the ChangeLog from the git log for 'make dist'.

	* Makefile.am: Include the dist-changelog.am file copied in build/
	from mm-common so that the ChangeLog is automatically generated from
	the git commit messages on 'make dist'.

2013-06-30  José Alburquerque  <jaalburquerque@gmail.com>

	docextract_to_xml.py: Add '&rArr;' to the list of escape sequences.

	* tools/defs_gen/docextract_to_xml.py: It represents a right arrow and
	some C API documentation uses it.

2013-06-30  José Alburquerque  <jaalburquerque@gmail.com>

	gmmproc: Add _WRAP_ENUM_DOCS_ONLY() and simplify enum docs process.

	* tools/pm/DocsParser.pm (lookup_enum_documentation): Renamed from
	lookup_enum_description().  This subroutine now produces the entire
	Doxygen enum documentation block.
	(lookup_enum_value_documentation): Removed this subroutine because
	it's been merged into the above one.
	(convert_tags_to_doxygen): Don't convert the Doxygen @enum and @var
	tags because they appear in the enum documentation obtained from the
	subroutine above.
	* tools/pm/Enum.pm (build_element_list): Remove the lines that insert
	the Doxygen documentation individually for each of the members of the
	enum because the enum member documentation is already included by the
	lookup_enum_documentation() subroutine above.
	* tools/pm/Output.pm (output_wrap_enum): Modified to use the above
	lookup_enum_documentation() subroutine.
	(output_wrap_enum_docs_only): Added this subroutine that outputs an
	enum's Doxygen documentation block if the enum's documentation exists.
	This is useful for complexly defined C enums (using C macros, for
	example) that can't presently be wrapped with _WRAP_ENUM() and must be
	handwritten but outputting their documentation is still desired.
	(output_wrap_failed): Also produce the source file which caused a
	_WRAP_* to fail so that it is clear where the error is.
	* tools/pm/WrapParser.pm (parse_and_build_output): Also check for a
	_WRAP_ENUM_DOCS_ONLY() so it can be processed.
	(on_wrap_enum_docs_only): Called by the parse_and_build_output()
	subroutine above when a _WRAP_ENUM_DOCS_ONLY() is found.

	Bug #703155.

2013-06-27  Murray Cumming  <murrayc@murrayc.com>

	Revert "C++11: Use auto in examples."

	This reverts commit 9b0554e2c9deca2399e654e7984c9dfe3b67e387.

	This was not meant to be in the master branch.

2013-06-27  Murray Cumming  <murrayc@murrayc.com>

	tls_client test: Catch an exception

	* giomm_tls_client/main.c: Catch an exception because that is what
	actually happens when there is no internet connection.
	It still fails in that case, however.

2013-06-26  Murray Cumming  <murrayc@murrayc.com>

	C++11: Use auto in examples.

2013-06-10  José Alburquerque  <jaalburquerque@gmail.com>

	Gen Scripts: Minor clean up of the description of the scripts.

	* tools/gen_scripts/gio_generate_docs.sh:
	* tools/gen_scripts/gio_generate_enums.sh:
	* tools/gen_scripts/gio_generate_extra_defs.sh:
	* tools/gen_scripts/gio_generate_methods.sh:
	* tools/gen_scripts/glib_generate_docs.sh:
	* tools/gen_scripts/glib_generate_enums.sh:
	* tools/gen_scripts/glib_generate_extra_defs.sh:
	* tools/gen_scripts/glib_generate_methods.sh:

2013-06-09  José Alburquerque  <jaalburquerque@gmail.com>

	gmmproc: Use an environment variable for the return mismatches.

	* tools/gmmproc.in: Check for the GMMPROC_RETURN_MISMATCHES
	environment variable and use its value as the default for the internal
	boolean '$main::return_mismatches' variable which when true makes
	gmmproc report if the return type in a _WRAP_METHOD() does not match
	the C function return type.

2013-06-07  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Write glibmm version in generated files.

	* tools/gmmproc.in: Use autoconf's substitution variable @PACKAGE_VERSION@.
	* tools/m4/base.m4: _START() macro: Add argument glibmm_version.
	* tools/pm/Output.pm: output_temp_g1(): Add argument glibmm_version.

	The problems with gtkmm 2.24.3 (bug 697835 and bug 700495) show that it can
	be useful to easily see which version of gmmproc/glibmm has generated a file.

2013-06-06  José Alburquerque  <jaalburquerque@gmail.com>

	Gio::DBusInterfaceSkeleton: Constant corrections.

	* gio/src/dbusinterfaceskeleton.hg (get_info): Add a const get_info()
	method returning a constant InterfaceInfo and make the original one
	non-constant.
	(has_connection): Accept the Connection as constant because it should
	not be modified.
	* tools/m4/convert_gio.m4: Add a needed conversion.

2013-06-05  José Alburquerque  <jaalburquerque@gmail.com>

	giomm: Add the Gio::DBus::InterfaceSkeleton class.

	* gio/src/dbusinterfaceskeleton.{ccg,hg}:
	* gio/src/filelist.am: Add the sources wrapping the methods,
	properties and signals and list the sources in the list of files to be
	built.
	* gio/src/gio_signals.defs:
	* tools/extra_defs_gen/generate_defs_gio.cc: Add the
	GDBUSInterfaceSkeleton GType to the properties and signals defs
	generation tool and regenerate the .defs file.
	* tools/m4/convert_gio.m4: Add the conversions for the wrapped
	methods, properties and signals.

2013-06-05  Murray Cumming  <murrayc@murrayc.com>

	Add the configure.ac and NEWS changes from 3.6.2.

2013-06-05  José Alburquerque  <jaalburquerque@gmail.com>

	Add the configure.ac and NEWS changes from 3.6.1.

2013-06-04  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::MainContext: Fix a small error in the documentation of acquire().

	* glib/glibmm/main.h: Change "context is the owner" to "thread is the owner".

2013-06-04  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	tests: Fix the glibmm_mainloop test.

	* tests/glibmm_mainloop/main.cc: Make it work as expected whichever thread
	executes first.

2013-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	tests: Add the glibmm_mainloop test.

	* tests/glibmm_mainloop/main.cc: New file. Tests MainContext and MainLoop,
	including MainContext::invoke().
	* tests/Makefile.am: Add glibmm_mainloop/test. Bug #668184.

2013-06-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::MainContext: Add invoke().

	* glib/glibmm/main.[h|cc]: Add Glib::MainContext::invoke(). Bug #668184.

2013-05-21  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Add missing includes in glibmm.h and bytearray.hg.

	* glib/glibmm.h:
	* glib/src/bytearray.hg: Add missing includes.

2013-05-21  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	tools: Improve the testheaders.sh script.

	* tools/test_scripts/testheaders.sh: Stop if pkg-config fails.

2013-05-18  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	tools: Add the testheaders.sh script.

	* tools/test_scripts/testheaders.sh: New file. Compiles each specified header
	file, one at a time. Bug #697835.

2013-05-18  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	tools: Add the testmmh.sh script.

	* tools/test_scripts/testmmh.sh: New file. Checks if all header files are
	included in a <name>mm.h file. Bug #699993.

2013-05-14  José Alburquerque  <jaalburquerque@gmail.com>

	Custom Interface Properties: Use base finalize function to free data.

	* glib/glibmm/class.cc (Class::clone_custom_type): Specify a custom
	base finalize function for the custom type which would free the
	properties data that might exist due to properties of implemented
	interfaces being overridden.  This is better than having an interface
	finalize function because the custom type could implement several
	interfaces which would mean that the interface finalize function would
	execute more than once as opposed to just once for the base finalize
	function.
	* glib/glibmm/class.h (Class::interface_finalize_function): Replace
	with Class::custom_class_base_finalize_function().

	* glib/glibmm/interface.cc (Interface_Class::add_interface): Do not
	specify a custom interface finalize function.

	(Interface::Interface(const Interface_Class&): Also initialize the
	property GValues using g_param_value_set_default() so that they are
	initialized with the default values of the properties and not just the
	default value of the GValue type.

	Bug #697229.

2013-05-07  José Alburquerque  <jaalburquerque@gmail.com>

	UnixSocketAddress: Add the "path-as-array" property.

	* gio/src/unixsocketaddress.hg:

2013-05-07  Michael Kruglos  <space3000@gmail.com>

	glibmm: Wrapped Base64 functionality from glib

	encoding and decoding are wrapped.
	step by step and in-place decoding are not wrapped.
	(they're too low level for C++, and they're available from the C library.)

	Bug #611589.

2013-04-29  José Alburquerque  <jaalburquerque@gmail.com>

	gmmproc: Output.pm: Use a better name for the c param mappings hash.

	* tools/pm/Output.pm (output_wrap_meth, convert_args_cpp_to_c,
	get_ctor_properties): Replace the 'cpp_param_mappings' variable name
	with 'c_param_name_mappings' which describes the function of the hash
	a little better.

2013-04-29  José Alburquerque  <jaalburquerque@gmail.com>

	DBusConnection: Correct a misplaced #endif G_OS_UNIX.

	* gio/src/dbusconnection.hg: Move the #endif from below the
	call_finish _WRAP_METHOD() to below the non-cancellable call method
	declaration.  It worked as it was because what was generated by
	gmmmproc was an #ifdef G_OS_UINX/#endif embedded in an outer #ifdef
	G_OS_UNIX/#endif but it's how it should be now.

2013-04-29  José Alburquerque  <jaalburquerque@gmail.com>

	Value: Remove unneeded whitespace in source files.

	* glib/glibmm/value.cc:
	* glib/glibmm/value.h:
	* glib/glibmm/value_custom.cc:
	* glib/glibmm/value_custom.h:
	* glib/src/value_basictypes.cc.m4:
	* glib/src/value_basictypes.h.m4:

2013-04-29  José Alburquerque  <jaalburquerque@gmail.com>

	tools: Remove blank lines in files.

2013-04-29  José Alburquerque  <jaalburquerque@gmail.com>

	Output.pm: convert_args_c_to_cpp(): Reverse mappings hash correctly.

	* tools/pm/Output.pm (convert_args_c_to_cpp): Reverse the hash that
	maps from parameter names to indexes to a hash that maps from
	indexes to parameter names correctly (by dereferencing the hash
	reference) so that parameter reordering for virtual functions works
	for all Perl versions.

	Bug #698989 (David Evans, John Ralls)

2013-04-29  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Fix _WRAP_SIGNAL(custom_c_callback) for void func().

	* tools/m4/signal.m4: If custom_c_callback is specified, and the signal
	handler takes no arguments and returns void, generate a SignalProxyInfo
	structure with pointers to local functions instead of
	&Glib::SignalProxyNormal::slot0_void_callback. Bug #605728.

2013-04-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	Interface: Add a comment about overriding properties in constructor.

	* glib/glibmm/interface.cc (Interface(onst Interface_Class&)): Explain
	what is happening with the lines that override the properties of the
	implemented interface, if any, for a custom type.

2013-04-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	Fix the ChangeLog file.

2013-04-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	Settings: Wrap the properties.

	* gio/src/settings.hg:

2013-04-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	Custom Interfaces: Implement derived interface properties in present.

	* glib/glibmm/class.cc (Class::properties_quark): Initialize this
	GQuark which is used to store/get the data used for setting and
	getting the properties of the interfaces that a custom type overrides.
	(Class::interface_finalize_function): Add this function which
	once invoked frees the property data stored as gqata in the GType and
	allocated/appended to in the Glib::Interface constructor below.
	* glib/glibmm/class.h: Declare the interface_finalize_function above.
	Also declare the quark used to store/get the property data and the
	typedef data type of the property data.

	* glib/glibmm/interface.cc (Interface_Class::add_interface): Specify a
	custom interface finalize function when adding the interface so that
	the resources allocated for handling the derived interface properties
	can be freed if the type is a custom interface type.
	(Interface::Interface(const Interface_Class&)): Modify the constructor
	so that when dealing with a custom interface type, it gets a list of
	the properties of the interface to be added and overrides these by
	appending approperiate GValues to the data used to handle
	getting/setting properties that is stored as qdata in the GType.  The
	constructor uses g_param_spec_overrided() to override the properties
	of the implemented interface and g_object_install_property() to
	install the properties.

	* glib/glibmm/property.cc (PropertyBase::install_property): Rewrite
	this method so that the acquired generated id's of custom implemented
	properties does not collide with the id's of properties of implemented
	interfaces that have been overridden in a custom type.  This is done
	by offsetting the acquired generated id (by addition) with the number
	of already existing properties (the ones that have been overridden).
	(custom_get_property_callback): Rewrite this function (which gets
	properties for custom types) so that if the property id is less than
	or equal to the number of overridden interface properties (which would
	mean that an overridden interface property should be gotten) the
	correct overridden interface property is gotten.  Otherwise, a custom
	property should be retrieved, in which case the id is offset (by
	subtraction) when the PropertyBase is retrieved from the id which
	would ensure getting the correct PropertyBase.
	(custom_set_property_callback): Rewrite this function as the above
	custom_get_property_callback was rewritten.

2013-04-18  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Source: Fix the destruction and deletion.

	* glib/glibmm/main.cc: Keep the Glib::Source wrapper until the GSource
	instance has been destroyed and all RefPtr<Source> have been deleted.
	Keep a separate ref count in glibmm. Bug #561885.

2013-04-18  Murray Cumming  <murrayc@murrayc.com>

	NEWS: Changes from 2.34 5o 2.36

2013-04-17  Murray Cumming  <murrayc@murrayc.com>

	Add NEWS and configure.ac changes from glibmm 3.6.0 release.

2013-04-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	ByteArray: get_data(): Add a const version.

	* glib/src/bytearray.{ccg,hg}: Make the already existing get_data()
	method non-constant and add a constant one returning a const array as
	is done in general in *mm modules.

2013-04-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	Tls Client Test: Update to test the TlsDatabase class.

	* tests/giomm_tls_client/main.cc: Slightly cleaned it up from the
	first commit.  Lookup the issuer's certificate in the database which
	is found when I run the test.

2013-04-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsDatabase: Make sure the cancellable param is optional in methods.

	* gio/src/tlsdatabase.hg: Use the {.?} gmmproc parameter option for
	the cancellable to ensure that it is optional (so that there are
	methods that don't require a cancellable for the methods that have
	one).

2013-04-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	ByteArray: Add size() and get_data() methods.

	* glib/src/bytearray.{ccg,hg}:  Add these methods so that accessing
	the underlying GByteArray's data and len members (which is how it is
	done in the C API) is just as easy with glibmm.  Also use _WRAP_METHOD
	to wrap the create() method.

2013-04-10  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Parse the argument list of methods correctly.

	* tools/pm/Function.pm (parse_param): When splitting the argument
	list split the parameter '{...}' options out and separately and deal
	with them in their own 'elsif' which is more clear and avoids code
	duplication.  Also, don't split the '<...>' matches greedily because
	that causes problems when a Glib::RefPtr<> parameter has a default
	value.

	This problem was discovered while trying to not use the optional
	parameter syntax for the Gio::TlsCertificate::verify() method by using
	a default value for the 'trusted_ca' parameter although upon
	investigation it became clear that keeping the syntax (and the method
	overloads) would be useful because a verify() with no parameters can
	be used to verify things about a certificate unrelated to the identity
	and the trusted_ca (see the TlsCertificateFlags enum that the method
	returns).

2013-04-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	Interface: Fix a small typo.

	* glib/glibmm/interface.cc:

2013-04-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::TlsServerConnection: Wrap it just like TlsClientConnection.

	* gio/src/tlsserverconnection.{ccg,hg}: Use a custom cast constructor
	just as in TlsClientConnection because this class too derives from
	Glib::Interface and Gio::TlsConnection though it only derives from
	GInterface in the C API.  It would have the same problems described in
	the commit fixing the TlsClientCOnnection class (the next to the last
	one).

2013-04-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	Tests: Add a basic test for the Tls* API.

	* tests/giomm_tls_client/main.cc:  The test basically works though it
	would be good to test more thoroughly the TlsDatabase API.

2013-04-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::TlsClientConnection: Make the class work correctly.

	* tools/m4/class_interface.m4 (_CUSTOM_CTOR_CAST): Add a new macro so
	that classes wrapped by the _CLASS_INTERFACE() macro can implement a
	custom cast constructor.  This is so that classes like
	Tls[Client|Server]Connection, that derive from Glib::Interface but
	should also derive from a Glib::Object derived type, though they do
	not do so in the C API, don't produce warnings from an attempt to set
	the non-existent properties of the GObject derived type when an
	attempt to construct the C object is made in the default Glib::Object
	constructor.  Glib::wrap_auto_interface<>(), which is called by
	Glib::wrap() for interfaces, uses the cast constructor to create the
	wrapper which calls the cast constructor of Glib::Interface.  If the
	Glib::Object derived base class of the wrapper has a default
	constructor, that constructor is then called which leads to the
	Glib::Object default constructor being called, which tries to
	construct the C object and set its properties thus producing the
	property setting warnings.  A custom cast constructor can chain up to
	the cast constructor of the Glib::Object derived type thus avoiding
	the call to the Glib::Object default constructor and the non-existent
	property setting warnings.
	* glib/glibmm/interface.cc:
	* glib/glibmm/interface.h (Interface): Add a default constructor so
	that in the cases above (when the cast constructor of the
	Glib::Object's derived type is used), the compiler can find a
	Glib::Interface default constructor to use.  Using the Glib::Interface
	cast constructor as well as the cast constructor of the Glib::Object
	derived type would cause "ObjectBase::initialize() called twice
	for the same GObject" errors.

2013-04-06  Murray Cumming  <murrayc@murrayc.com>

	Add a test of implementing an interface.

	* tests/Makefile.am:
	* tests/glibmm_interface_implementation/main.cc: Add a very simple
	test that implements an interface, with a vfunc implementation and
	make sure that the vfunc is called when the caller method is called.

2013-04-03  Murray Cumming  <murrayc@murrayc.com>

	Add a comment

2013-04-02  José Alburquerque  <jaalburqu@svn.gnome.org>

	ByteArray: Add a Glib::Value<> template specialization for it.

	* glib/src/bytearray.{ccg,hg}: Add the specialization for ByteArray so
	that getting/setting properties of that type work.  Also added a
	Glib::ByteArray::get_type() method required for the specialization to
	compile.

2013-04-01  Murray Cumming  <murrayc@murrayc.com>

	ChangeLog: Correct a branch name

2013-04-01  Murray Cumming  <murrayc@murrayc.com>

	ChangeLog: Correct a branch name

2013-04-01  Murray Cumming  <murrayc@murrayc.com>

	Revert "giomm: Temporarily remove the Tls* related API."

	This reverts commit 45511d8e0ffdda76d792174569535a8b7f326d93.

	We will now try to get this right for the glibmm 3.7/8 releases.

2013-04-01  Murray Cumming  <murrayc@murrayc.com>

	Mark the branch in the ChangeLog

2013-04-01  Murray Cumming  <murrayc@murrayc.com>

	2.36.0

2013-03-31  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsCertificate: Use std::string for data instead of char*.

	* gio/src/tlscertificate.{ccg,hg} (TlsCertificate): Use a std::string
	in the data constructor instead of a char* because it is more C++
	like.  Remove the default value for the length argument so there is no
	ambiguity with the file constructor (which also uses std::string for
	the filename).
	(create_from_pem): Renamed from create() so that there is no ambiguity
	with the other file create() methods (one with a filename argument and
	the other with a filename and key file arguments).  Handwrote the
	method in the .ccg file (_WRAP_CREATE does not allow a custom method
	name).
	(property_certificate_pem): Use a std::string instead of a char* for
	the property type in keeping with the use of std::string for pem data.

	These changes are for when the Tls* classes are re-added to the build.

2013-03-31  José Alburquerque  <jaalburqu@svn.gnome.org>

	Credentials: Add the get_unix_pid() method.

	* gio/src/credentials.hg: Add the new method wrapping the
	g_credentials_get_unix_pid() C function.

2013-03-27  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Temporarily remove the Tls* related API.

	Temporarily remove the API until after the coming stable release so
	the API can be better developed thus avoiding the risk of needing an
	API or ABI break later.

	* gio/src/filelist.am: Remove the tls*.hg files from the build.  This
	will keep the sources from being built and included in the upcoming
	tarball release.
	* gio/giomm.h: #if out the tls*.h includes.
	* gio/src/enums.hg: Comment out the TlsAuthenticationMode enum.
	* gio/src/error.hg: Comment out the TlsError GError.

2013-03-27  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::Tls*: Correct some referencing errors.

	* gio/src/tlscertificate.hg (get_issuer):
	* gio/src/tlsclientconnection.hg (get_server_identity):
	* gio/src/tlsconnection.hg (get*_certificate): Use refreturn in the
	wrapping of these because the C API does not reference the object when
	returning it.

2013-03-27  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm.h: Also remove the tlsfiledatabase.h include.

	* gio/giomm.h: Remove the include from here so that make check will
	not fail.

	* gio/src/error.hg (TlsError): A minor correction in the 'EOF'
	substitution regular expression.

2013-03-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsFileDatabase: Remove the class until its usage is more clear.

	* gio/src/filelist.am (tlsfiledatabase.hg): Remove from the build
	until it is more clear how the class should be used.

2013-03-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsError: Rename the EOF enum value.

	* gio/src/error.hg (EOF): Rename it to ENDOFFILE to avoid a clash with
	another definition of the identifier somewhere else which breaks the
	gtkmm build.

2013-03-26  Murray Cumming  <murrayc@murrayc.com>

	Corrected the ChangeLog

2013-03-26  Murray Cumming  <murrayc@murrayc.com>

	GTlsDatabase: Use std::string for filenames.

	* gio/src/tlsdatabase.hg: The anchor parameter
	and property are for a filename, so we should use
	std::string, because filenames are of unknown
	encoding.

2013-03-26  Murray Cumming  <murrayc@murrayc.com>

	Gio: Correct TlsDatabase/TlsFileDatbase derivation.

	* gio/src/tlsdatabase.hg:
	* gio/src/tlsfiledatabase.hg: TlsFileDatabase
	should derive from TlsDatabase, not the other
	way around. However, we do not use TlsFileDatabase,
	and it is odd (an interface that requires a
	non-interface other than GObject) so maybe we should
	not provide it yet anyway.

2013-03-26  Murray Cumming  <murrayc@murrayc.com>

	Minor whitespace change

2013-03-26  Murray Cumming  <murrayc@murrayc.com>

	Gio: Add some TODOs about changing the base classes.

	* gio/src/actionmap.hg
	* gio/src/pollableinputstream.hg
	* gio/src/pollableoutputstream.hg
	* gio/src/remoteactiongroup.hg:
	We should probably derive from their prerequisite
	(required) classes instead. These were added in
	glibmm 2.34.

2013-03-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Wrap the GTlsError GError.

	* gio/src/error.hg: Wrap the GTlsError GError in this file.

	* gio/src/tlsclientconnection.hg:
	* gio/src/tlsconnection.hg: Have default true values for boolean
	setter methods in these classes.

	* gio/src/tlsfiledatabase.hg: Clarify a TODO.
	* gio/src/dbuserror.hg: Whitespace.

2013-03-25  Murray Cumming  <murrayc@murrayc.com>

	Gio::SocketClient: Added some methods.

	* gio/src/desktopappinfo.hg: Added has_key(),
	get_string() and get_boolean().

2013-03-25  Murray Cumming  <murrayc@murrayc.com>

	Gio::SocketClient: Added some methods.

	* gio/src/socketclient.hg: Added get/set_tls(),
	get/set_tls_validation_flags(), get/set_proxy_resolver().
	Added timeout, tls, enable-proxy, tls-validation, and
	proxy-resolver properties.
	Added the event signal.
	* tools/m4/convert_gio.m4: Added necessary conversions.

2013-03-25  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio Projects: Fix and update.

	* Fix Visual C++ projects for glibmm and giomm as numerous
	sources have been added for the addition of APIs so that
	these libraries can be properly built

	* Also make the project files work better with the GLib Visual C++
	builds (which are currently supported in the GLib source
	distribution), so that the files from the GLib build can be picked
	up by the glibmm projects when the Glib sources and glibmm sources
	are extracted in the same root folder (for example,
	c:\foo\glib-2.35.9 and c:\foo\glibmm-2.35.9).  This is useful
	especially when we want to build glibmm unstable, which most
	probably needs the latest GLib unstable.

	* Fix the resolver project files for Visual C++ 2008/2010 for having
	the wrong executable output name

2013-03-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	Tls[Client|Server]Connection: Add the create() methods.

	* gio/src/tlsclientconnection.hg:
	* gio/src/tlsserverconnection.hg: Add the create() methods, wrapping
	the *_new() functions of these classes.  Since these classes are
	interfaces, it is not possible to use _WRAP_CTOR/WRAP_CREATE() to wrap
	the new functions.

	Also make these classes derive from TlsConnection which is their base
	class (see [1][2][3][4]).  Its odd because the base class is a GObject
	and the derived ones are GInterfaces, but that's how the C API has
	done it.  Hopefully it will not be a problem.

	[1] https://developer.gnome.org/gio/stable/GTlsConnection.html#GTlsConnection.description
	[2] https://developer.gnome.org/gio/stable/GTlsConnection.html#GTlsConnection.derived-interfaces
	[3] https://developer.gnome.org/gio/stable/GTlsClientConnection.html#GTlsClientConnection.description
	[4] https://developer.gnome.org/gio/stable/GTlsServerConnection.html#GTlsServerConnection.description

2013-03-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	gio/src/tls*.ccg: Remove empty namespaces.

	* gio/src/tlsconnection.ccg:
	* gio/src/tlsdatabase.ccg:
	* gio/src/tlsinteraction.ccg: Remove empty namespaces and unneeded
	includes.

	* gio/src/gio_extra_objects.defs: Add GTlsBackend to avoid a gmmproc
	documentation warning.

2013-03-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Verify that void methods should not return a value.

	* tools/gmmproc.in: ($main::return_mismatches): Add boolean to store
	whether method return mismatches should be checked.  Make it false by
	default.
	(parse_command_line_args): Add logic to parse a new
	--return-mismatches option to specify if gmmproc should verify that
	void methods should not return a value.
	(print_usage): Modify the usage message to describe the new option.

	For convenience, output the source for which there are unwrapped
	functions, properties and signals.

	* tools/pm/DocsParser.pm (remove_example_code): Also output the source
	being processed when the example code is removed (for convenience).
	* tools/pm/Output.pm (error): Once more, output the source being
	processed when an error occurs, for convenience.
	(convert_args_cpp_to_c): Add a check for when the C++ method for which
	the parameters are being converted returns void but the C function
	does not return void.  If the added option above is specified, output
	a warning.

	Bug #696364.

2013-03-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsPassword: Correct its constructor parameter order.

	* gio/src/tlspassword.hg (TlsPassword): Reorder its parameters so that
	the flag comes last with a default parameter.
	(create): Do the same for its create() method.

2013-03-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsDatabase: Const and optional parameter corrections.

	* gio/src/tlsdatabase.hg: The "interaction" parameters in the methods
	are all optional (see the C API docs).
	(verify_chain):
	(verify_chain_async):
	(verify_chain_vfunc):
	(verify_chain_async_vfunc): Make these methods const because the
	database should not be changed by verifying a certificate's chain.
	(create_certificate_handle_vfunc): Make the certificate constant
	because it should not change when creating a handle for it.

2013-03-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsConnection: Correct its base class derivation.

	* gio/src/tlsconnection.hg: The class should derive from
	Gio::IOStream, not Glib::Object as in the C API.  Also add the
	get_peer_certificate() methods.

2013-03-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsCertificate: Wrap its single virtual function.

	* gio/src/tlscertificate.hg: Wrap the "verify" virtual function.  Also
	add a default value to the length parameter of the constructor
	accepting a data character array.
	* gio/src/gio_vfuncs.defs: Add the virtual function definition so that
	it is recognized.

2013-03-21  Murray Cumming  <murrayc@murrayc.com>

	Gio::FileInfo: Added get_deletion_date().

	* glib/src/fileenumerator.hg: Wrap the new
	g_file_info_get_deletion_date() function.
	* tools/m4/convert_glib.m4: Add a necessary conversion.

2013-03-21  Murray Cumming  <murrayc@murrayc.com>

	Gio::FileEnumerator: Added get_child().

	* glib/src/fileenumerator.hg: Wrap the new
	g_file_enumerator_get_child() function.

2013-03-21  Murray Cumming  <murrayc@murrayc.com>

	Glib::VariantBase: Added check_format_string().

	* glib/src/variant.hg:
	Wrap the new g_variant_check_format_string()
	function.

2013-03-21  Murray Cumming  <murrayc@murrayc.com>

	Gio::AsyncResult: Added is_tagged().

	* gio/src/applicationcommandline.hg:
	Wrapped the new g_async_result_is_tagged()
	function.

2013-03-21  Murray Cumming  <murrayc@murrayc.com>

	Gio::ApplicationCommandLine: Added some methods.

	* gio/src/applicationcommandline.hg:
	Added get_stdin() and create_file_for_arg(),
	wrapping new C functions.

2013-03-21  Murray Cumming  <murrayc@murrayc.com>

	Regenerated the -signals.defs files.

	* gio/src/gio_signals.defs: Regenerated using
	tools/gen_scripts/gio_generate_extra_defs.sh.

2013-03-19  Murray Cumming  <murrayc@murrayc.com>

	Regenerated the -methods.defs files.

	* gio/src/gio_methods.xml:
	* glib/src/glib_functions.xml:
	* glib/src/gmodule_functions.xml:
	* glib/src/gobject_functions.xml: Regenerated using
	tools/gen_scripts/gio_generate_methods.sh and
	tools/gen_scripts/glib_generate_methods.sh,
	with a slight hand-edit to avoid the problem in
	gioschedule.h with h2def.py (see previous commit).

2013-03-19  Murray Cumming  <murrayc@murrayc.com>

	h2def.py: Handle GLIB_AVAILABLE_IN_ALL

	* tools/defs_gen/h2def.py: Do not just ignore
	functions prefixed with GLIB_AVAILABLE_IN_ALL.
	This handles the latest glib/gio/gactiongroup.h file.

	However, we still need to handle the new
	GLIB_DEPRECATED_IN_2_36_FOR(old_func) form
	now used in glib/gio/gioschedule.h.

2013-03-19  Murray Cumming  <murrayc@murrayc.com>

	Regenereated the -enums.defs files.

	* gio/src/gio_enums.xml:
	* glib/src/glib_enums.xml: Regenerated using
	tools/gen_scripts/gio_generate_enums.sh and
	tools/gen_scripts/glib_generate_enums.sh.

2013-03-19  Murray Cumming  <murrayc@murrayc.com>

	Update .gitignore

2013-03-19  Murray Cumming  <murrayc@murrayc.com>

	Regenereated teh -docs.xml files.

	* gio/src/gio_docs.xml:
	* glib/src/glib_docs.xml: Regenerated using
	tools/defs_gen/docextract_to_xml.py

2013-03-19  Murray Cumming  <murrayc@murrayc.com>

	2.35.9

2013-03-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsFileDatabase: Use _WRAP_METHOD() to wrap the create() method.

	* gio/src/tlsfiledatabase.{ccg,hg}: It can't be properly wrapped using
	_WRAP_CTOR()/WRAP_CREATE() yet but it can be wrapped using
	_WRAP_METHOD().  (I don't know why I thought it had to be
	handwrapped.)

2013-03-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsFileDatabase: Add a TODO.

	* gio/src/tlsfiledatabase.hg:

2013-03-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsFileDatabase: Wrap the create() method.

	* gio/src/tlsfiledatabase.{ccg,hg}: Manually wrap it because
	presently the *_new() function does more than call g_initable_new().

2013-02-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	Tls*: Add the rest of the (unwrapped) properties, methods and vfuncs.

	* gio/src/tlscertificate.{ccg,hg}: Wrap the "certificate" property.
	* gio/src/tlsclientconnection.hg: Add the get_accepted_cas() methods
	and the "accepted-cas" property.
	* gio/src/tlsdatabase.hg: Add the lookup_certificates_issued_by*()
	methods and virtual functions.  Correct a TlsCertificate conversion
	for the virtual functions so that the underlying GObject is properly
	copied from the C++ wrapper.
	* tools/m4/convert_gio.m4: Add a ByteArray conversion.

	* gio/src/tlspassword.hg: Clarify a TODO.

	* glib/glibmm.h: Add bytes.h and bytearray.h to the includes.

2013-02-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	glibmm: Add ByteArray.

	* glib/src/bytearray.{ccg,hg}:
	* glib/src/filelist.am: Add the new sources for the ByteArray class
	that wraps GByteArray and include the sources in the build.  Some of
	the GTls* API uses GByteArray so it is necessary to wrap it.
	* glib/src/glib_extra_objects.defs: Include an object definition for
	GByteArray to avoid a gmmproc documentation warning.
	* tools/m4/convert_glib.m4: Add a GByteArray conversion so the sources
	can be processed properly.

2013-02-25  Pavel Vasin  <rat4vier@gmail.com>

	AppInfo::get_all(): Fix ownership

	Bug #694505

2013-02-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsDatabase: Virtual function const correction.

	* gio/src/tlsdatabase.hg (create_certificate_handle_vfunc): Make it
	const because it does not modify the database.

2013-02-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	Tls[Database|Interaction]: Add the virtual functions.

	* gio/src/tlsdatabase.hg:
	* gio/src/tlsinteraction.hg: Add the virtual functions.  It is
	necessary to wrap GByteArray to wrap the remaining three virtual
	functions of TlsDatabase.

2013-02-21  Murray Cumming  <murrayc@murrayc.com>

	2.35.8

2013-02-21  Murray Cumming  <murrayc@murrayc.com>

	Fix the build  with --enable-warnings=fatal.

	* glib/src/threads.hg: The GThread definition is now deprecated,
	meaning it should only be used via a pointer.
	However, we depend on it, so this temporarily undefs the
	deprecation, so we can still use those checks elsewhere in the build.
	It looks like we will have to do a third version of Glib::Threads,
	after already replacing Glib::Thread.
	This fixes make distcheck.

2013-02-21  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Signal*::connect(): Make them less thread-unsafe.

	* glib/glibmm/main.cc: Make SignalTimeout::connect(), connect_seconds(),
	SignalIdle::connect() and SignalChildWatch::connect() less thread-unsafe
	by moving conn_node->install() to before g_source_attach().
	* glib/glibmm/main.h: Describe that the Signal*::connect*() methods that
	return a sigc::connection are not thread-safe. Bug #396958.

2013-02-20  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Signal[Timeout|Idle]::connect_once() docs: Warn about thread-unsafety.

	* glib/glibmm/main.cc: Fix an incomplete comment.
	* glib/glibmm/main.h: SignalTimeout::connect_once(), connect_seconds_once(),
	SignalIdle::connect_once(): Describe the caution necessary because
	sigc::trackable-derived objects are not thread-safe. Bug #396963.

2013-02-20  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	ThreadPool::push() docs: Note that sigc::trackable is not thread-safe.

	* glib/glibmm/threadpool.h: push(): Describe how sigc::trackable-derived
	classes can be used in a thread-safe way.
	* glib/src/threads.hg: create(): Correct the description added in the
	previous commit. Bug #512348.

2013-02-20  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Threads::Thread::create(): Update the documentation.

	* examples/thread/thread.cc: Don't derive from sigc::trackable.
	* glib/src/threads.hg: create(): Describe how sigc::trackable-derived classes
	can be used in a thread-safe way. Bug #512348.

2013-01-30  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Predefine G_OS_UNIX or G_OS_WIN32 in Doxygen's configuration file.

	* docs/reference/Doxyfile.in: Predefine either G_OS_UNIX or G_OS_WIN32,
	depending on HOST_WINDOWS_NATIVE. Update to Doxygen 1.8.3 status.
	* glib/src/iochannel.hg: Remove the DOXYGEN_SHOULD_SKIP_THIS that was added
	just to get Windows-specific methods included in the documentation.

2013-01-30  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	DBus::[Connection|Proxy]: Change ifdef G_OS_LINUX to ifdef G_OS_UNIX.

	* gio/src/dbusconnection.[ccg|hg]:
	* gio/src/dbusproxy.[ccg|hg]: Change G_OS_LINUX to G_OS_UNIX. Glib does not
	define G_OS_LINUX. Correct function declarations for DBus::Proxy::call().

2013-01-29  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Improve the conversion of documentation to Doxygen format.

	* tools/defs_gen/docextract.py: Handle 'Since ' without a colon.
	* tools/m4/signal.m4:
	* tools/pm/Output.pm: When a function declaration is surrounded by
	ifdef/endif, put its documentation inside the ifdef/endif.
	* tools/pm/DocsParser.pm: Handle 'Since ' without a colon. Escape most
	backslashes, not just \r and \n. Convert more <tags> to something that
	Doxygen understands.

2013-01-27  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Documentation: Fix many warnings from Doxygen.

	* gio/src/gio_docs_override.xml:
	* glib/src/glib_docs_override.xml: Move "Since: n.m" from the <return> to the
	<description> entries. gmmproc adds a period at the end of the @return
	Doxygen command, and Doxygen warns for "@newin{n,m}.".
	* glib/glibmm/interface.h:
	* glib/glibmm/stringutils.h:
	* glib/glibmm/vectorutils.h:
	* gio/src/*.hg:
	* glib/src/*.hg: (Here "*" means "many", not "all") Examples of changes:
	Add missing @param. Change names of parameters, to make them equal in
	function declaration and @param command. Change "@name" to "@a name".
	Change "<ulink url=" to "<a href=".

2013-01-17  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsConnection: Wrap the virtual functions.

	* gio/src/tlsconnection.hg: Wrap the three virtual functions that were
	left as TODO's now that it's possible to wrap virtual functions with
	slots.
	* tools/m4/vfunc.m4: Use 'retval' instead of 'result' for variables
	that store the result of the C base virtual function invocation and
	the C++ virtual function invocation because 'result' conflicts with
	the AsyncResult 'result' parameter of the handshake_finish_vfunc().

2013-01-17  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_VFUNC: Support the wrapping of slots.

	* tools/pm/WrapParser.pm (on_wrap_vfunc): Add support for parsing the
	additional 'slot_name', 'slot_callback', and 'no_slot_copy' options
	that do the same thing as the corresponding _WRAP_METHOD options (ie.
	specify the name of the C++ slot parameter, the name of the callback
	function and whether to use the original slot or a copy of it,
	respectively.  Also pass the options along to:
	(output_wrap_vfunc): Store the options in the C++ virtual function
	object so they can be tested for when converting the parameters and
	composing the _VFUNC* m4 macro calls.
	* tools/pm/Output.pm (output_wrap_vfunc_cc):
	- Append the additional 'slot_type', 'slot_name' and 'no_slot_copy'
	parameters to the _VFUNC_CC m4 macro invocation so that it can include
	code for the vfunc to copy the slot parameter and pass it on to the C
	function.
	- Also append the additional 'slot_type' and 'c_data_param_name' to
	the _VFUNC_PCC m4 macro so that it knows the slot type and the C
	gpointer parameter name that contains the slot so that the macro can
	generate code to extract the slot from the data parameter and pass the
	slot on to the C++ virtual function.
	(convert_args_c_to_cpp):
	- Rewritten so that it loops through the C++ parameters so that it is
	possible to re-order the parameters using the existing mapping
	functionality that allows parameters to be re-ordered for the
	_WRAP_[CREATE|CTOR|METHOD] macros.  Also re-written so that it knows
	how to deal with slot parameters.
	* tools/m4/vfunc.m4 (_VFUNC_PCC): Modified to accept the additional
	'slot_type' and 'c_data_param_name' arguments and to insert code to
	extract the slot from the C gpointer data parameter to be passed on
	to the C++ virtual function.
	(_VFUNC_CC): Modified to accept the additional 'slot_type',
	'slot_name' and 'no_slot_copy' arguments and to insert code to either
	copy the slot in a 'slot_copy' variable or set the variable to the
	actual slot (if it's so been specified) which is then passed on to the
	C function.

2013-01-16  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_[CREATE|CTOR|METHOD]: Allow any order of {} options.

	* tools/pm/Function.pm: Make it possible to use any order desired of
	the options to specify whether parameters should be optional or should
	be re-ordered in the _WRAP_* directives.

2013-01-14  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::File: Remove refreturn to avoid memory leaks.

	* gio/src/file.hg: Remove the refreturn argument from _WRAP_METHOD for read()
	and 13 other methods. The glib functions add a ref.
	Change @newin2p24 to @newin{2,24}. Bug #691606.

2013-01-09  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm.h: Add the tls[client|server]connection.h headers.

	* gio/giomm.h: Add the two new headers.

2013-01-09  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the Tls[Client|Server]Connection classes.

	* gio/src/tlsclientconnection.{ccg,hg}: Add the new client sources
	wrapping the methods and properties.
	* gio/src/tlsserverconnection.{ccg,hg}: Add the new server sources
	wrapping its single property.
	* gio/src/filelist.am: Include the new sources in the list of files to
	be built.
	* gio/src/enums.hg: Add the TlsAuthenticationMode enum needed for the
	server class here because it is documented in the Tls Overview section
	of the C API's documentation and not as part of any other class.
	* tools/m4/convert_gio.m4: Add a necessary conversion.

	* gio/src/tlsdatabase.{ccg,hg}: Fix the includes so that the
	tlscertificate.h header file does not have to be included in the .h
	file but instead in the .c file.

2013-01-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm.h: Add the new tls*.h headers.

	* gio/giomm.h: Add the
	tls[connection|database|filedatabase|interaction].h headers.

2013-01-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	Tls[Database|Interaction|Passowrd]: Const corrections.

	* gio/src/tlsdatabase.hg (verify_chain):
	(verify_chain_async): Accept the SocketConnectable as a const because
	it is used to check for certificates that have been pinned (marked as
	good) for a specific domain in a browser session and not modified.
	(lookup_certificate_issuer)
	(lookup_certificate_issuer_async): Accept the TlsCertificate for which
	to look for the issuer as const because it is not modified according
	to the docs.
	* gio/src/tlsinteraction.hg (ask_password):
	(ask_password_async)
	(invoke_ask_password): Accept the TlsPassword as non-const because the
	docs say that it is filled in by the methods, not used to compare a
	user entry with an existing password.
	* gio/src/tlspassword.hg (get_value_vfunc):
	(get_default_warning_vfunc): Make these const because they are getter
	functions.
	* tools/m4/convert_gio.m4: Adjust the conversions according to above
	changes.

2013-01-07  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _WRAP_ENUM: Skip enum constants whose names are deleted.

	* tools/pm/Enum.pm, build_element_list(): If a custom substitution argument
	in _WRAP_ENUM() removes all of an enum constant's name, exclude that constant
	from the element list. Useful for GdkEventType. Bug #544694.

2013-01-07  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Improve the search for documentation of enums.

	* tools/pm/Enum.pm, build_element_list(): Search for value documentation
	before custom substitutions are applied to the element name. Bug #544694.

2013-01-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the TlsConnection class.

	* gio/src/filelist.am:
	* gio/src/tlsconnection.{ccg,hg}: Add the new sources wrapping the
	methods, properties and signals of the new class.  Also add the
	sources to the list of files to be built and add the virtual
	functions as a TODO.
	* gio/src/gio_vfuncs.defs: Add the definitions of the virtual
	functions of the class for when the virtual functions are wrapped.
	* tools/m4/convert_gio.m4: Add conversions relevant to wrapping the
	class.

2013-01-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsDatabase: Add a TODO to wrap virtual functions.

	* gio/src/tlsdatabase.hg: Add the virtual functions but as a TODO so
	that the parameters can be properly ordered according to the order in
	the methods.
	* gio/src/gio_vfuncs.defs: Add the virtual function definitions for
	when the vfuncs are wrapped.

	* gio/src/tlscertificate.hg: Do not wrap a write-only construct-only
	property.

2013-01-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	TlsDatabase: Reorder parameters so that flags can have defaults.

	* gio/src/tlsdatabase.hg (lookup_certificate_issuer):
	(lookup_certificate_issuer_async): Reorder the parameters in these
	methods as is done in the other methods so that the flag parameter can
	be last and have a default value.

2013-01-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the TlsDatabase class which implements TlsFileDatabase.

	* gio/src/filelist.am:
	* gio/src/tlsdatabase.{ccg,hg}: Add the sources wrapping the C
	functions and include the sources in the list of files to be built.
	* tools/m4/convert_gio.m4: Add the necessary conversions for the
	wrapped methods in the sources.

	* gio/src/tlsfiledatabase.hg: Add a TODO.

2013-01-02  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the TlsFileDatabase interface.

	* gio/src/filelist.am:
	* gio/src/tlsfiledatabase.{ccg,hg}: Add the new sources wrapping a
	single property and include them in the list of files to be built.
	* gio/src/tlsinteraction.hg: Correct a typo.

2013-01-01  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the TlsInteraction class.

	* gio/src/tlsinteraction.{ccg,hg}:
	* gio/src/filelist.am: Add the sources wrapping the C functions and
	include the sources in the build.
	* gio/src/gio_vfuncs.defs: Add the virtual functions of the class.
	The vfuncs are not wrapped yet so that gmmproc can be modified so that
	virtual functions with slot parameters can be wrapped as is already
	possible with methods.
	* tools/m4/convert_gio.m4: Add necessary conversions.

2012-12-28  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_METHOD: Ensure that slot parameters can be optional.

	* tools/pm/Output.pm (output_wrap_meth): Only pass the slot parameters
	to the m4 _*METHOD() macros if convert_args_cpp_to_c() signals that a
	possible slot parameter should be included.
	(convert_args_cpp_to_c): Add a boolean called 'include_slot' to the
	objCppfunc object that is by default false that is set when a slot
	parameter is encountered and should converted.

2012-12-28  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant: Allow containing complex types in arrays and in variants.

	* glib/src/variant.hg (Variant< Variant<T> >): Add a new class capable
	of containing any Variant<>.  The class is just like
	Variant<VariantBase> except that with it, it is now possible to store
	and handle complex variant types in a variant easily in a C++ way.
	The modified test below exemplifies.
	(Variant< std::vector<T> >::create): Create a Variant<> for each of
	the members in the vector and then use g_variant_builder_add_value()
	to add the underlying GVariant of the wrapped elements in the builder
	instead of using the variadic g_variant_builder_add() function which
	causes problems when dealing with types that are more complex than
	basic ones.
	(Variant< std::vector<T> >::get_child): Rewritten to get the child as
	a GVariant, wrap the GVariant in a Variant<> and then get its value
	instead of assuming that the array in the variant is a fixed array of
	basic types so that complex types are supported in arrays.
	(Variant< std::vector<T> >::get): Rewritten as get_child() above so
	that the elements in the array are gotten as a GVariant, wrapped in a
	Variant<> and then retrieved and placed in the resulting vector,
	again, to ensure that a vector of complex types can be stored in a
	variant.
	* tests/glibmm_variant/main.cc: Modify the test to ensure that any
	type other than basic ones are supported.

2012-12-28  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Gio::Action: Add more documentation of get_state_hint() and get_state().

	* gio/src/action.hg: get_state_hint() and get_state() returns void, which
	makes them useless. That can't be fixed until the next ABI break. Explain in
	the documentation what to do instead of calling these methods. Bug #690134.

2012-12-27  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	SignalProxy: Fix the documentation, especially of connect_notify().

	* glib/src/signalproxy.h.m4: Many small fixes of the documentation, and a
	more thorough rewrite of the doc of SignalProxy[0-6]::connect_notify().
	Bug #126213, comment 5.

2012-12-18  Andrew Potter  <agpotter@gmail.com>

	VariantBase: Add operator for BoolExpr (const void*).

	* glib/src/variant.{ccg,hg}: Adds operator BoolExpr.
	Also deletes relational operators to prevent unexpected conversion.
	Bug #690121.

2012-12-13  Andrew Potter  <agpotter@gmail.com>

	SimpleAction: Fix stateful action constructor typo, allowing use.

	* gio/src/simpleaction.hg: Fix 'sate' typo to 'state', allowing
	the constructor to be used. Bug #690122.

2012-12-12  Andrew Potter  <agpotter@gmail.com>

	Threads: Add create(slot, name).

	* glib/src/threads.{ccg,hg}: Add a method to create named threads.

	Bug #689863.

2012-11-20  Andrew Potter  <agpotter@gmail.com>

	VariantType: Add create_tuple().

	* glib/src/varianttype.{ccg,hg}: Add the method following the style of
	VariantContainerBase::create_tuple(), completing a TODO.

	Bug #688682.

2012-11-20  José Alburquerque  <jaalburqu@svn.gnome.org>

	VariantType: Correct the referencing in the create*() methods.

	* tools/m4/convert_glib.m4: Correct the 'GVarianType*' to VariantType
	conversion to not take an extra reference when wrapping the
	GVariantType in the VariantType.
	* glib/src/variant.hg:
	* glib/src/varianttype.hg: Also move the 'const GVariantType'
	conversion from the global glib convert file (above) to these local
	files because it takes an extra reference of the GVariantType.

	Bug #688440 (Andrew Potter).

2012-11-19  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Documentation: Adjust if the method has a slot param.

	* tools/pm/WrapParser.pm (on_wrap_method): Pass the objCppfunc object
	to the DocParser::lookup_documentation() subroutine so that it can
	decide if the final parameter of the C function should be excluded
	from the docs.  The final parameter (which would be a gpointer
	user_data parameter) would be omitted if the C++ method has a slot
	parameter.
	* tools/pm/DocsParser.pm (lookup_documentation): Pass the objCppfunc
	on to the append_parameter_docs() subroutine which does what's
	described above.
	(append_parameter_documentation): Decide whether to skip the final C
	parameter as described above.  Also rename 'callback' parameters to
	'slot' and use '@a slot' instead of '@a callback' in the main
	description.
	(substitute_identifiers): Replace C *Callback types to C++ Slot*
	types.

	Bug #688587.

2012-11-19  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_METHOD: Support wrapping methods with slots.

	* tools/pm/WrapParser.pm (on_wrap_method): Add code to parse the
	additional 'slot_name', 'slot_callback' and 'no_slot_copy' options.
	- The 'slot_name' options specifies the name of the slot parameter in
	the C++ method declaration.
	- The 'slot_callback' option specifies the name of the callback to
	pass to the C function.
	- The 'no_slot_copy' option specifies that the actual slot should be
	passed to the C function in the data parameter and not a copy.  By
	default, a copy is used.
	* tools/pm/Output.pm (output_wrap_meth): Pass the new slot options
	along to the *METHOD() m4 macros.
	(convert_args_cpp_to_c):
	- If there is a slot parameter, ignore the final user_data parameter
	in the C function when comparing the argument count in the C++
	method and the C function.
	- Convert a possible slot parameter to the address of the specified
	slot callback (with the 'slot_callback' option).  Report an error if
	no callback has been specified.
	- Pass a 'slot_copy' variable as the final user data parameter to the
	C function.  The variable is declared by the _*METHOD() m4 macros.
	* tools/m4/method.m4 (_METHOD):
	(_STATIC_METHOD):
	- Accept the new 'slot_type', 'slot_name' and 'no_slot_copy' options
	which specify the C++ slot type (without the const and the &), the
	C++ slot parameter name and whether to create a copy of the slot or
	not respectively.
	- Insert code to declare a 'slot_copy' variable that is either a copy
	of the slot or a pointer to the actual C++ slot based on the
	'no_slot_copy' option.

	Bug #688587.

2012-11-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm.h: Include the tlspassword.h header file.

	* gio/giomm.h:

2012-11-14  Debarshi Ray  <debarshir@src.gnome.org>

	ustring docs: The global locale should be set when using C++ streams.

	* glib/glibmm/ustring.h: Replace output.imbue(std::locale("")) by
	std::locale::global(std::locale("")) in the description of how to use
	std::ostringstream. Bug #661588.

2012-11-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the TlsPassword class.

	* gio/src/tlspassword.{ccg,hg}:
	* gio/src/filelist.am: Add the new sources containing the constructor,
	methods, properties and virtual functions and include the sources in
	the build.
	* gio/src/gio_vfuncs.defs: Add the GTlsPassword virtual functions so
	that they are recognized by gmmproc.
	* tools/m4/convert_gio.m4: Add an enum conversion.

2012-11-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the GTls* GTypes to the extra defs generation utility.

	* tools/extra_defs_gen/generate_defs_gio.cc: Add the GTypes.
	* gio/src/gio_signals.defs: And regenerate the signal and property
	defs file.

2012-11-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm.h: Re-add an accidentally removed include.

	* gio/giomm.h: Re-add 'simpleaction.h' which was accidentally removed.
	Also re-sort the includes by the base filename (without the .h) as
	they were before.

2012-11-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm.h: Include missing headers.

	* gio/giomm.h: Include all the headers generated from the .hg files.

2012-11-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the TlsCertificate class.

	* gio/src/filelist.am:
	* gio/src/tlscertificate.{ccg,hg}: Add the sources wrapping the
	constructors, methods and (most) properties and include the sources in
	the build.
	* gio/src/enums.hg: Add the TlsCertificateFlags enum (wrapping the C
	enum).
	* tools/extra_defs_gen/generate_defs_gio.cc: Add the GTlsCertificate
	GType to the list of types for which signal and property defs are to
	be generated.
	* gio/src/gio_signals.defs: Regenerate the signal and property defs
	file.
	* tools/m4/convert_gio.m4: Add necessary conversions.

	* gio/src/gio_extra_objects.defs: Add TlsClientConnection to avoid a
	gmmproc docs warning.

2012-11-09  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_CTOR: Handle *_new() functions with a final GError**.

	* tools/pm/WrapParser.pm (on_wrap_ctor): Add code to parse an
	additional "errthrow" optional option in a _WRAP_CTOR() macro.
	* tools/pm/Output.pm (output_wrap_ctor): Pass the "errorthrow" option
	along as a string to:
	(get_ctor_properties): Ignore the final GError** parameter of the C
	*_new() function because it does not form part of the property list
	that the constructor to has to set.

	Bug #687959.

2012-11-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	DesktopAppInfo: Add some new getter methods.

	* gio/src/desktopappinfo.hg: Add the get_keywords(),
	get_startup_wm_class(), get_generic_name(), get_show_in(),
	get_nodisplay() and get_categories() getter methods wrapping the
	corresponding C functions.

2012-11-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant: Don't refsink variants created using the custom cast ctor.

	* glib/src/variant.ccg:
	* glib/src/variant.hg:
	* glib/src/variant_basictypes.cc.m4: Remove the call to
	g_variant_ref_sink() in the create() methods of the variant types that
	use the custom cast constructor to wrap the newly created C object
	because the custom cast constructor already refsinks the object if
	necessary.

2012-11-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	Correct a typo in the ChangeLog.

2012-11-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	tools/pm: Remove whitespace on empty lines in recently edited perl files.

2012-11-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	MemoryOutputStream: Add the steal_as_bytes() method.

	* gio/src/memoryoutputstream.{ccg,hg}: Add the method that wraps the
	corresponding C function.

2012-11-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	AppInfo: Add create_duplicate().

	* gio/src/appinfo.{hg,ccg}: Add the new method (which creates a
	duplicate of the AppInfo).  Also, use gmmproc's optional parameter
	functionality to wrap the launch_default_for_uri() method without the
	optional AppLaunchContext parameter.

2012-11-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant< std::vector<std::string> >: Add create_from_object_paths().

	* glib/src/variant.hg: Add the new method that creates a variant of
	vector of strings out of object paths.  This is so the type of the
	variant is rightly set to G_VARIANT_TYPE_OBJECT_PATH_ARRAY and not
	G_VARIANT_TYPE_BYTESTRING in case some application needs to make a
	distinction.
	Also _IGNORE the g_variant_get_objv() and g_variant_dup_objv()
	functions because it's possible to get object paths from a variant of
	vector of strings if it contains them with the existing getter
	methods because object paths are merely strings.
	* glib/src/variantiter.hg: Add an _IGNORE.
	* glib/src/checksum.ccg:
	* glib/src/convert.ccg: Whitespace.

2012-11-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	Regenerate the XML docs files for glibmm and giomm.

	* gio/src/gio_docs.xml:
	* glib/src/glib_docs.xml: These files now include enum XML
	documentation.
	* glib/src/glib_extra_objects.defs: Add IOChannel to avoid a gmmproc
	documentation warning.

2012-11-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Make enum documentation possible.

	* tools/defs_gen/docextract.py (enum_name_pattern): Add a new regular
	expression that recognizes gtk-doc enum comment blocks (though
	imperfectly because it also catches things such as structure comment
	blocks).
	(identifier_patterns): Append the new enum_name_pattern to the list of
	patterns used to test each gtk-doc block's identifier to see what type
	of block it is.
	(parse_file): Do not add a particular gtk-doc block if it has been
	marked as a block initially thought to be an enum comment block but
	later found not to be so.
	(skip_to_identifier): Mark the current comment block as an enum type
	if the enum_name_pattern matches the identifier.
	(process_params): Mark the current block as invalid if the block was
	recognized as an enum type but no parameters are found or if any of
	the parameter names are not all caps.
	(parse_dir): Include .h files for processing because gtk-doc enum
	comment blocks are included in those files.
	* tools/defs_gen/docextract_to_xml.py: Add an option to not print out
	enum docs.  Assume that enum docs should be printed out by default.
	* tools/pm/DocsParser.pm (parse_on_start):
	(parse_on_end): Add logic to correctly parse an <enum> tag (which is
	just like the already existing <function> and <signal> tags.  The only
	difference is in the name of the tags.  The function name syntax is
	the same as a C function name, the signal name has the form
	'CStructName::signal-name' while the enum name has the form
	'CEnumName')
	(lookup_enum_description): Add this subroutine that gets the
	the description of the specified enum.
	(lookup_enum_value_documentation): Add this subroutine that gets the
	description of an enum value as a Doxygen block.
	(lookup_documentation): Use the new remove_example_code subroutine
	described below.
	(remove_example_code): Add this subroutine that removes example code
	from the specified text so that it can be used in other places.
	* tools/pm/Enum.pm (c_prefix): Add a new field to the class storing
	the enum's C prefix.  This field is used when looking up an enum's
	value documentation.
	(parse_values): Modified to store the C prefix of the enum.
	(build_element_list): Modified to lookup the documentation of the
	values of the enum and insert the Doxygen block just before each
	value.  This allows Doxygen to document each value of the enum.
	* tools/pm/Output.pm (output_wrap_enum): Modified to lookup
	the description of the enum previously parsed by the DocParser and
	merge it with an already passed in comment for the enum which is then
	passed as before to the _ENUM macro.
	* tools/m4/enum.m4: Whitespace correction.

	Bug #544694.

2012-11-05  Murray Cumming  <murrayc@murrayc.com>

	Improve NEWS for the stable release.

2012-11-05  Murray Cumming  <murrayc@murrayc.com>

	MountOperation: Correct an ABI break.

	* gio/src/mountoperation.hg: Use the no_default_handler option with
	the new _WRAP_SIGNAL() to avoid a new on_*() vfunc increasing the size
	of the class. This got into the 2.34.0 release at the last moment
	but it seems better to correct it before people use it than to leave it.

2012-11-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	UnixConnection: Remove the const receive_credentials_finish() method.

	* gio/src/unixconnection.hg: It doesn't make sense and there are no
	other const *_finish() methods in giomm.  Further, it's not needed for
	getting a const Credentials.  That's already possible with the
	existing receive_credentials_finish() method.

2012-11-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	UnixConnection: Add [receive|send]_credentials_[async|finish]().

	* gio/src/unixconnection.{ccg,hg}: Add the new methods (adding
	non-cancellable versions for the async methods) wrapping the
	corresponding C functions.
	* gio/src/socketconnection.hg: Typo.

2012-11-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	ThemedIcon: Wrap the "names" property.

	* gio/src/themedicon.hg:

2012-11-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	SocketConnection: Add connect*() and is_connected() methods.

	* gio/src/socketconnection.{ccg,hg}: Add connect(), connect_async(),
	connect_finish() and is_connected() methods (wrapping the
	corresponding C functions).
	* gio/src/resolver.hg: Add an _IGNORE.

2012-11-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	docextract_to_xml.py: Replace &colon; with ':' in generated XML files.

	* tools/defs_gen/docextract_to_xml.py: Otherwise gmmproc reports
	errors if this entity is encountered when trying to parse the XML
	documentation.

2012-11-01  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Improve the documentation of properties.

	* tools/m4/property.m4: Change "the property of the value" to "the value of
	the property". Make the description of the return value different for
	PropertyProxy, PropertyProxy_ReadOnly and PropertyProxy_WriteOnly.

2012-10-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	Resolver: Add lookup_records() and lookup_records_finish().

	* glib/glibmm/containerhandle_shared.h: Add TypeTraits specializations
	for VariantBase (for the futre) and VariantContainerBase.
	* gio/src/resolver.hg:  Add the new methods (mentioned above) because
	the VariantContainerBase TypeTraits specialization allows the vector
	utilities to convert to/from GVariants in a GList correctly.

2012-10-29  José Alburquerque  <jaalburqu@svn.gnome.org>

	Resolver: Add the lookup_records_async() methods.

	* gio/src/resolver.{ccg,hg}: Add the methods (cancellable and
	non-cancellable versions) adding TODO's about wrapping the remaining
	related methods (lookup_records() and lookup_records_finish()).
	* tools/m4/convert_gio.m4: Add a necessary enum conversion.
	* glib/src/variant.hg: Typo discovered while adding above methods.

2012-10-29  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add some TODO's.

	* gio/src/menuitem.hg:
	* gio/src/menumodel.hg: Add TODO's about possibly adding methods to
	the classes in these files (these TODO's were added a few days ago and
	being commited now).  Also add a TODO about an unwrapped signal in
	MenuModel.
	* glib/src/glib_extra_objects.defs: Add GArray to the list of objects
	to avoid a gmmproc documentation warning.

2012-10-29  Mark Vender  <markv743@yahoo.co.uk>

	Strip trailing whitespace.

	* gio/giomm/*.[h|cc]:
	* gio/src/*.[hg|ccg]:
	* glib/glibmm/*.[h|cc]:
	* glib/src/*.[hg|ccg]: Strip trailing whitespace. Bug #681072.

2012-10-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	ContentType: Fix typo in the content_type_get_symbolic_icon() name.

	* gio/giomm/contenttype.cc: The name was misspelled because the 'o'
	and 'l' in 'symbolic' were interchanged.  The name is correctly
	spelled in the .h file so I guess it's safe to rename it in the .cc
	file for 2.34 and the master branch.

2012-10-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus::[Connection|Proxy]: Use ifdefs for the UnixFDList call*() methods.

	* gio/src/dbusconnection.hg:
	* gio/src/dbusproxy.hg: Place the call*() methods taking a UnixFDList
	parameter within '#ifdef G_OS_UNIX' ifdefs because the UnixFDList
	class exists only on the Unix platform.

2012-10-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	Remove the use of g_type_init() because it has been deprecated.

	* glib/glibmm/wrap.cc:
	* tools/extra_defs_gen/generate_defs_gio.cc:
	* tools/extra_defs_gen/generate_defs_glib.cc: The docs for the
	function says that the GType system is initialized automatically now
	as of 2.36.
	* tools/extra_defs_gen/generate_extra_defs.cc: Whitespace correction.

2012-10-21  Murray Cumming  <murrayc@murrayc.com>

	2.34.0

2012-10-21  Murray Cumming  <murrayc@murrayc.com>

	Add some documentation.

	* gio/src/dbusintrospection.hg:
	* gio/src/dbusserver.ccg:
	* gio/src/inputstream.hg:
	* gio/src/menu.hg:
	* gio/src/menuitem.hg:
	* gio/src/outputstream.hg:
	* glib/src/threads.hg: Deal with some TODOS, mostly
	adding documentation based on the C documentation.

2012-10-21  Murray Cumming  <murrayc@murrayc.com>

	Create only .tar.xz tarballs.

	* configure.ac: This is what ftp.gnome.org wants, so this avoids
	it doing any repackaging.

2012-10-14  Murray Cumming  <murrayc@murrayc.com>

	2.33.14

2012-10-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Add 3-argument @newin.

	* tools/pm/DocsParser.pm: Convert "Since: 1.2.3" to "@newin{1,2,3}".
	Some C projects (goocanvas, grilo, gstreamer) use "Since: 1.2.3", instead of
	"Since: 1.2". The corresponding C++ projects need an ALIAS for this @newin
	in Doxyfile.in, like in mm-common/skeletonmm/doc/reference/Doxyfile.in.

2012-10-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	FileInfo: set_attribute_strings(): Const correction.

	* gio/src/fileinfo.hg: Pass the attr_value vector as a const
	std::vector<>& and not just a std::vecto<>&.  I must not have been
	paying attention to what I was doing when wrapping this.

2012-10-07  Murray Cumming  <murrayc@murrayc.com>

	Require the latest mm-common.

	* configure.ac: This should avoid us creating tarballs without
	the mm-common improvements.

2012-10-06  Murray Cumming  <murrayc@murrayc.com>

	MenuItem: get_attribute(): Remove const overload / make it const.

	* gio/src/menuitem.hg: It does not make sense to have a return
	by value that is const.
	* gio/src/menuattributeiter.hg:
	* gio/src/menumodel.hg: Add TODOs for a future ABI break, so we can
	fix the same problem here.

2012-10-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	MenuItem: Rename the get_attribute_value() methods to get_attribute().

	* gio/src/menuitem.hg: Rename the just added methods to just
	get_attribute() instead of get_attribute_value() to make the method
	name shorter.  Also deprecate the set_attribute_value() method and add
	a set_attribute() method to go with the newly renamed get_attribute()
	methods.

2012-10-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	MountOperation: Wrap the "show-unmount-progesss" signal.

	* gio/src/mountoperation.hg:

2012-10-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	MenuItem: Add the get_attribute_value() methods.

	* gio/src/menuitem.hg: Add the methods (const and non-const versions)
	and overloads without the VariantType parameter which can be null,
	wrapping the g_menu_item_get_attribute_value() function.
	(MenuItem): Add an overload for the "label" and "submenu" constructor
	without the label parameter which can be null.
	(create): Do the same for the create() method of the constructor
	above.
	* gio/src/menumodel.hg: Add an _IGNORE (completing a TODO).

2012-10-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	IOStream: Add the splice_async() and splice_finish() methods.

	* gio/src/iostream.{ccg,hg}: Add cancellable and non-cancellable
	versions of the splice_async() method wrapping the corresponding C
	function.  Add the splice_finish() method wrapping the corresponding C
	function.  Also add the class docs.

2012-10-02  José Alburquerque  <jaalburqu@svn.gnome.org>

	FileInfo, FileAttributeMatcher: Wrap some unwrapped functions.

	* gio/src/fileinfo.hg (FileAttributeMatcher): Add the
	create_difference() and to_string() methods wrapping the
	g_file_attribute_matcher_subtract() and the
	g_file_attribute_matcher_to_string() functions.
	(FileInfo): Add the has_namespace(), [get|set]_attribute_status(),
	and [get|set]_attribute_strings() methods wrapping the
	g_file_info_has_namespace(), g_file_info_[get|set]_attribute_status(),
	and g_file_info_[get|set]_attribute_stringv() functions.
	* tools/m4/convert_gio.m4: Add an enum and FileAttributeMatcher
	conversions.

2012-10-02  José Alburquerque  <jaalburqu@svn.gnome.org>

	VariantIter: Correct an _IGNORE.

	* glib/src/variantiter.hg:

2012-10-01  José Alburquerque  <jaalburqu@svn.gnome.org>

	VariantIter: Add init() method.

	* glib/src/variantiter.hg: Wrap the g_variant_iter_init() function.
	* tools/m4/convert_glib.m4: Add a necessary conversion.
	* glib/src/varianttype.hg: Add an _IGNORE.

2012-10-01  Murray Cumming  <murrayc@murrayc.com>

	DBus::Proxy: Add call(), call_sync() and call_finish() for unix_fd_list.

	* gio/src/dbusproxy.[hg|ccg]: Add method overloads for the call methods
	that take a GUnixFDList. This is based on the similar methods in
	dbusconnection.[hg|ccg].

2012-10-01  Murray Cumming  <murrayc@murrayc.com>

	DBusConnection: Fix a typo in implementation.

	* gio/src/dbusconnection.ccg:
	g_dbus_connection_call_with_unix_fd_list() was mistyped. I wonder why
	the compiler did not complain.

2012-09-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	ActionGroup: Add the query_action() methods.

	* tools/m4/base.m4:
	* tools/m4/convert_base.m4:
	* tools/m4/filelist.am:
	* tools/m4/initialize.m4:
	* tools/m4/initialize_base.m4:
	* tools/m4/initialize_gio.m4:
	* tools/m4/initialize_glib.m4:
	* tools/m4/initialize_glibmm.m4: Move the _INITIALIZE macros into
	their own files as is done for the _CONVERT macros so that some basic
	types that are common (like initializing a bool& from a gboolean) can
	be defined once and used in other circumstances.

	* gio/src/dbusconnection.hg: Move an _INITIALIZATION macro to the
	general files above (the gio initialize file).

	* gio/src/actiongroup.hg: Add the query_action() methods (the needed
	_INITIALIZATION macros are in the glib initialize file).

	* tools/pm/Output.pm (convert_args_cpp_to_c): Correct the indentation
	of the declarations of the C output variables and the setting of the
	C++ output parameters from the C variables for methods that use the
	output parameter feature of gmmproc.

2012-09-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	RegEx: Add the get_has_cr_or_lf() method.

	* glib/src/regex.hg:

2012-09-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Make the output param feature work for single indirection.

	* tools/pm/Output.pm (convert_args_cpp_to_c): When inserting C object
	initializations for C objects that will be used to set output
	parameters, initialize the C object to a "default constructed" object
	of the same type if there is single indirection and not zero to ensure
	successful compilation in that case.
	* tools/m4/method.m4: Whitespace correction of the body of generated
	non-static methods.  This ensures each statement is on its own line
	and that there are no blank lines to make methods as compact as
	possible.

	Bug #662371.

2012-09-25  Murray Cumming  <murrayc@murrayc.com>

	2.33.13

2012-09-25  Murray Cumming  <murrayc@murrayc.com>

	gio_docs.xml: Replace &colon; with :.

	* gio/src/gio_docs.xml: This fixes the build.

2012-09-24  Murray Cumming  <murrayc@murrayc.com>

	Update the *_methods defs files.

	* gio/src/gio_methods.defs:
	* glib/src/glib_functions.defs:
	* glib/src/gobject_functions.defs: Updated with tools/gen_scripts/

2012-09-24  Murray Cumming  <murrayc@murrayc.com>

	Update the docs XML files.

	* gio/src/gio_docs.xml:
	* glib/src/glib_docs.xml: Updated with tools/gen_scripts/

2012-09-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	Converter[Input|Output]Stream: Correct whitespace typos.

	* gio/src/converterinputstream.hg:
	* gio/src/converteroutputstream.hg:

2012-09-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the Converter[Input|Output]Stream classes.

	* gio/src/converterinputstream.{ccg,hg}:
	* gio/src/converteroutputstream.{ccg,hg}:
	* gio/src/filelist.am: Add the new sources adding the constructors,
	create methods, the methods and properties of the new classes.  Add
	the sources to the build.
	* gio/src/gio_signals.defs:
	* tools/extra_defs_gen/generate_defs_gio.cc: Add the two new GTypes to
	the extra defs generation utility and regenerate the signal and
	property defs file to get the properties of the new classes.
	* tools/m4/convert_gio.m4: Add the necessary Converter conversions.

2012-09-20  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the PollableOutputStream interface.

	* gio/src/pollableoutputstream.{ccg,hg}:
	* gio/src/filelist.am: Add the sources adding the new interface
	methods and virtual functions and include the sources in the build.
	* gio/src/gio_extra_objects.defs: Add the new object in this file to
	avoid a gmmproc documentation warning.
	* gio/src/gio_vfuncs.defs: Add the new interface virtual functions.

2012-09-20  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the PollableInputStream interface.

	* gio/src/pollableinputstream.{ccg,hg}:
	* gio/src/filelist.am: Add the sources adding the new interface
	methods and virtual functions and include the sources in the build.
	* gio/src/gio_extra_objects.defs: Mention the new object in this file
	to avoid the gmmproc documentation warnings.
	* gio/src/gio_vfuncs.defs: Add the new interface virtual functions but
	alphabetize the existing entries by class name.

2012-09-19  José Alburquerque  <jaalburqu@svn.gnome.org>

	_WRAP_VFUNC: Prepend @throws clause to vfuncs that throw errors.

	* tools/pm/Output.pm (output_wrap_vfunc_h): Prepend a Doxygen @throws
	clause to the declaration of virtual functions that throw Glib::Error.

2012-09-18  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::Connection: Add the call_[finish|sync]() with UnixFDLists.

	* gio/src/dbusconnection.{hg,ccg}: Add the methods using gmmproc's
	output parameter functionality.  Also add the cancellable and
	non-cancellable asynchronous call() methods that were #ifdef'ed out
	because of the missing call_finish() method.
	* tools/m4/convert_gio.m4: Add a necessary enum conversion.

	Bug #662371.

2012-09-18  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_METHOD: Allow setting parameters from C output params.

	* tools/m4/convert_base.m4 (_INITIALIZATION): Insert newlines between
	a possible series of statements that has been specified as an
	initialization.  For example, the declaration, assignment and the
	g_free() call would each be on a seperate line in the following (from
	datainputstream.hg):

	_INITIALIZATION(`std::string&',`return-char*',`char* tmp = $4; $3 = tmp; g_free(tmp)')

	* tools/pm/Function.pm (FLAG_PARAM_OPTIONAL):
	(FLAG_PARAM_OUTPUT): Added new constant flags representing if a
	parameter is optional or if it is an output parameter.
	(EXPORT_OK): Exported the above flags so they can be used in other
	modules.
	(param_optional): Renamed to param_flags.  Redesigned it to store a
	possible combination of both flags above and not just if a parameter
	is optional.
	(parse_param): Modified the subroutine to look for an '>>' in a
	possible '{.*}' following the current parameter name which would
	signal that the parameter is an output parameter.  The syntax for
	signaling if a parameter is optional, is an output parameter or should
	be mapped to a specific C parameter would be:

	cpp_param_name{c_param_name>>?}

	c_param_name means that the C++ parameter should be mapped to the C
	parameter no matter the parameter order of either.  The '>>' means
	that the parameter should be set from the C parameter because the C
	parameter is an output parameter.   Finally, the '?' means that the
	parameter is optional thus overloads should be generated without that
	paramter.  All three components within the {} are optional.  A '.' may
	be used instead of the c parameter name if the C++ parameter name is
	the same as the C parameter name.

	(possible_args_list): Modified to use the param_flags variable.

	* tools/pm/Output.pm (output_wrap_vfunc_h): Modified to receive the
	new return type from convert_args_cpp_to_c() (see below).
	(output_wrap_meth): Modified to receive the new return from
	convert_args_cpp_to_c (see below) and pass them to the _METHOD() and
	_STATIC_METHOD() macros.
	(convert_args_cpp_to_c): Modified to generate a
	list of C declarations for any possible C output parameters and to
	generate a list of _INITIALIZE() macros to initialize the C++
	parameters from the C output parameters.  The function returns an array
	of three strings (the convert macros, the possible C declarations and
	the _INITIALIZE() macros in that order).

	* tools/pm/WrapParser.pm (string_split_commas): Modified the
	subroutine to ignore '>>' if they are in '{}' (so that the '>>' can
	signal that a parameter should be set from a C output parameter.

	* tools/m4/method.m4 (_METHOD, _STATIC_METHOD): Rewrote to accept
	C declarations of possible C output parameters and _INITIALIZE macros
	which would initialize the appropriate C++ parameters from the output
	variables and insert them appropriately in the generated code.

	Bug #662371.

2012-09-18  José Alburquerque  <jaalburqu@svn.gnome.org>

	Revert 'Gio::DBus::Connection: Add'

2012-09-18  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Improve the use of _IGNORE. Don't use gio_others.defs.

	* gio/src/applicationcommandline.hg: Change a _CONVERSION (due to the
	exclusion of gio_others.defs).
	* gio/src/dbusintrospection.hg:
	* gio/src/fileinfo.hg: Add _IGNORE.
	* gio/src/fileiostream.hg:
	* gio/src/fileoutputstream.hg: Correct an _IGNORE.
	* gio/src/gio.defs: Don't include gio_others.defs. One of its entries is
	wrong and all of them also exist (in correct form) in gio_methods.defs or
	gio_signals.defs.
	* glib/src/convert.hg:
	* glib/src/regex.hg: Add _IGNORE.
	* glib/src/date.hg:
	* glib/src/fileutils.hg:
	* glib/src/markup.hg:
	* glib/src/optionentry.hg:
	* glib/src/shell.hg:
	* glib/src/spawn.hg:
	* glib/src/thread.hg:
	* glib/src/threads.hg:
	* glib/src/unicode.hg:
	* glib/src/uriutils.hg: Remove _IGNORE(g_iconv).
	* glib/src/variantiter.hg: Add an _IGNORE. Remove _IGNORE(g_variant_iter_new).

2012-09-18  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Improve the search for unwrapped methods.

	* tools/pm/GtkDefs.pm: lookup_method_set_weak_mark(): New function.
	get_unwrapped(): Correct the search when methods from more than one class
	have been wrapped.
	GtkDefs::Function::new(): Take into account that a method (g_iconv) may be
	nameless. After this change the patch of g_iconv in glib_functions.defs.patch
	is probably unnecessary but harmless.
	* tools/pm/WrapParser.pm: on_wrap_method_docs_only(), on_wrap_ctor():
	Call GtkDefs::lookup_method_set_weak_mark().
	on_wrap_method(): Call GtkDefs::lookup_method_set_weak_mark() if the method
	is static.

2012-09-17  José Alburquerque  <jaalburqu@svn.gnome.org>

	_CLASS_GOBJECT: Allow classes to have custom wrap() functions.

	* tools/m4/class_gobject.m4 (_CUSTOM_WRAP_FUNCTION): Add this new
	macro which can be used in _CLASS_GOBJECT classes so that if they want
	they can write their own implementation of their Glib::wrap()
	function.  This is useful for modules such as gstreamermm that want to
	keep certain classes (like the plug-ins) from being registered on
	startup but then do a one time registration of the wrap_new() function
	in the Glib::wrap() function before calling Glib::wrap_auto() which
	can then find the wrap_new() function if necessary.

	Bug #684006.

2012-09-17  José Alburquerque  <jaalburqu@svn.gnome.org>

	generate_wrap_init.pl: Allow classes in files to not be registered.

	* tools/m4/class_shared.m4: Add a new _NO_WRAP_INIT_REGISTRATION macro
	used in the generate_wrap_init.pl script to recognize a file whose
	classes should not be registered by wrap_init().
	* tools/generate_wrap_init.pl.in (exclude_from_wrap_init): Include a
	hash map to determine if the classes in a file should not be
	registered with the wrapping system by the wrap_init() function.
	(main): Modified to see if the new _NO_WRAP_INIT_REGISTRATION macro is
	used in a file and store a true/false value in the hash map for the
	specified file.  Also, modified to not include the includes, the
	*_get_type() function declarations, the wrap_new() function
	declarations and the *::get_type() invocations of the classes in the
	file marked for no registration.

	Bug #684006.

2012-09-16  Murray Cumming  <murrayc@murrayc.com>

	File: Add remove_async() and remove_finish().

	* gio/src/file.[hg|ccg]: As for the sync version, we
	rename delete to remove, because the sync vesion would be
	delete(), which uses a C++ keyword.

2012-09-16  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus::Connection: Add

	* gio/src/dbusconnection.[hg|ccg]: Add call(), call_with_unix_fd_finish(),
	and call_finishcall_sync() method overloads that wrap
	g_dbus_connection_call_with_unix_fd_list(),
	g_dbus_connection_call_with_unix_fd_list_finish() and
	g_dbus_connection_call_with_unix_fd_list_sync()
	* tools/m4/convert_gio.m4: Add a necessary conversion.

2012-09-15  Murray Cumming  <murrayc@murrayc.com>

	Simplified lots of code by using the {?} _WRAP_METHOD() syntax.

	* gio/src/application.[hg|ccg]:
	* gio/src/bufferedinputstream.[hg|ccg]:
	* gio/src/datainputstream.[hg|ccg]:
	* gio/src/dataoutputstream.[hg|ccg]:
	* gio/src/dbusconnection.[hg|ccg]:
	* gio/src/fileenumerator.[hg|ccg]:
	* gio/src/initable.[hg|ccg]:
	* gio/src/inputstream.[hg|ccg]:
	* gio/src/iostream.[hg|ccg]:
	* gio/src/outputstream.[hg|ccg]:
	* gio/src/resolver.[hg|ccg]:
	* gio/src/seekable.[hg|ccg]:
	* gio/src/socket.[hg|ccg]:
	* gio/src/socketaddressenumerator.[hg|ccg]:
	* gio/src/socketclient.[hg|ccg]: This relatively new gmmproc syntax lets
	us avoid the manual implementations and declarations just to have
	overloads without the Cancellable parameters.
	* gio/src/unixconnection.hg: This had no method overloads without
	Cancellable parameters but now it does.

2012-09-15  Murray Cumming  <murrayc@murrayc.com>

	Gio::File: Correct the commit again

	* gio/src/file.[hg|ccg]: make_directory() was missing a {?}.

2012-09-15  Murray Cumming  <murrayc@murrayc.com>

	Gio::File: Correct the previous commit.

	* gio/src/file.[hg|ccg]: Do not use {?} with query_file_type()
	because it cannot cope with also having a default parameter value
	on an earlier parameter.

2012-09-15  Murray Cumming  <murrayc@murrayc.com>

	Gio::File: Simplify the code by using {?} in _WRAP_METHOD()

	* gio/src/file.[hg|ccg]: This relatively new gmmproc syntax lets
	us avoid the manual implementations and declarations just to have
	overloads without the Cancellable parameters.

2012-09-15  Murray Cumming  <murrayc@murrayc.com>

	AppLaunchContext: Add setenv(), unsetenv() and get_environment().

	* gio/src/applaunchcontext.hg: Wrap these C functions.

2012-09-15  Mark Vender  <markv743@yahoo.co.uk>

	Remove useless Subversion tags.

	*.[hg|ccg]: Remove uselless Subversion tags.

2012-09-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Use std::time_t instead of ::time_t.

	* build/c_std.m4:
	* glib/src/date.[hg|ccg]: Use std::time_t instead of ::time_t. Only
	std::time_t is required to be declared in <ctime>, which is recommended
	instead of <time.h> in C++ programs.

2012-09-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Use std::size_t and std::ptrdiff_t.

	* glib/glibmm/arrayhandle.h:
	* glib/glibmm/containers.h:
	* glib/glibmm/listhandle.h:
	* glib/glibmm/slisthandle.h:
	* glib/glibmm/vectorutils.h: Use std::size_t and std::ptrdiff_t instead
	of ::size_t and ::ptrdiff_t. Only the std versions are required to be
	declared in <cstddef>.
	* examples/network/resolver.cc:
	* glib/glibmm/containerhandle_shared.h:
	* glib/glibmm/helperlist.h:
	* glib/glibmm/main.h:
	* glib/glibmm/vectorutils.cc: Use std::size_t instead of ::size_t.
	* glib/src/convert.hg: Use std::size_t instead of ::size_t in a comment.
	* glib/glibmm/property.cc:
	* glib/glibmm/ustring.h: Use std::ptrdiff_t instead of ::ptrdiff_t.

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	2.33.12

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	Socket: Remove create_source() again.

	* gio/src/socket.hg:
	* tools/m4/convert_glib.m4: Comment out
	create_source() because Glib::Source (in main.h)
	does not have a Glib::wrap(). Maybe it should.

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	Socket. Add several methods.

	* gio/src/socket.hg: Added create_source(),
	get_available_bytes(), get_ttl(), set_ttl(),
	get_broadcast(), set_broadcast(),
	get_multicast_loopback(), set_multicast_loopback(),
	get_multicast_ttl(), set_multicast_ttl(),
	join_multicast_group(), leave_multicast_group(),
	and properties.
	* tools/m4/convert_glib.m4: Added a conversion for
	GIOSource.

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	Volume: Add get_sort_key().

	* gio/src/volume.hg: Wrap g_volume_get_sort_key().

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	ContentType: get_icon(): Fix a refcount error.

	* gio/giomm/contenttype.cc: get_icon(): Take a reference.

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	MenuItem: Add get_link().

	* gio/src/menuitem.hg: Wrap g_menu_item_get_link().

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	Gio: DBusAuthObserver: Add allow_mechanism().

	* gio/src/dbusauthobserver.hg: Add the allow_mechanism()
	method and signal.

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	Application: Add get_dbus_*() methods.

	* gio/src/application.hg: Add get_dbus_connection()
	and get_dbus_object_path().
	* tools/m4/convert_gio.m4: Added a necessary conversion.

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	Tell the documentation generator about GMenu.

	* gio/src/gio_extra_objects.defs: Add GMenu to avoid
	a warning from gmmproc.

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	Regenerated some glib .defs.

	* glib/src/glib_docs.xml:
	* glib/src/glib_enums.defs:
	* glib/src/glib_functions.defs:
	* glib/src/gobject_functions.defs:

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	Regenerate other gio .defs.

	* gio/src/gio_docs.xml:
	* gio/src/gio_signals.defs: Regenerated.

2012-09-07  Murray Cumming  <murrayc@murrayc.com>

	Add get_symbolic_icon() methods.

	* gio/src/gio_methods.defs: Regenerated.
	* gio/giomm/contenttype.[h|cc]: Add get_symbolic_icon().
	* gio/src/drive.hg: Add get_symbolic_icon().
	* gio/src/fileinfo.hg: Add get_symbolic_icon().
	* gio/src/mount.hg: Add get_symbolic_icon().
	* gio/src/volume.hg: Add get_symbolic_icon().

2012-09-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	Converter: Correct the "convert" virtual function.

	* gio/src/converter.hg (convert_vfunc): Have the virtual function
	throw the final GError parameter of the C function instead of
	including it in the C++ parameter list.  This is done by using the
	recently added _WRAP_VFUNC functionality.

2012-09-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_VFUNC: Handle virtual functions that throw GErrors.

	* tools/pm/WrapParser.pm (on_wrap_vfunc): Modified so that _WRAP_VFUNC
	recognizes an optional "errthrow" parameter as is done in
	_WRAP_METHOD.
	(output_wrap_vfunc): Modified to tag the located virtual function
	definition as one that will be wrapped by a C++ method that throws the
	final C GError parameter.
	* tools/pm/Output.pm (output_wrap_vfunc_cc): Modified to pass an
	optional "errthrow" string to _VFUNC_CC and _VFUNC_PCC so that they
	can include the proper code for the getting and throwing of the
	GError.  Also modified to pass the "errthrow" string to the
	convert_args_cpp_to_c() so that it process the C++ method as one
	throwing a Glib::Error.
	(convert_args_c_to_cpp): Modified to ignore the final GError if the
	C function has been marked as one that will be wrapped by a C++ method
	throwing the final C GError parameter.

	* tools/m4/vfunc.m4 (_VFUNC_PCC): Modified to recognize a final
	"errthrow" string parameter in which case code is inserted to declare
	a local parameter in which to store the C GError and then throw
	it as a Glib::Error if an error was received when the underlying C
	function is called in the virtual function callback.
	(_VFUNC_CC): Also modified to recognize a final "errthrow" string
	parameter inserting code to store and then throw a possibly obtained
	GError as a Glib::Error in the C++ virtual function when calling the
	underlying C virtual function.

2012-09-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the ZlibDecompressor and the CharsetConverter classes.

	* gio/src/charsetconverter.{ccg,hg}:
	* gio/src/zlibdecompressor.{ccg,hg}:
	* gio/src/filelist.am: Add the new sources wrapping the C functions
	and properties in the corresponding classes.  Include the sources in
	the build.
	* gio/src/gio_signals.defs:
	* tools/extra_defs_gen/generate_defs_gio.cc: Add the GTypes for the C
	types in the property and signal generation utility and regenerate the
	defs file so the properties of the new classes can be wrapped.

	* gio/src/zlibcompressor.hg: Make the constructor protected and not
	private (typo).

2012-09-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the ZlibCompressor class.

	* gio/src/zlibcompressor.{ccg,hg}:
	* gio/src/filelist.am: Add the ZlibCompressor class which derives from
	the Converter interface wrapping the C functions and properties and
	include the sources in the build.
	* tools/extra_defs_gen/generate_defs_gio.cc:
	* gio/src/gio_signals.defs: Add the GZlibCompressor GType to the
	properties and signals generation utility and regenerate the defs
	file.
	* tools/m4/convert_gio.m4: Add the new enum conversion.

2012-09-02  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the Converter interface.

	* gio/src/converter.{ccg,hg}: Add the source files wrapping the C
	functions as methods and wrapping the virtual functions.
	* gio/src/filelist.am: Include the sources in the build.
	* gio/src/gio_vfuncs.defs: Add the necessary virtual function
	definitions so the virtual functions can be wrapped.
	* tools/m4/convert_gio.m4: Add the new enum and flag conversions.

2012-09-01  Murray Cumming  <murrayc@murrayc.com>

	Avoid warnings from documenation generation.

	* gio/src/gio_docs.xml: Replace &colon; with :

2012-09-01  Murray Cumming  <murrayc@murrayc.com>

	Gio::AppInfo: Wrap some new methods.

	* gio/src/appinfo.hg: Add get_display_name(),
	set_as_last_used_for_type() and get_supported_types().

2012-09-01  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .defs.

	* gio/src/gio_docs.xml:
	* gio/src/gio_methods.defs:
	* gio/src/gio_signals.defs:
	* glib/src/glib_docs.xml:
	* glib/src/glib_enums.defs:
	* glib/src/glib_functions.defs:
	* glib/src/gobject_functions.defs: Regenerate using tools/gen_scripts/

2012-09-01  Murray Cumming  <murrayc@murrayc.com>

	Gio: ProxyAddress: Wrap some new methods.

	* gio/src/proxyaddress.hg: Add get_destination_protocol()
	and get_uri().

2012-09-01  Murray Cumming  <murrayc@murrayc.com>

	Gio: Menu, MenuModel: Wrap some new methods.

	* gio/src/menu.hg: Add append_section().
	* gio/src/menumodel.hg: Add is_mutable() and get_n_items().

2012-09-01  Mark Vender  <markv743@yahoo.co.uk>

	Use std::size_t instead of size_t

	The C++ standard says that size_t is in the std namespace. Using it as if it was
	in the global namespace is implementation-defined behavior.

	* glib/src/convert.ccg: Use std::size_t instead of size_t.
	* glib/src/convert.hg: Likewise.
	* glib/src/thread.hg: Likewise.
	* glib/src/threads.hg: Likewise.
	* tools/m4/class_opaque_refcounted.m4: Likewise.

2012-08-02  Murray Cumming  <murrayc@murrayc.com>

	2.33.3

2012-08-01  Murray Cumming  <murrayc@murrayc.com>

	gio_extra_objects: Mention GMenuItem.

	* gio/src/gio_extra_objects.defs:
	This helps the documentation generator.

2012-07-28  Krzesimir Nowak  <qdlacz@gmail.com>

	Add a test checking whether floating variants are always sunk.

	* tests/glibmm_variant/main.cc: New test.

2012-07-28  Krzesimir Nowak  <qdlacz@gmail.com>

	Implement custom cast constructor for VariantBase.

	* glib/src/variant.hg:
	* glib/src/variant.ccg: Use _CUSTOM_CTOR_CAST macro and implement
	cast constructor.  This is needed, because we always want to sink
	a GVariant.

2012-07-28  Krzesimir Nowak  <qdlacz@gmail.com>

	Add _CUSTOM_CTOR_CAST macro for _CLASS_OPAQUE_COPYABLE.

	* tools/m4/class_opaque_copyable.m4: New macro.

2012-07-26  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Threads:[Rec]Mutex: Add wrap() functions.

	* glib/src/threads.[hg|ccg]: Add Mutex* wrap(GMutex*) and
	RecMutex* wrap(GRecMutex*). Bug #483790.

2012-07-22  Krzesimir Nowak  <qdlacz@gmail.com>

	Properly wrap g_key_file_load_from_dirs().

	* glib/src/keyfile.hg:
	* glib/src/keyfile.ccg: The just deprecated wrapper was
	incorrectly passing an array wrapper for full_path parameter when
	it should pass a std::string&, because full_path is an output
	parameter. Added handwritten wrapper passing proper parameter.

2012-07-22  Krzesimir Nowak  <qdlacz@gmail.com>

	Wrap g_variant_type_peek_string() by hand.

	* glib/src/gvarianttype.hg:
	* glib/src/gvarianttype.ccg: The wrapped function does not return
	a C string (it is not NULL terminated), so std::string(str, size)
	constructor needs to be used. I wonder how glibmm_variant test
	passed through all distchecks so far...

2012-07-16  Murray Cumming  <murrayc@murrayc.com>

	Show get_type() in the API documentation.

	* tools/m4/class_boxedtype.m4:
	* tools/m4/class_boxedtype_static.m4:
	* tools/m4/class_gobject.m4:
	* tools/m4/class_interface.m4: Move the static get_type()
	functions out of the ifdef so that doxygen can see them,
	because they are sometimes needed, for instance when
	implementing a custom container.
	Bug #670212 (Mark Vender).

2012-07-13  Krzesimir Nowak  <qdlacz@gmail.com>

	Update .gitignore.

	* .gitignore: Ignore bytes.{cc,h}.

2012-07-10  Krzesimir Nowak  <qdlacz@gmail.com>

	Glib::Checksum: Fix a typo.

	* glib/src/checksum.hg: Should be *_SHOULD_*, not *_SHOUD_*.

2012-07-10  Murray Cumming  <murrayc@murrayc.com>

	2.33.3

2012-07-10  Murray Cumming  <murrayc@murrayc.com>

	Gio::InetSocketAddress: Added get_flowinfo() and get_scope_id()

	* gio/src/inetsocketaddress.hg: And add the properties.

2012-07-10  Murray Cumming  <murrayc@murrayc.com>

	Gio::OutputStream: Add write_bytes().

	* tools/m4/convert_glib.m4:
	* gio/src/outputstream.[hg|ccg]: Add write_bytes(), write_bytes_async(),
	and write_bytes_finish().

2012-07-10  Murray Cumming  <murrayc@murrayc.com>

	Added Glib::Bytes and Gio::InputStream::read_bytes().

	* glib/src/bytes.[hg|ccg]:
	* glib/src/filelist.am:
	* tools/m4/convert_glib.m4: Added a simple GBytes wrapper.
	* gio/src/inputstream.[hg|ccg]: Added read_bytes(), read_bytes_async()
	and read_bytes_finish() using the new Glib::Bytes type.

2012-07-10  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus::Connection: Add get_last_serial().

	* gio/src/dbusconnection.hg: Wrap g_dbus_connection_get_last_serial().

2012-07-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	generate_wrap_init.pl: Add _INCLUDE_IN_WRAP_INIT, _GMMPROC_WRAP_CONDITIONALLY.

	* tools/generate_wrap_init.pl.in: Handle _INCLUDE_IN_WRAP_INIT and
	_GMMPROC_WRAP_CONDITIONALLY.
	* tools/m4/class_shared.m4: Add _INCLUDE_IN_WRAP_INIT and
	_GMMPROC_WRAP_CONDITIONALLY. Bug #678883.

2012-07-01  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Update .gitignore.

	* .gitignore: Add /glib/glibmm/threads.[h|cc]. Update /examples/dbus/*.

2012-06-20  Murray Cumming  <murrayc@murrayc.com>

	2.33.2

2012-06-19  Murray Cumming  <murrayc@murrayc.com>

	gio_signals.defs: Regenerate.

	* gio/src/gio_signals.defs: Regenerate with gen_scripts.

2012-06-19  Murray Cumming  <murrayc@murrayc.com>

	gen_scripts: Correct some comments/documentation.

	* tools/gen_scripts/gio_generate_extra_defs.sh:
	* tools/gen_scripts/glib_generate_extra_defs.sh:
	These do not need JHBUILD_SOURCES to be defined.

2012-06-13  Murray Cumming  <murrayc@murrayc.com>

	Updated the *docs.xml files.

	* gio/src/gio_docs.xml:
	* glib/src/glib_docs.xml: Used the gen_scripts.

2012-06-13  Murray Cumming  <murrayc@murrayc.com>

	Update the methods .defs.

	* gio/src/gio_methods.defs:
	* glib/src/glib_functions.defs:
	* glib/src/gobject_functions.defs: Used the gen_scripts.

2012-06-13  Murray Cumming  <murrayc@murrayc.com>

	Updated the enums .defs.

	* gio/src/gio_enums.defs:
	* glib/src/glib_enums.defs: Used the gen_scripts.

2012-06-13  Murray Cumming  <murrayc@murrayc.com>

	Simplify the gen_scripts slightly.

	* tools/gen_scripts/gio_generate_docs.sh:
	* tools/gen_scripts/gio_generate_enums.sh:
	* tools/gen_scripts/gio_generate_methods.sh:
	* tools/gen_scripts/glib_generate_docs.sh:
	* tools/gen_scripts/glib_generate_enums.sh:
	* tools/gen_scripts/glib_generate_methods.sh:
	Do not require changes to PATH.

2012-06-12  Murray Cumming  <murrayc@murrayc.com>

	2.33.1

2012-06-08  Michał Wróbel  <michal.wrobel@flytronic.pl>

	Thread::RecMutex: Don't initialize this as a GStaticMutex.

	The previous code (removed here) depended on an implementation
	detail of GStaticRecMutex, which was changed in this glib commit:
	http://git.gnome.org/browse/glib/commit/?id=2b281e40f32b7916d856dcc95e6f8fe625fcff03

	This change avoids a deadlock with that version of glib.
	Note that Thread::* is deprecated anyway, which is lucky because we do not
	know for sure that this fix is enough.
	Bug #677291

2012-06-04  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::add_exception_handler(): Fix misplaced endif.

	* glib/glibmm/exceptionhandler.h: Fix a misplaced endif, which has made
	Doxygen exclude add_exception_handler() from the documentation.

2012-05-28  Murray Cumming  <murrayc@murrayc.com>

	Application: Pass 0 (NULL) rather than  to GApplication.

	* gio/src/application.ccg: It is annoying that GApplication (and other
	C code) distinguishes, of course.

2012-05-27  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Allow the application ID to be empty.

	* configure.ac: Depend on the latest unstable glib release (2.33.1).
	* gio/src/application.hg: constructor, create(): Add a default
	(empty string) parameter for the application ID, because this may
	now be empty if you do not need the full GApplication functionality.

2012-04-22  Kalev Lember  <kalevlember@gmail.com>

	Gio: Start wrapping GResource.

	* gio/src/resource.[hg|ccg]: Add Gio::ResourceError so that the
	resource handling functions in gtkmm could use it. The rest of the
	GResource API is unwrapped.
	* gio/src/filelist.am: List new resource.hg file.
	Bug #674545.

2012-04-17  Krzesimir Nowak  <qdlacz@gmail.com>

	Fix typos in miscutils.

	* glib/glibmm/miscutils.cc: Return early from get_system_data_dirs()
	and get_system_config_dirs() when C function returns NULL.

2012-04-10  Murray Cumming  <murrayc@murrayc.com>

	2.32.0

2012-04-10  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Add macro _CUSTOM_CTOR_CAST in _CLASS_BOXEDTYPE.

	* tools/m4/class_boxedtype.m4: Add macro _CUSTOM_CTOR_CAST.
	Bug #511136, comment 20.

2012-04-10  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Fix Visual C++ project Files

	* Fix Visual C++ projects for glibmm and giomm as numerous
	sources have been added for the addition of APIs so that
	these libraries can be properly built

2012-04-04  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Dispatcher: Don't send messages to a deleted Dispatcher.

	* glib/glibmm/dispatcher.h: Add missing usage rules.
	* glib/glibmm/dispatcher.cc: Avoid delivering messages to deleted Dispatchers.
	Don't block message delivery while a second main loop is running.
	Bug #651942.

2012-04-04  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Make SignalTimeout,SignalIdle::connect_once() more thread safe.

	* glib/glibmm/main.cc: Call SourceConnectionNode::install() before
	g_source_attach(). Suggested by Chris Vine. Bug #396963 comments 15-18.

2012-04-03  Murray Cumming  <murrayc@murrayc.com>

	Some improvements to the documentation in the previous commit.

	* glib/glibmm/property.h:

2012-04-03  Mark Vender  <markv743@yahoo.co.uk>

	Document Glib::Property and Glib::PropertyBase

	* glib/glibmm/property.h:
	Bug #673291

2012-04-03  Murray Cumming  <murrayc@murrayc.com>

	Slight rewrite of the documenation in the previous commit.

	* tools/m4/class_interface.m4:

2012-04-03  Mark Vender  <markv743@yahoo.co.uk>

	gmmproc: Generate the documentation of default constructors of interface classes.

	Bug #673213

2012-04-03  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Make SignalTimeout,SignalIdle::connect_once() more thread safe.

	* glib/glibmm/main.cc: Don't create a sigc::connection in the connect_once()
	methods. Bug #396963.

2012-03-30  Murray Cumming  <murrayc@murrayc.com>

	Regenerate .defs files.

	* gio/src/gio_docs.xml:
	* gio/src/gio_enums.defs:
	* gio/src/gio_signals.defs:
	* glib/src/glib_docs.xml:
	* glib/src/glib_enums.defs:
	* glib/src/glib_functions.defs:
	* glib/src/gobject_functions.defs: Regenereated using
	the scripts.

2012-03-28  Murray Cumming  <murrayc@murrayc.com>

	2.31.22

2012-03-26  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _WRAP_SIGNAL(): Mark deprecated signals in the _p.h and .cc files.

	* tools/pm/WrapParser.pm: output_wrap_signal(): Pass $deprecated to
	output_wrap_default_signal_handler_[h|cc]().
	* tools/pm/Output.pm: output_wrap_default_signal_handler_[h|cc]():
	Take a 'deprecated' bool parameter and pass it to _SIGNAL_P[H|CC]().
	* tools/m4/signal.m4: _SIGNAL_PROXY(): Add deprecation info to the .cc file.
	_SIGNAL_PH(), _SIGNAL_PCC(): Take a 'deprecated' bool parameter.

2012-03-26  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: _WRAP_PROPERTY(): Fix mixed-up deprecation and documentation.

	* tools/pm/Output.pm: Add $deprecated in the first call to _PROPERTY_PROXY().
	* tools/m4/property.m4: Correct comments in .cc files by swapping #endif's
	in _PROPERTY_PROXY().

2012-03-26  Murray Cumming  <murrayc@murrayc.com>

	Gio: Move AppLaunchContext into its own header file.

	* gio/src/appinfo.[hg|ccg]: Move the AppLaunchContext class into:
	* gio/src/applaunchcontext.[hg|ccg]:
	This helps gmmproc, for instance when deriving from it for
	Gdk::AppLaunchContext.

2012-03-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	Correct the last ChangeLog entry.

2012-03-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	ActionGroup, DBusObject: Ensure vfunc callbacks return valid memory.

	* gio/src/action.hg (get_name_vfunc_callback):
	* gio/src/dbusobject.hg (get_object_path_vfunc_callback):
	(get_interfaces_vfunc_callback): Ensure that the return values of the
	virtual functions of these callbacks are properly copied by correcting
	the appropriate conversions so that the callbacks don't return empty
	memory.

2012-03-23  Murray Cumming  <murrayc@murrayc.com>

	ActionGroup: list_actions_vfunc(): Do not return freed memory.

	* gio/src/actiongroup.hg: list_actions vfunc: Correct the conversion,
	doing a deep copy of the array of strings.

2012-03-23  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _WRAP_SIGNAL(): Allow signals to be deprecated.

	* tools/pm/WrapParser.pm: on_wrap_signal(): Parse an optional
	deprecated "the explanation" parameter.
	* tools/pm/Output.pm: output_wrap_signal_decl(): Take a deprecated bool
	and deprecated_docs, passing them to the m4 macro.
	* tools/m4/signal.m4: _SIGNAL_PROXY(): Take a deprecated bool parameter
	and use it to ifdef-out the signal declaration.
	However, we cannot put the ifdef around the default signal handler,
	because that would break ABI.

2012-03-23  Murray Cumming  <murrayc@murrayc.com>

	Prepare NEWS for the next release.

2012-03-22  Murray Cumming  <murrayc@murrayc.com>

	Gio: MenuItem: set_action_and_target(): Add one without the cariant.

	* gio/src/menuitem.[hg|ccg]: set_action_and_target(): Rename to
	set_action() and add a set_action() with just the action name,
	because the GVariant* is optional.

2012-03-22  Murray Cumming  <murrayc@murrayc.com>

	Gio: SimpleAction: Add a parameter that takes no VariantType.

	* gio/src/simpleaction.[hg|ccg]: The GVariantType* is optional.

2012-03-22  Murray Cumming  <murrayc@murrayc.com>

	Gio: Menu, MenuItem: Add default parameter values.

	* gio/src/menu.hg:
	* gio/src/menuitem.hg: Let the detailed_description parameters be
	empty.

2012-03-22  Murray Cumming  <murrayc@murrayc.com>

	Gio: Add Menu and MenuItem.

	* tools/extra_defs_gen/generate_defs_gio.cc: Mention the new GTypes here,
	though they do not seem to have any properties or signals.

	* gio/src/filelist.am:
	* gio/src/menu.[hg|ccg]:
	* gio/src/menuitem.[hg|ccg]: Add these classes, as a way to create
	the Gio::MenuModel for Gtk::Application::set_app_menu() and set_menubar().
	* tools/m4/convert_gio.m4: Add MenuItem conversion.
	* gio/giomm.h: Mention the new headers here.

2012-03-22  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Dispatcher examples: Use Glib::signal_idle().connect_once().

	* examples/thread/dispatcher.cc: Use Glib::signal_idle().connect_once().
	* examples/thread/dispatcher2.cc: Use Glib::signal_idle().connect_once().
	Rename class Dispatcher to ThreadDispatcher. Bug #396963

2012-03-19  Murray Cumming  <murrayc@murrayc.com>

	Fix some warnings found by clang++.

	* glib/glibmm/class.cc: registered_derived_type(): Use (void*)0 instead
	of NULL to avoid a missing sentintel warning.

2012-03-16  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::Object: Add the signals of the interface.

	* gio/src/dbusobject.hg: Add the signal_interface_[added|removed]()
	signals of the interface.
	* tools/extra_defs_gen/generate_defs_gio.cc: Add the GDBusObject GType
	to the signal and properties generation utility.
	* gio/src/gio_signals.defs: Regenerate the defs file to get the
	signals of the interface.
	* tools/m4/convert_gio.m4: Add a necessary conversion for wrapping the
	signals.

	* gio/src/dbusinterface.hg: Whitespace corrections.

2012-03-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	DateTime: Correct the declaration of the TimeVal struct.

	* glib/src/datetime.hg: It was declared as a class but is in fact a
	struct.  I also built the jhbuild c++ sources (as gtkmm was) using
	clang++ out of curiosity which discovered this.

2012-03-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus: Add the Interface and Object interfaces.

	* gio/src/dbusinterface.{ccg,hg}:
	* gio/src/dbusobject.{ccg,hg}:
	* gio/src/filelist.am: Add the new sources and include them in the
	list of files to be built.
	* gio/src/gio_vfuncs.defs: Add the virtual function definitions for
	the new interfaces.
	* tools/m4/convert_gio.m4: Add conversions for the new interfaces.

2012-03-12  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Glib::Threads::Private, Glib::Dispatcher: Delete Glib::DispatchNotifier.

	* glib/src/thread.hg: Add missing @deprecated.
	* glib/src/threads.hg: Add Private::replace(). Add documentation to Private.
	* glib/glibmm/dispatcher.cc: Use Private::replace() instead of set().
	Bug #671587.

2012-03-06  Murray Cumming  <murrayc@murrayc.com>

	2.31.20

2012-03-03  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Add quit().

	* gio/src/application.hg: Wrap g_application_quit().

2012-03-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Signal*: Better description of the connect*() methods.

	* glib/glibmm/main.h: Mention that returning false from a bool-returning
	handler disconnects the handler. Other minor changes of the descriptions.
	Bug #669906.

2012-03-02  Murray Cumming  <murrayc@murrayc.com>

	h2defs.py: Ignore the new GDK_AVAILABLE_IN_* macros.

	* tools/defs_gen/h2def.py: Strip these macros so we can actually
	parse the latest headers.

2012-03-01  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Allow destructors to be documented.

	* tools/m4/base.m4 (SECTION_DTOR_DOCUMENTATION): Add a new section in
	which to store a destructor's documentation.
	* tools/m4/class_shared.m4 (_DOCUMENT_DTOR): Add a new macro which
	takes text and places it in a Doxygen comment block sending the
	comment block to the new section above.  The text can be multiline.
	The macro assumes that any lines below the first, if any, have at
	least one space preceding them.  If the text is a single line, it can
	be double quoted (the double quotes are removed).
	* tools/m4/class_boxedtype.m4:
	* tools/m4/class_gobject.m4:
	* tools/m4/class_interface.m4:
	* tools/m4/class_opaque_copyable.m4: Modify these so that any Doxygen
	comment block sent to the new section above is inserted in the
	generated declaration of the destructor.

	Bug #668918.

2012-03-01  José Alburquerque  <jaalburqu@svn.gnome.org>

	Generation Scripts: Don't assume the root directory is glibmm.

	* tools/gen_scripts/gio_generate_docs.sh:
	* tools/gen_scripts/gio_generate_enums.sh:
	* tools/gen_scripts/gio_generate_extra_defs.sh:
	* tools/gen_scripts/gio_generate_methods.sh:
	* tools/gen_scripts/glib_generate_docs.sh:
	* tools/gen_scripts/glib_generate_enums.sh:
	* tools/gen_scripts/glib_generate_extra_defs.sh:
	* tools/gen_scripts/glib_generate_methods.sh: Modify them so that they
	assume that they reside in the tools/gen_scripts directory and find
	the root of glibmm based on that instead of assuming that the name of
	the root directory is glibmm.

	* gio/src/gio_enums.defs.patch: Add this patch file to streamline the
	enum generation so that keeping the custom Gio::HOST_WAS_NOT_FOUND
	enum value is easier.

2012-02-29  Murray Cumming  <murrayc@murrayc.com>

	Add back our custom Gio::HOST_WAS_NOT_FOUND enum value.

	* gio/src/gio_enums.defs: This is easy to lose, but we always
	notice during make check.

2012-02-28  José Alburquerque  <jaalburqu@svn.gnome.org>

	tools: Add XML docs and defs generation scripts.

	* tools/gen_scripts/gio_generate_docs.sh:
	* tools/gen_scripts/gio_generate_enums.sh:
	* tools/gen_scripts/gio_generate_extra_defs.sh:
	* tools/gen_scripts/gio_generate_methods.sh:
	* tools/gen_scripts/glib_generate_docs.sh:
	* tools/gen_scripts/glib_generate_enums.sh:
	* tools/gen_scripts/glib_generate_extra_defs.sh:
	* tools/gen_scripts/glib_generate_methods.sh: Add these scripts to
	generate the XML docs and defs files for glibmm and giomm.  A
	'JHBUILD_SOURCES' variable pointing to the jhbuild root source
	directory needs to be defined and the various tools (like h2def.py,
	enum.pl, etc.) need to be in the command path for these scripts to run
	successfully.  They generate the appropriate files, patch them if
	necessary, and place them in the correct place.  All that's needed is
	to run the scripts.

	* gio/src/gio_docs.xml:
	* gio/src/gio_enums.defs:
	* gio/src/gio_methods.defs:
	* gio/src/gio_signals.defs:
	* glib/src/glib_docs.xml:
	* glib/src/glib_enums.defs:
	* glib/src/glib_functions.defs:
	* glib/src/gmodule_functions.defs:
	* glib/src/gobject_enums.defs:
	* glib/src/gobject_functions.defs: Regenerate all the XML and defs
	files to ensure that the scripts work.

	* glib/src/glib_enums.defs.patch: Add this patch file so that it isn't
	necessary to manually edit the defs file.
	* gio/src/gio_signals.defs.patch:
	* glib/src/glib_functions.defs.patch: Update these patch files so the
	defs files patch successfully.

	Bug #668918.

2012-02-28  José Alburquerque  <jaalburqu@svn.gnome.org>

	docextract_to_xml.py: Generate signal docs by default.

	* tools/defs_gen/docextract_to_xml.py: Change the --with-signals
	option to --no-signals and assume that signal documentation should be
	generated by default.  The --no-signals option requests that the docs
	not be generated.

	Bug #668918.

2012-02-28  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	DBus::Error, DBus::Proxy: Fix interaction with generate_wrap_init.pl.

	* gio/src/dbuserror.hg: Remove now unnecessary declaration of friend
	Gio::wrap_init().
	* gio/src/dbusproxy.hg: Add _GMMPROC_EXTRA_NAMESPACE(DBus). Bug #640029.

2012-02-28  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix exceptions thrown by Thread::create() and Threads::Thread::create.

	* glib/src/thread.ccg: create(): Call g_thread_try_new() instead of
	g_thread_new(). Throw a Glib::ThreadError when appropriate, instead of calling
	Glib::Error::throw_exception(), which would throw Glib::Threads::ThreadError.
	* glib/src/threads.ccg:create(): Call g_thread_try_new() instead of
	g_thread_new(). Remove parameter 'joinable'.
	* glib/src/threads.hg: Remove parameter 'joinable'. Remove comments about
	non-joinable threads and thread priorities.
	* examples/network/resolver.cc:
	* examples/network/socket-client.cc:
	* examples/network/socket-server.cc:
	* examples/thread/dispatcher.cc:
	* examples/thread/dispatcher2.cc:
	* examples/thread/thread.cc: Remove parameter 'joinable' in calls to
	Glib::Threads::Thread::create(). Bug #640029.

2012-02-28  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Fix the build with --disable-deprecated-api.

	* glib/glibmm/main.cc: Call get_time() instead of the deprecated
	get_current_time(), when GLIBMM_DISABLE_DEPRECATED is defined.
	* glib/src/thread.[hg|ccg]: Use _IS_DEPRECATED instead of
	_DEPRECATE_IFDEF_{START|END}. _DEPRECATE_IFDEF_{START|END} does not include
	code generated by gmmproc within #ifndef/#endif.
	* glib/src/threads.ccg: Change catch(Glib::Thread::Exit&) to
	catch(Glib::Threads::Thread::Exit&).
	* glib/src/threads.hg: Add _GMMPROC_EXTRA_NAMESPACE(Threads).
	* glib/src/valuearray.hg:
	* gio/src/application.hg: #undef G_DISABLE_DEPRECATED in the .cc file.
	* tools/m4/class_shared.m4: Define _IS_DEPRECATED. Bug #640029.

2012-02-28  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	generate_wrap_init.pl: Improve reg. of exception classes in sub-namespaces.

	* tools/generate_wrap_init.pl.in: When there are exception classes in sub-
	namespaces, create extra wrap_init() functions in those namespaces, and
	register the exception classes from there. wrap_init() is a friend that makes
	a pointer to the private throw_func(), and that's easier if wrap_init() is
	declared in the same namespace as the exception class. Bug #640029.

2012-02-28  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	generate_wrap_init.pl: Improve it for deprecated files and sub-namespaces.

	* tools/generate_wrap_init.pl.in: Note that _IS_DEPRECATED deprecates a
	whole file. Keep track of sub-namespaces for _CLASS_GOBJECT and
	_CLASS_GTKOBJECT (not just for _WRAP_GERROR). Ignore macros in comments.
	Bug #640029.

2012-02-27  Murray Cumming  <murrayc@murrayc.com>

	2.31.18.1

2012-02-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	h2def.py: Handle types such as 'const gchar* const *' for functions.

	* tools/defs_gen/h2def.py (clean_func): Make deprecated handling more
	general so that macros such as GDK_DEPRECATED and GDK_DEPRECATED_FOR()
	are also stripped.  Also replace '* const' with '*-const' in the
	constants processing section so that types such as 'const gchar*
	const*' (which are now used in the declaration of functions such as
	gtk_about_dialog_get_authors()) are correctly processed.

2012-02-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::[ActionGroup|MenuModel]: Have get() and not create() methods.

	* gio/src/dbusactiongroup.hg:
	* gio/src/dbusmenumodel.hg: Have get() methods to get instances of
	theses classes and not create() methods as is done in
	Gio::Application.

	Bug #637445.

2012-02-24  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _WRAP_PROPERTY(): Allow properties to be deprecated.

	* tools/m4/property.m4: get_docs(): Take optional documentation_docs
	too, like DocsParser::lookup_documentation().
	* tools/pm/Output.pm: output_wrap_property(): Take a deprecated bool
	and deprecated_docs, adding the ifdef if necessary and passing
	it to the _PROPERTY_PROXY() m4 macro, with the amended documentation.
	* tools/pm/Property.pm: _PROPERTY_PROXY(): Take a deprecated bool
	parameter and add the ifndef if necessary.
	* tools/pm/WrapParser.pm: on_wrap_property(): Parse an optional
	deprecated "the explanation" parameter.

2012-02-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::Application, Gio::DBus::AuthObserver: Typos.

	* gio/src/application.hg:
	* gio/src/dbusauthobserver.hg:

2012-02-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::Application: Add missing virtual functions and methods.

	* gio/src/application.{ccg,hg}: Add the rest of the virtual functions
	-- all except the one with a GVariantBuilder parameter because that
	type is not wrapped yet.  Also add the [set|get]_default() methods
	wrapping the respective C functions.
	* gio/src/gio_vfuncs.defs: Add the rest of GApplication's virtual
	function definitions so they can be wrapped.
	* tools/m4/convert_gio.m4: Add GApplication conversions.

2012-02-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add class docs to recently added Application related classes.

	* gio/src/actionmap.hg:
	* gio/src/dbusactiongroup.hg:
	* gio/src/dbusmenumodel.hg:
	* gio/src/menuattributeiter.hg:
	* gio/src/menulinkiter.hg:
	* gio/src/remoteactiongroup.hg:

2012-02-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	MenuModel: Add the attribute and link constants.

	* gio/src/dbusmenumodel.hg:
	* gio/src/menumodel.ccg: Add the class documentation.  Also add the
	attribute and link constants from the C API in enums and re-wrap the
	existing methods to use the enums (this was adapted from gstreamermm).

2012-02-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the DBus::MenuModel class.

	* gio/src/dbusmenumodel.{ccg,hg}: Add the sources wrapping a single
	create() method.
	* gio/src/filelist.am: Add the sources to the list of files to be
	built.

2012-02-23  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::Connection: Add the MenuModel export/unexport methods.

	* gio/src/dbusconnection.{ccg,hg}: Add the two new methods, wrapping
	the two functions in the GMenuModel exporter API:
	http://developer.gnome.org/gio/2.31/gio-GMenuModel-exporter.html
	* tools/m4/convert_gio.m4: Add necessary conversions.

2012-02-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: MenuModel, MenuAttributeIter: Correct typos.

	* gio/src/menuattributeiter.hg (get_next): Remove extra (unneeded)
	parameter to the _WRAP_METHOD_DOCS_ONLY macro.
	* gio/src/menumodel.ccg: Whitespace.

2012-02-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the MenuModel and Menu[Attribute|Link]Iter classes.

	* gio/src/menuattributeiter.{ccg,hg}:
	* gio/src/menulinkiter.{ccg,hg}:
	* gio/src/menumodel.{ccg,hg}:
	* gio/src/filelist.am: Add the sources for the classes and include
	them in the list of source files to build.
	* tools/m4/convert_gio.m4:
	* tools/m4/convert_glib.m4: Add the necessary conversions.

2012-02-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::Application: Derive from the ActionGroup interface.

	* gio/src/application.hg: As is done in the C API.

2012-02-21  Murray Cumming  <murrayc@murrayc.com>

	2.31.18

2012-02-20  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::Connection: Add the ActionGroup export/unexport methods.

	* gio/src/dbusconnection.{ccg,hg}: Add the two new methods, wrapping
	the two functions in the new GActionGroup exporter API:
	http://developer.gnome.org/gio/2.31/gio-GActionGroup-exporter.html

2012-02-20  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the DBus::ActionGroup class.

	* gio/src/dbusactiongroup.{ccg,hg}: Add the sources, wrapping the
	create() method.
	* gio/src/filelist.am: Include the sources in the build.

2012-02-20  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the RemoteActionGroup interface.

	* gio/src/remoteactiongroup.{ccg,hg}:
	* gio/src/filelist.am: Add the sources, wrapping the methods and
	virtual functions, and include them in the list of files to be built.
	* gio/src/gio_vfuncs.defs: Add the GRemoteActionGroup virtual
	functions.

	* gio/src/applicationcommandline.hg: Add the class documentation
	block.

2012-02-16  José Alburquerque  <jaalburqu@svn.gnome.org>

	h2def.py: Handle deprecated functions.

	* tools/defs_gen/h2def.py: The g_application_set_action_group() and
	the g_volume_monitor_adopt_orphan_mount() functions are wrapped but
	not generated because they have been deprecated in their header files
	by using a GLIB_DEPRECATED macro before the function declaration.
	Modify this tool to strip the macro so the functions are recognized.
	* gio/src/gio_methods.defs: Regenerate so the missing method
	definitions are included.

2012-02-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add the ActionMap interface.

	* gio/src/actionmap.{ccg,hg}:
	* gio/src/filelist.am: Add the new sources.

	* gio/src/gio_methods.defs: Regenerate to get the new ActionMap
	methods.
	* gio/src/gio_vfuncs.defs: Add the ActionMap virtual functions.

	* gio/src/application.hg:
	* gio/src/simpleactiongroup.hg: These classes implement the new
	interface.

	* gio/src/gio_extra_objects.defs: Add new objects so that there are no
	missing define-object warnings from gmmproc.

2012-02-15  Krzesimir Nowak  <qdlacz@gmail.com>

	Fix reference counting of Gio::SocketConnection::get_socket().

	* gio/src/socketconnection.hg: Added refreturn.

2012-02-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: docs: Remove possible parens in gtk-doc signal references.

	* tools/pm/DocsParser.pm: Discard possible parenthesis following a
	gtk-doc signal reference.  This avoids a double set of parenthesis
	appearing in the documentation.

	Bug #668918.

2012-02-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::Proxy: Add a TODO.

	* gio/src/dbusproxy.hg: Add a TODO.
	* gio/src/filemonitor.hg: Typo.
	* tools/pm/DocsParser.pm (convert_tags_to_doxygen): Allow <listitem>
	tags to not be on a line by themselves also (as was done with the
	<itemizedlist> tag.

2012-02-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	Remove unnecessary signal docs.

	* gio/src/dbusserver.hg:
	* gio/src/drive.hg: Remove signal docs from .hg files that is now
	automatically included by gmmproc.

2012-02-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	Regenerate XML docs for glibmm and giomm.

	* gio/src/gio_docs.xml:
	* glib/src/glib_docs.xml: Regenerate these, now including the signal
	docs so that gmmproc can include their docs in the source generation
	process.

2012-02-14  Murray Cumming  <murrayc@murrayc.com>

	2.31.16.1

2012-02-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: docs: Convert signal and property names correctly.

	* tools/pm/DocsParser.pm (substitute_identifiers): Search for gtk-doc
	property and signal references and convert them to appropriate C++
	names so that they are referenced correctly in the documentation.

	Bug #668918.

2012-02-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: DocsParser.pm (convert_tags_to_doxygen): Correct typo.

	* tools/pm/DocsParser.pm (convert_tags_to_doxygen): Make the newline
	following the <itemizedlist> tags optional when converting them to
	Doxygen format (in case the tags are not necessarily on a line by
	themselves).

2012-02-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Translate the <itemizedlist> tags in docs correctly.

	* tools/pm/DocsParser.pm (lookup_documentation): Typo.
	(convert_tags_to_doxygen): Add substitutions to convert gtk-doc
	<itemizedlist> tags to Doxygen format.  For example, see
	Gtk::ToolItem's "create-menu-proxy" and "toolbar-reconfigured"
	signal docs.

2012-02-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	docextract_to_xml.py: Add some HTML entity conversions.

	* tools/defs_gen/docextract_to_xml.py: Add some HTML entity
	conversions that produce errors when processed by gmmproc.

2012-02-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Method generation: Fix indentation of void methods.

	* tools/m4/method.m4: Make sure that the generated line in methods
	returning void is indented properly (by two spaces).  Before, there
	was no indentation (see for example the Entry::set_inner_border()
	method).

2012-02-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Add documentation to wrapped signals.

	* tools/m4/signal.m4: Add docs to the on_*() default handlers
	referring the users to the signal_*() docs.
	* tools/pm/DocsParser.pm (parse_on_start):
	(parse_on_end): Allow the <signal></signal> tags from the generated
	XML docs to be processed in a similar way as the <function></function>
	tags are processed.  The docs of the signals are stored as
	"Class::a_signal_name" in the hash.
	(append_parameter_docs): Skip the first parameter for signals also
	because the first parameter of signals is the object for which the
	signal is triggered.
	(lookup_documentation): Generalize the no docs warning to include
	signals also.
	* tools/pm/Function.pm (get_refdoc_comment): Modify the subroutine to
	accept the docs of the signal (that the DocsParser stores) and include
	the prototype of the slot in the docs.
	* tools/pm/Output.pm (output_wrap_sig_decl): Modify the subroutine to
	look up the documentation of the signal which it then passes to
	get_refdoc_comment() so that the documentation of the signal from the
	generated XML is included in the declaration of the signal.

	Bug #668918 (Mark)

2012-02-07  Murray Cumming  <murrayc@murrayc.com>

	2.31.16

2012-01-30  TS  <t.sailer@alumni.ethz.ch>

	Dispatcher: Fix the build on win32.

	* glib/glibmm/dispatcher.cc: Mention the new Threads:: namespace in the
	ifdefed win32 code.

2011-12-08  Haikel Guemar  <karlthered@gmail.com>

	thread.h: Move calls to deprecated glib functions into thread.cc.

	* glib/src/thread.[hg|ccg]: Move calls to deprecated glib functions
	from thread.h into new public helper functions, so they are only
	used in our .cc file. This avoids warnings in application compiles
	just because they happen to include this header.

2011-11-24  Murray Cumming  <murrayc@murrayc.com>

	2.31.2

2011-11-24  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Make class Glib::Threads::Private buildable with --enable-warnings=fatal.

	* glib/src/threads.hg: G_PRIVATE_INIT(destructor_func) is used only in an
	initialization.

2011-11-23  Murray Cumming  <murrayc@murrayc.com>

	Restore unintended change.

2011-11-23  Murray Cumming  <murrayc@murrayc.com>

	Add Glib::Threads::* in threads.h, deprecating everything in thread.h

	* glib/src/filelist.am:
	* glib/src/thread.[hg|ccg]: Deprecate the whole file, adding
	deprecation doxygen comments to all API.
	* glib/src/threads.[hg|ccg]: A new Threads namespace containing
	equivalents for everything in thread.h, implemented using
	only non-deprecated glib API. This was necessary because we had
	to break the ABI to do this.
	* glib/glibmm.h: Include threads.h

	* glib/glibmm/main.[h|cc]: Added a wait() method overload that
	takes the new types, deprecating the existing wait() method.

	* examples/network/resolver.cc:
	* examples/network/socket-client.cc:
	* examples/network/socket-server.cc:
	* examples/thread/dispatcher.cc:
	* examples/thread/dispatcher2.cc:
	* examples/thread/thread.cc:
	* examples/thread/threadpool.cc:
	* glib/glibmm/dispatcher.cc:
	* glib/glibmm/exceptionhandler.cc:
	* glib/glibmm/threadpool.[h|cc]: Use the new Glib::Threads::* types
	instead of thread.h.

2011-11-23  Murray Cumming  <murrayc@murrayc.com>

	Avoid a deprecation warning in implelementation of deprecated API.

	* glib/glibmm/main.cc: Define GLIB_DISABLE_DEPRECATION_WARNINGS
	to avoid a warning about g_source_get_current_time(),
	which we must use in our own deprecated code.

2011-11-23  Murray Cumming  <murrayc@murrayc.com>

	class.cc: Avoid compiler warnings when using -std=c++0x with g++.

	* glib/glibmm/class.cc: Add casts because GTypeQuery::class_size
	and instance_size are guint but GTypeInfo::class_size and
	instance_size are guint16.

2011-11-18  Murray Cumming  <murrayc@murrayc.com>

	Require glibmm 2.2.10 so that make check works.

	* configure.ac: Bug #663686 (Michael Biebl)

	Conflicts:

	ChangeLog

2011-11-16  Hub Figuiere  <hub@figuiere.net>

	Ensure template parameter has a space before to avoid trigraphs. (Gtkmm bug #663303)

	* tools/m4/property.m4: Ensure template parameter has a space
	before to avoid trigraphs.

2011-10-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add some unwrapped methods and properties.

	* gio/src/drive.hg: Add get_sort_key().
	* gio/src/emblemedicon.hg: Add clear_emblems().
	* gio/src/fileicon.hg: Add the "file" property.
	* gio/src/inetaddress.hg: Add address_equal().
	* gio/src/mount.hg: Add get_sort_key().
	* gio/src/socket.hg: Add the "timeout" property.
	* gio/src/socketaddress.hg: Add the "family" property.
	* tools/m4/convert_gio.m4: Add a necessary conversion.

2011-10-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Example Removal: Also remove code in </programlisting> tags.

	* tools/pm/DocsParser.pm (lookup_documentation): Also remove code in
	<programlisting>...</programlisting> tags.

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	Avoid use of deprecated API in tests and examples.

	* tests/Makefile.am:
	* examples/Makefile.am: Disable deprecated API.
	* examples/network/socket-client.cc:
	* examples/network/socket-server.cc:
	* examples/thread/dispatcher.cc:
	* examples/thread/dispatcher2.cc:
	* examples/thread/thread.cc: Remove calls to Glib::thread_init(), instead
	calling Glib::init() where that side-effect was also intended.

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	threadpool example: Use Mutex instead of StaticMutex.

	* examples/thread/threadpool.cc: The advantage of StaticMutex was that
	it would silently do nothing if threads were not initialized. That
	was never a useful distinction in this example anyway.
	Also remove the deprecated thread_init() call.
	* glib/src/thread.ccg: Mutex: Add a TODO about not using the deprecated
	API.

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	2.31.0.2

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	Fix the deprecation ifdefs.

	* glib/src/thread.hg: Move the deprecation ifdefs to avoid affecting
	non-deprecated API.

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	2.31.0.1

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	Avoid an unused-parameter compiler warning.

	* glib/src/thread.ccg: thread_init(): Comment out the vtable parameter.

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	thread.h: Allow use of this without causing deprecation compiler warnings.

	* glib/src/thread.hg: undef and then redefine G_DISABLE_DEPRECATED, and
	define GLIB_DISABLE_DEPRECATION_WARNINGS, if G_DISABLE_DEPRECATED is
	defined, so we can use the deprecated API in this header (though only in
	our own deprecated API).

	* tools/generate_wrap_init.pl.in: Include glibmm.h instead of glib.h so
	we can include thread.h first (via glibmm.h) instead of only later.
	This seems more logical than explicitly including thread.h in all
	(even non-glibmm) generated wrap_init.cc files.

	* tools/m4/base.m4:
	* glib/glibmm.h:
	* glib/glibmm/dispatcher.cc:
	* glib/glibmm/exceptionhandler.cc:
	* glib/glibmm/main.cc:
	* examples/thread/thread.cc:
	* examples/thread/threadpool.cc: Adjust the includes to include thread.h
	first.

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	Move IOCondition from main.h to iochannel.h and autogenerate it.

	* glib/src/iochannel.hg: Use _WRAP_ENUM() for IOCondition instead of
	hand-coding it in
	* glib/glibmm/main.h:
	though this requires some manual editing of
	* glib/src/glib_enums.defs: due to the weird defines that GioChannel uses for
	its values. See the comment.
	* glib/glibmm/streamiochannel.cc: Adjust the includes.
	This avoids the need to include glib.h from main.h.

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	Avoid some deprecation compiler warnings.

	* gio/src/file.hg:
	* gio/src/volumemonitor.hg:
	* glib/src/date.hg: Add GLIB_DISABLE_DEPRECATION_WARNINGS to
	SECTION_CC_PRE_INCLUDES to avoid compiler warnings with the new glib
	deprecation system.
	* glib/src/value_basictypes.cc.m4: undef them here too, because
	g_value_set_char() and g_value_get_char() are deprecated.

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	Missing file.

2011-10-26  Murray Cumming  <murrayc@murrayc.com>

	Thread: Move deprecated parts together.

	* glib/src/thread.hg: This simplifies things a bit.

2011-10-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Don't include C code examples found in the XML docs.

	* tools/pm/DocsParser.pm (lookup_documentation): Remove the C example
	code from the attained documentation of the specified function.  Print
	a warning that the example code has been removed if that is the
	case.  Include the function name in the warning so that it is known
	where the examples are in case it is convenient to translate them.
	(convert_tags_to_doxygen): No longer convert tags and symbols that
	signal example code to Doxygen format since they are removed with the
	example code.

	Bug #650544

2011-10-25  Murray Cumming  <murrayc@murrayc.com>

	giomm/wrap_init.h: Remove the glibmm.h include from here too.

	* gio/giomm/wrap_init.[h|cc]: Move the #include into the .cc file.
	* gio/giomm.h: Add an #include glibmm.h here instead.

2011-10-25  Murray Cumming  <murrayc@murrayc.com>

	giomm/wrap_init.h: Remove the glibmm.h include from here too.

	* gio/giomm/wrap_init.h: The #include does not seem necessary at all.

2011-10-25  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: Include <glibmm.h> in .cc files for convenience.

	* tools/m4/base.m4: Add an include <glibmm.h> line to the .cc files.
	* glib/src/optioncontext.ccg: Rename a namespace to avoid a clash.

	It is more useful to keep the general glibmm.h include out of headers.

2011-10-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Don't include <glibmm.h> by default in generated files.

	* tools/m4/base.m4: Include <glibmm/ustring.h> and <sigc++/sigc++.h>
	by default in header files of generated files in modules other than
	glibmm.  This should make compilation faster for those modules.

	* gio/src/*.{h,cc}g:
	* gio/giomm/slot_async.cc: Adjust includes according to the above
	change.

	Bug #662597

2011-10-25  Murray Cumming  <murrayc@murrayc.com>

	2.31.0

2011-10-25  Murray Cumming  <murrayc@murrayc.com>

	Regenerated more defs.

	* gio/src/gio_enums.defs: Regenerated with enums.pl.
	* gio/src/gio_methods.defs: Regenerated with h2defs.py.
	* glib/src/glib_functions.defs:
	* glib/src/gobject_functions.defs: Regenereated with h2defs.py
	* glib/src/glib_deprecated_functions.defs: Added this file.
	* glib/src/glib.defs: Mention the new file.

2011-10-25  Murray Cumming  <murrayc@murrayc.com>

	Do not use gthread-2.0.

	* configure.ac: Do not use gthread-2.0 at all, because it only contains
	empty functions so it is better to just not call them.
	Require the latest glib version, to avoid people using this version of
	glibmm with a version of glib that would need g_thread_init().
	* glib/src/thread.ccg: thread_init(): Do not call g_thread_init() because
	it now does nothing and would require linking to gthread-2.0.

2011-10-25  Murray Cumming  <murrayc@murrayc.com>

	Fix the make check build by always linking to gthread-2.0.

	* configure.ac: Always use gthread-2.0 because there is now no advantage to
	not doing that, because threading is now always enabled in glib.
	Remove the separate GTHREAD* variables.
	* glib/glibmm/Makefile.am:
	* gio/giomm/Makefile.am:
	* tests/Makefile.am:
	* tools/Makefile.am:
	* examples/Makefile.am: Remove use of the GTHREAD* variables..
	* examples/network/resolver.cc: Remove the non-threading option and code that
	uses it.

2011-10-25  Murray Cumming  <murrayc@murrayc.com>

	Regenerate enums defs.

	* glib/src/glib_enums.defs, gobject_enums.defs: Regenerated with enums.pl.
	* glib/src/glib_deprecated_enums.defs: Added this file.
	* glib/src/filelist.am: Mention the new file.
	* glib/src/glib.defs: Mention the new file and actually mention
	gobject_enums.defs.

2011-10-23  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::Connection: Temporarily remove newly added call() methods.

	* gio/src/dbusconnection.{ccg,hg}: Remove the newly added call()
	methods with a UnixFDList parameter until the call_finish() method
	with a UnixFDList parameter is added also.

	* gio/src/credentials.hg:
	* gio/src/dbusmessage.ccg:
	* gio/src/dbusmessage.hg: Typos.

2011-10-21  Murray Cumming  <murrayc@murrayc.com>

	Thread: Use g_thread_new() instead of g_thread_create().

	* glib/src/thread.[hg|ccg]: create(): Replace use of (deprecated)
	g_thread_create() with g_thread_new(), ignoring the joinable parameter.
	create(lots of parameters): Deprecate this, because the parameters are
	ignored by g_thread_create_full() now.

2011-10-21  Murray Cumming  <murrayc@murrayc.com>

	Deprecated thread_init(), Thread::joinable(), *_priotity(), etc.

	* glib/src/thread.[hg|ccg]: Deprecate thread_init(), thread_supported,
	Thread::joinable(), Thread::set_priority(), Thread::get_priority() and
	ThreadPriority.

2011-10-19  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Remove M4 warnings due to commas in return types.

	* tools/m4/convert_base.m4 (__HASH2): Appropriately quote the
	pushdef() arguments and the m4_ifelse() arguments due to some warnings
	generated because of the newly wrapped method in the
	ApplicationCommandLine class (get_platform_data()) which has a comma
	in the return type.  The wrapping was successful even with the warning
	but the return type was still being split when passed to this macro.
	Document what the macro does.
	(_CONVERT): Typos.
	(_CONVERSION):
	(_INITIALIZATION): Document what parameters are allowed for these
	macros.

2011-10-18  Murray Cumming  <murrayc@murrayc.com>

	Revert "gmmproc: Remove M4 warnings due to commas in return types."

	This reverts commit 570314de2e0ff7635847695ec546d501817fb878.

2011-10-16  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Remove M4 warnings due to commas in return types.

	* tools/m4/convert_base.m4 (__HASH2): Appropriately quote the
	pushdef() arguments and the m4_ifelse() arguments due to some warnings
	generated because of the newly wrapped method in the
	ApplicationCommandLine class (get_platform_data()) which has a comma
	in the return type.  The wrapping was successful even with the warning
	but the return type was still being split when passed to this macro.

2011-10-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::Connection: Correct UnixFDList class forward declaration.

	* gio/src/dbusconnection.hg: Place the class declaration in the Gio
	namespace and not in the Gio::DBus namespace which is incorrect to fix
	the build.  There was a '-Werror' option in the CXXFLAGS variable of
	my ~/.jhbuildrc file which was causing deprecation warnings to break
	the build so I did not verify the previous to last commit, sorry.

2011-10-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	Date: set_time(): Use g_date_set_time_t() instead of g_date_set_time().

	* glib/src/date.ccg: The latter function is deprecated.  This fixes
	the build with the master branch of glib with deprecations disabled
	though there's one small error related to the Threads discussion on
	the mailing list that will still have to be looked at.

2011-10-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusMethodInvocation: Add UnixFDList return_value() method overload.

	* gio/src/dbusmethodinvocation.hg: Add the method overload.
	* gio/src/dbusmessage.hg: Add an _IGNORE.

2011-10-13  Murray Cumming  <murrayc@murrayc.com>

	Do not include glib/gvarianttype.h.

	* glib/src/thread.hg: Include glib.h instead. The recent glib version
	has a pragma that complains about this.

2011-10-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	Correct the ChangeLog.

2011-10-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::Connection: Add UnixFDList call() method overloads.

	* gio/src/dbusconnection.{ccg,hg}: Add cancellable and
	non-cancellable UnixFDList call() methods.

2011-10-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	VariantContainerBase: Add create_maybe().

	* glib/src/variant.{ccg,hg}: Add a create_maybe() method because it
	was discussed on the mailing list.  Clearly the variant classes are
	not intended for general use.  However, this method is added just
	so that the API is more complete.

2011-10-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	DataInputStream: Add read_line_utf8() and read_line_finish_utf8().

	* gio/src/datainputstream.hg: Add the two methods and their overloads
	using the new gmmproc parameter reordering, optional parameter
	signaling and output parameter signaling functionality.  It's not
	difficult to write the _INITIALIZATION and _WRAP_METHOD macros but
	they may not be readily understandable.  I think they are, but I could
	be wrong.

2011-10-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_METHOD: Use {OUT} instead of {RET} for output params.

	* tools/pm/Output.pm: Use {OUT} instead of {RET} to signify that a
	parameter is an output parameter because it is probably more
	intuitive.
	* tools/m4/convert_base.m4 (_INITIALIZE): Don't quote the C return
	because otherwise the macros in it aren't expanded when the macro is
	used.  This could be because of the recent M4 changes in the previous
	to the last commit.

2011-10-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	ApplicationCommandLine: Add the get_platform_data() method.

	* gio/src/applicationcommandline.hg:

2011-10-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_METHOD: Allow return types to have commas.

	* tools/pm/WrapParser.pm (string_split_commas): Modify so that when
	splitting by commas, '<' and '>' are taken into account by levels as
	is done with '(' and ')'.  This so that if a return type in a
	_WRAP_METHOD has a comma (which is possible, e.g. with std::map<>) the
	return type is not split incorrectly.
	(read_file): Modified so that '<' and '>' are tokens by which to
	split.
	* tools/pm/Output.pm (output_wrap_meth): Add `' around the return type
	when calling the _METHOD() and _STATIC_METHOD() M4 macros so that
	commas don't split the return type into more than one argument.
	* tools/m4/method.m4: Do the same (for the return type) in _METHOD()
	and _STATIC_METHOD() when calling the _CONVERT() macro for the same
	reason as above.

	Bug #661401

2011-10-10  José Alburquerque  <jaalburqu@svn.gnome.org>

	SimpleAction: Wrap the signals and properties.

	* gio/src/simpleaction.hg: Wrap the signals using the
	no_default_handler option because there are no signal members exposed
	in the GSimpleActionClass struct (in fact, there is no
	GSimpleActionClass struct).  Also wrap the properties.

2011-10-10  José Alburquerque  <jaalburqu@svn.gnome.org>

	Application, {,Simple}Action{,Group}: Update @newins{}'s.

	* gio/src/action.hg:
	* gio/src/application.hg:
	* gio/src/simpleaction.hg:
	* gio/src/simpleactiongroup.hg:

	* gio/src/applicationcommandline.hg: Add bug URL to a TODO.

2011-10-10  José Alburquerque  <jaalburqu@svn.gnome.org>

	ApplicationCommandLine: Update a TODO.

	* gio/src/applicationcommandline.hg:

2011-10-09  José Alburquerque  <jaalburqu@svn.gnome.org>

	Re-add Application and related class so they can be finished.

	* gio/giomm.h:
	* gio/src/action.ccg:
	* gio/src/action.hg:
	* gio/src/actiongroup.ccg:
	* gio/src/actiongroup.hg:
	* gio/src/application.ccg:
	* gio/src/application.hg:
	* gio/src/applicationcommandline.ccg:
	* gio/src/applicationcommandline.hg:
	* gio/src/filelist.am:
	* gio/src/simpleaction.ccg:
	* gio/src/simpleaction.hg:
	* gio/src/simpleactiongroup.ccg:
	* gio/src/simpleactiongroup.hg:

2011-09-27  Murray Cumming  <murrayc@murrayc.com>

	NEWS: mention stability

2011-09-27  Krzesimir Nowak  <qdlacz@gmail.com>

	Fix h2def.py not parsing function starting with G_GNUC_* macros.

	* tools/defs_gen/h2def.py: Strip some G_GNUC_* macros that are known
	to be placed before return type of function prototype.
	Fixes bug #660225.

2011-09-27  Murray Cumming  <murrayc@murrayc.com>

	2.30.0

2011-09-27  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus::Server: Add constructors.

	* gio/src/dbusserver.[hg|ccg]: Uncomment the constructors now that bug #639478
	has been fixed, though nobody has tried to use this yet.

2011-09-27  Murray Cumming  <murrayc@murrayc.com>

	Regenerated .defs files.

	* glib/src/glib_functions.defs:
	* glib/src/gobject_functions.defs:
	* glib/src/gmodule_functions.defs:
	* gio/src/gio_functions.defs: Regenerated with h2defs.py, though see
	bug #660225 .
	* glib/src/datetime.hg: Added an m4 conversion that is now necessary.

2011-09-26  Murray Cumming  <murrayc@murrayc.com>

	Remove Application and friends, because they are still not ready.

	* gio/src/action.[hg|ccg]:
	* gio/src/actiongroup..[hg|ccg]:
	* gio/src/application.[hg|ccg]:
	* gio/src/applicationcommandline..[hg|ccg]:
	* gio/src/simpleaction..[hg|ccg]:
	* gio/src/simpleactiongroup.[hg|ccg]: Removed.
	* gio/src/filelist.am:
	* goi/giomm.h: Do not mention them.
	See bug #637445#c29

2011-09-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	Action, ActionGroup: Wrap virtual functions.

	* gio/src/gio_vfuncs.defs: Add virtual function definitions for the
	Action and ActionGroup classes.
	* gio/src/action.hg:
	* gio/src/actiongroup.hg: Wrap the virtual functions.
	* tools/m4/convert_gio.m4: Correct a VariantType return conversion.

2011-09-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add SimpleActionGroup.

	* gio/src/simpleactiongroup.{ccg,hg}:
	* gio/src/filelist.am: Add sources and include them in the build file
	list.
	* tools/m4/convert_gio.m4: Add necessary conversions.
	* gio/src/simpleaction.hg: Added class doc title.

2011-09-22  Krzesimir Nowak  <qdlacz@gmail.com>

	Don't use obsolete macros.

	* autogen.sh: Warn about everything during autoreconf.
	* configure.ac: Replaced obsolete macros with their modern counterparts.
	* build/c_std.m4: Ditto.
	* build/cxx.m4: Ditto.
	* build/cxx_std.m4: Ditto.
	* build/sun.m4: Ditto.
	* build/macros.m4: Ditto. Removed all unused macros and renamed to...
	* build/debug.m4: ...this, because only macro for debugging refcount has
	left.
	* build/glibmm_check_perl.m4: Deleted. None of the macros there was used.
	* build/dk-feature.m4: Use AS_VAR_IF.
	* Makefile.am: Removed distribution of deleted m4 file.

2011-09-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	SimpleAction: Add create() methods.

	* gio/src/simpleaction.hg: Add two forgotten create methods for the
	class.  Also filed bug #659783 about not being able to wrap the
	signals.

2011-09-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add SimpleAction, an implementation of the Action interface.

	* gio/src/simpleaction.{ccg,hg}:
	* gio/src/filelist.am: Add the sources and include them in the list of
	files that should be processed.

	* tools/extra_defs_gen/generate_defs_gio.cc: Add G_SIMPLE_ACTION_TYPE
	to the list of types for which properties and signals should be
	generated.
	* gio/src/gio_signals.defs: Regenerate with above to get the
	properties and signals of new class.

2011-09-20  José Alburquerque  <jaalburqu@svn.gnome.org>

	ActionGroup: Wrap remaining methods.

	* gio/src/actiongroup.hg: Add the get_action_parameter_type(),
	get_action_state_type(), get_action_state_hint(), and
	get_action_state() methods which were TODO's.

2011-09-20  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add Action class wrapping GAction.

	* gio/src/action.{ccg,hg}:
	* gio/src/filelist.am: Add the new sources wrapping the methods and
	signals of GAction and include them in the list of files to be built.

	* tools/extra_defs_gen/generate_defs_gio.cc: Add G_TYPE_ACTION to
	the list of types for which signals and properties should be
	generated.
	* gio/src/gio_signals.defs:
	* gio/src/gio_methods.defs: Regenerate to get the new methods and
	properties being wrapped.

	* gio/src/gio_extra_objects.defs: Add Action to the list of extra
	objects so gmmproc's documentation generation does not produce
	warnings because of it.  Also added DBusNodeInfo and Proxy.

	* tools/m4/convert_gio.m4: Alphabetized the conversion by groups
	pertaining to types.  Removed the Variant return conversions which
	take copies.
	* glib/src/variant.hg: Moved the conversions here because they are
	specific to the methods in this class, specifically get_child() and
	get().

2011-09-19  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: DocParser: Correct the removal of link tags.

	* tools/pm/DocsParser.pm (convert_tags_to_doxygen): Make the matching
	of the characters of a link tag not greedy so that the first
	occurrence of the final '>' is accepted in a match instead of a
	possible later one pertaining to a different tag altogether. Also
	translate '|[' and ']|' to '@code' and '@endcode' respectively.

	Bug #650544

2011-09-06  Murray Cumming  <murrayc@murrayc.com>

	2.29.13

2011-09-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant< std::vector<std::string> >: Ensure correct creation.

	* glib/src/variant.ccg (Variant< std::vector<std::string> >::create):
	Use g_variant_new_bytestring_array() to create the variant instead of
	a builder to avoid an unknown bug.

	Bug #657030 (Aurimas Černius)

2011-09-06  Murray Cumming  <murrayc@murrayc.com>

	Missing parts of the last commit

2011-09-06  Murray Cumming  <murrayc@murrayc.com>

	giomm: Variant< vector<std::string> > (array of bytestrings): Fixes.

	* glib/src/variant.ccg: create(): Use VariantType::to_string.c_str() instead
	of reinterpret_cast. I have no idea why we ever used reinterpret_cast.
	* tests/glibmm_variant/main.cc: Add a simple test for this VariantType
	specialization, though it still fails.
	Bug #657030 (Aurimas Černius)

2011-09-06  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Correct handling of constversion etc. in _WRAP_METHOD.

	* tools/pm/WrapParser.pm: The parameters refreturn, errthrow, and
	constversion in _WRAP_METHOD was applied also to following instances
	wrapping the same C function. Bug #657751, comment 5.

2011-09-01  Krzesimir Nowak  <qdlacz@gmail.com>

	Updated .gitignore.

	* .gitignore: Ignore datetime.{cc,h} and timezone.{cc,h}.

2011-08-31  Murray Cumming  <murrayc@murrayc.com>

	2.29.12

2011-08-25  Chun-wei Fan  <fanchunwei@src.gnome.org>

	Visual Studio Projects Updates

	Made the VS 2010 solution to have Windows-style EOL so that it will
	function correctly

2011-08-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	TimeZoneMonitor: Remove as was done in glib.

	* gio/src/filelist.am:
	* gio/src/timezonemonitor.{ccg,hg}: Remove sources and the mention
	from the build.
	* glib/src/timezone.hg (refresh_local): Remove this method as the
	function that it wraps was also removed from glib.
	* tools/extra_defs_gen/generate_defs_gio.cc
	(G_TYPE_TIME_ZONE_MONITOR): Remove this GType from the list of types
	for which properties and signals are generated.

	See the glib commit:
	http://git.gnome.org/browse/glib/commit/?id=5b68b49b2072c371c72ee96175e3d6a727eb5e8b

2011-08-22  Murray Cumming  <murrayc@murrayc.com>

	configure: Require the latest libsigc++.

	* configure.ac: Because our tests require it.

2011-08-03  Murray Cumming  <murrayc@murrayc.com>

	giomm: Application: local_command_line_vfunc(): Use references for parameters.

	* gio/src/application.hg: Use references instead of pointers, now that
	we know how these paramters are actually used. See bug #643478.

2011-08-03  Murray Cumming  <murrayc@murrayc.com>

	Add back Gio::Application and friends so we can try to finish them.

	This reverts commit c446268b44f3595431ba6f535dc297557c6097e0.

2011-07-25  Murray Cumming  <murrayc@murrayc.com>

	2.29.11

2011-07-19  Murray Cumming  <murrayc@murrayc.com>

	Add reftpr_sigc_bind test case.

	* tests/glibmm_refptr_sigc_bind/main.cc:
	* tests/Makefile.am: Add a new test case from Kjell Ahlstedt, to test a fix
	in libsigc++. See bug #564005#c14.

2011-07-19  Murray Cumming  <murrayc@murrayc.com>

	Add h2defs.py and docextract_to_xml.py, removed from pygboject.

	* tools/defs_gen/definitions.py:
	* tools/defs_gen/defsparser.py:
	* tools/defs_gen/docextract.py:
	* tools/defs_gen/docextract_to_xml.py:
	* tools/defs_gen/h2def.py:
	* tools/defs_gen/scmexpr.py: Add h2def.py and docextract_to_xml.py,
	and any .py files that they use, because they were removed from pygobject.
	* tools/Makefile.am: Add these to EXTRA_DIST.

2011-07-19  Murray Cumming  <murrayc@murrayc.com>

	AppInfo: Add launch() taking one file, and launch_uri() taking one URI.

	* gio/src/appinfo.[hg|ccg]: Add launch() overloads that take a single
	Gio::File, for convenience.
	Also add launch_uri() to take a single URI.

2011-07-18  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _STRUCT_NOT_HIDDEN: Make macro local to class only.

	* tools/m4/class_shared.m4 (STRUCT_NOT_HIDDEN): Undefine the boolean
	variable that signals that the typedefs generated by gmmproc should
	not be generated once the _STRUCT_NOT_HIDDEN macro is used so that it
	doesn't affect all the classes defined in a file.

2011-07-12  Murray Cumming  <murrayc@murrayc.com>

	AppInfo::launch(): Correct the parameter type.

	* gio/src/appinfo.hg: g_app_info_launch() takes a GList of GFile, not of
	strings. Also use a vector instead of a ListHandle, as per our new convention.
	It is acceptable to change this API/ABI because this method could never
	possibly have been used by any application without crashes, so this can't
	make anything worse.
	Also add an overload without the launch_context parameter, using the new {?}
	syntax.
	Luckily we did not implement the vfuncs, or maybe we disabled them because of
	the crashes.

2011-07-12  Murray Cumming  <murrayc@murrayc.com>

	AppInfo::launch_uris(): Corrected (with deprecation) and add overload.

	* gio/src/appinfo.[hg|ccg]: Deprecate the existing method and add one that
	takes a C++ AppLaunchContext instead of a GAppLaunchContext*.
	Also add an overload with no AppLaunchContext, using the new {?} syntax.

2011-07-06  Murray Cumming  <murrayc@murrayc.com>

	2.29.10

2011-06-29  Murray Cumming  <murrayc@murrayc.com>

	Add -Wformat-security to the --enable-warnings=fatal build.

	* configure.ac: This seems to be popular now.

2011-06-19  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add TimeZoneMonitor.

	* tools/extra_defs_gen/generate_defs_gio.cc: Add the
	G_TYPE_TIME_ZONE_MONITOR type to the list of types for which signals
	and properties should be generated.
	* gio/src/gio_signals.defs:
	* gio/src/gio_signals.defs.patch: Regenerate the signal and properties
	defs file and add a patch file so it does not have to be edited
	manually.
	* gio/src/gio_methods.defs:
	* gio/src/gio_methods.defs.patch: Regenerate the methods defs file and
	add a patch file as above.

	* gio/src/filelist.am:
	* gio/src/timezonemonitor.{ccg,hg}: Add the sources and mention them
	in the build so they are processed.
	* tools/m4/convert_gio.m4: Add a necessary conversion.

2011-06-16  José Alburquerque  <jaalburqu@svn.gnome.org>

	DateTime, TimeZone: Use classes without Glib::RefPt<>.

	* glib/src/datetime.hg:
	* glib/src/timezone.hg: Since these classes are immutable (like
	Glib::VariantBase), remove the need to use these classes with
	Glib::RefPtr<> by using the _CLASS_OPAQUE_COPYABLE macro instead of
	the _CLASS_OPAQUE_REFCOUNTED macro.  This should make using the
	classes a little less tedious.
	* tools/m4/convert_glib.m4: Modify the corresponding conversions
	according to the above.

2011-06-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	DateTime: Add methods and create() methods not creating now instances.

	* glib/src/glib_functions.defs: h2def.py missed the g_date_time_add*()
	functions because they were preceded by an unknown macro, namely
	G_GNUC_WARN_UNUSED_RESULT, so temporarily removed the macros and
	regenerated this file to get the definitions for those functions.
	h2def.py will probably have to be modified to skip over those macros
	properly in the future.  Also corrected the
	g_date_time_[compare|hash|equal] definitions so that the functions
	could be wrapped as method members of DateTime.
	* glib/src/glib_functions.defs.patch: Added this patch file so future
	editing of the above file should not be necessary.
	* glib/src/datetime.hg: Added the missing create() and the rest of the
	methods.
	* tools/m4/convert_glib.m4: Added necessary conversions.

2011-06-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	TimeZone: Const corrections.

	* glib/src/timezone.hg: Correct the constness of the TimeZone for some
	methods.

2011-06-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	Increase the Glib requirement to 2.29.8.

	* configure.ac: The requirement was increased in the previous to the
	last commit but make sure it is shown clearly in the ChangeLog and in
	git.

2011-06-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	glibmm: Add TimeZone and partial DateTime classes.

	* glib/src/datetime.{ccg,hg}:
	* glib/src/timezone.{ccg,hg}:
	* glib/src/filelist.am: Add the new sources and mention them in the
	build structure so they are processed.
	* glib/src/glib_extra_objects.defs: Include object definitions of the
	new classes so there are no gmmproc warnings when parsing the docs.
	* tools/m4/convert_glib.m4: Add necessary conversions.

2011-06-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	glibmm: Regenerate the defs and xml doc files.

	* glib/src/glib_docs.xml:
	* glib/src/glib_enums.defs:
	* glib/src/glib_functions.defs:
	* glib/src/gobject_enums.defs:
	* glib/src/gobject_functions.defs: Regenerate with Glib 2.29.8 to get
	the new functions enums and docs.

	* configure.ac: Increase the Glib requirement to 2.29.8.

2011-06-14  Murray Cumming  <murrayc@murrayc.com>

	2.28.2

2011-06-13  Kalev Lember  <kalev@smartlink.ee>

	Removed doctooldir variable from pkgconfig files

	* glib/glibmm{,-uninstalled}.pc.in: Removed doctooldir variable now
	that the scripts are in mm-common.
	https://bugzilla.redhat.com/show_bug.cgi?id=712474

2011-06-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	m4 Macros: _INITIALZE: Modify so that $1 substitutes C++ type w/o &.

	* tools/m4/convert_base.m4 (_INITIALIZE): Changed the macro so that $1
	substitutes the C++ type without the final ampersand (&) for
	convenience.

2011-06-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Use '.' instead of '-' in parameter reordering.

	* tools/pm/Function.pm (parse_param): Use a '.' instead of a '-' to
	signify that the C++ parameter name should be used as the C parameter
	name to map the current C++ parameter to.

2011-06-09  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::Connection::emit_signal(): Say why convert empty strings.

	* gio/src/dbusconnection.ccg (emit_signal): Explain why empty strings
	are converted to NULL when passed to the C API.

2011-06-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::Connection::emit_signal(): Replace empty strings with NULL.

	* gio/src/dbusconnection.ccg (emit_signal): Pass NULL to the C
	function call where strings are empty allowing emitting signals to all
	listeners.

	Bug #645072 (Yannick Guesnet).

2011-06-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	M4 Macros: Rename the _INITIALIZER macro to _INITIALIZATION.

	* tools/m4/convert_base.m4 (_INITIALIZER): Rename the macro to
	_INITIALIZATION to be more consistent with the _CONVERSION macro.

2011-06-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_METHOD: Add the possibility of an output parameter.

	* tools/pm/Output.pm (output_wrap_meth): Modified to test if there is
	a parameter mapping in the current C++ function from the hypothetical
	C name 'RET' to a C++ parameter index.  If so, that parameter is
	treated as an output parameter.  This allows wrap statements such as:

	_WRAP_METHOD(static void get_finish(Glib::RefPtr<Connection>&
	conn{RET}, const Glib::RefPtr<AsyncResult>& res), g_bus_get_finish,
	errthrow
	)

	Where the 'conn' parameter is an output parameter.  The output
	parameter name and type are passed to the _STATIC_METHOD and _METHOD
	macros (along with the wrap line number).

	(convert_args_cpp_to_c): Modified to process the C++ parameters
	dealing with the possibility of an output parameter.

	* tools/pm/Function.pm: Typo.

	* tools/m4/method.m4 (_METHOD):
	(_STATIC_METHOD): Both modified to accept an optional output parameter
	name, type and wrap line number and if they exist to ensure that the
	output parameter is correctly set to the return of the C function.  To
	do that it uses the new _INITIALIZE macro.

	* tools/m4/convert_base.m4 (_INITIALIZER):
	(_INITIALIZE):  Add macros (similar to the _CONVERSION/_CONVERT
	macros) used to record how to initialize a C++ type from a C type and
	later to initialize an output parameter of the C++ type.  The
	_INITIALIZER macro has much the same syntax as the _CONVERSION macro.
	For example:

	_INITIALIZER(`Glib::RefPtr<Connection>&',`GDBusConnection*',
	`$3 = Glib::wrap($4)')

	Describes how to initialize a C++ reference to a Glib::RefPtr that
	contains a Gio::DBus::Connection from its corresponding C type.  $3
	represents the output parameter name and $4 represents the C return.

	The _INITIALIZE macro can then be appropriately used by the _METHOD
	and _STATIC_METHOD macros to initialize the output parameters passed
	to them by gmmproc.

2011-06-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_[CREATE|CTOR|METHOD]: Support parameter reordering.

	* tools/pm/Function.pm (param_mappings): Add a new hash member mapping
	C parameter names to C++ parameter indices.  The map is specified by
	appending a {name[?]} to the desired C++ parameter name in the C++
	method declaration.  A '-' in place of a C parameter name means to use
	the C++ parameter name.
	(parse_param): Modified to detect parameter mappings and set the
	appropriate mapping in the above new member.  No mappings occur if
	none are specified.
	* tools/pm/Output.pm (convert_args_cpp_to_c):
	(get_ctor_properties): Modified to use the new C param names to C++
	param indices mappings member above to allow reordering of parameters
	in the C++ method declaration.

2011-06-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	tools: Recursive whitespace cleanup in folder.

2011-06-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Do not use NULL for optional parameters or properties.

	* tools/pm/Output.pm (convert_args_cpp_to_c):
	(get_ctor_properties): Substitute 0 instead of NULL for optional
	parameters or properties.

2011-06-04  Murray Cumming  <murrayc@murrayc.com>

	Fix the build with --enable-warnings=fatal.

	* tests/glibmm_nodetree/main.cc: Comment out a set-but-not-used
	variable.

2011-06-01  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Use NULL for optional properties.

	* tools/pm/Output.pm(get_ctor_properties): Use NULL instead of
	static_cast<char*>(0) for properties that are optional as is done in
	convert_args_cpp_to_c().

2011-06-01  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_[CREATE|CTOR]: Add optional parameter functionality.

	* tools/pm/Function.pm (new_ctor): Modified to initialize the new
	param_optional and possible_args_list members.
	* tools/pm/FunctionBase.pm (args_names_only): Typo.
	(get_declaration): Make sure that spacing is correct if the
	declaration is a constructor's declaration.
	* tools/pm/Output.pm (output_wrap_meth): Store the number of possible
	declarations instead of computing it each time in the for loop.
	(output_wrap_ctor):
	(output_wrap_create): Modified as output_wrap_meth() to loop through
	the list of the possible combination of arguments to output
	convenience overloads for the constructors and create() methods.
	(get_ctor_properties): Modified as convert_args_cpp_to_c() to accept
	an optional index specifying which argument list out of the possible
	ones to use and to insert a static_cast<char*>(0) for optional
	parameters not in the specified argument list.
	* tools/m4/class_gobject.m4: Added a blank line after the create()
	methods definitions.

2011-05-31  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _WRAP_METHOD: Add optional parameter functionality.

	* tools/pm/Function.pm (param_optional): Add new member bool array to
	represent which parameters are optional.
	(possible_args_list): Add new member string array containing a list of
	the possible argument combination based on existing optional
	parameters.
	(possible_args_list): Added recursive function to generate the list of
	possible parameter combinations.  The first in the list (the zeroth
	element) always includes all the paramters.
	(new): Modified to initialize the new members above.
	(parse_param): Modified to see if parameters are optional by checking
	if the name ends with '{?}'.
	* tools/pm/FunctionBase.pm (args_names_only):
	(args_types_and_names):
	(args_types_and_names_with_default_values): Modified to accept an
	optional index representing the desired argument list to use out of
	the possible combinations.
	(get_declaration): New subroutine returning any of the possible
	declarations based on optional arguments.
	(get_num_possible_args_list): New subroutine returning the number of
	possible combination of arguments.
	* tools/pm/Output.pm (output_wrap_meth): Modified to loop through the
	possible arguments list and generate a _METHOD or _STATIC_METHOD for
	all the possible combination of arguments.
	(convert_args_cpp_to_c): Modified as above to accept an optional index
	parameter representing the argument list for which to generate
	_CONVERT macros.  For optional arguments a NULL is placed in the C
	function call.

2011-05-27  Kjell Ahlstedt  <kjellahl@src.gnome.org>

	gmmproc: Protect documentation with m4 quotes.

	* tools/pm/DocsParser.pm:
	* tools/pm/Output.pm: Method documentation read from xxx_docs.xml, and
	property documentation read from xxx_signals.defs are better protected with
	m4 quotes and __BT__ and __FT__ macros in the input to the m4 macro
	processor. Bug #603930

2011-05-24  Olav Vitters  <olav@vitters.nl>

	Use tar-ustar instead of tar-pax to ensure OpenBSD compatibility

2011-05-09  Murray Cumming  <murrayc@murrayc.com>

	2.28.1

2011-05-09  Murray Cumming  <murrayc@murrayc.com>

	Correct ChangeLog

2011-05-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	Extra Defs Tool: Only generate properties that the GType owns.

	* tools/extra_defs_gen/generate_extra_defs.cc: Modify the extra defs
	generation tool to generate properties that the given GType owns.
	g_object_interface_list_properties() includes all properties, even the
	properties of possible base classes, but those properties should be
	generated for the base classes and not for a derived GType.

2011-05-05  Kalev Lember  <kalev@smartlink.ee>

	gmmproc: Put guards around generated includes in wrap_init.cc

	* tools/generate_wrap_init.pl.in: Store include filenames in a hashmap
	(key: filename, value: cppname) so it is possible to print
	_DISABLE_DEPRECATED and G_OS_WIN32 guards around them. Bug #649182

2011-05-03  Fan, Chun-wei  <fanc999@ahoo.com.tw>

	Update the VS 2008 project files.

	* MSVC_Net2008/giomm/giomm.vcproj:
	* MSVC_Net2008/glibmm/glibmm.vcproj: Mention new source files.

2011-05-03  Fan, Chun-wei  <fanc999@ahoo.com.tw>

	Update the VS 2010 project files.

	* MSVC_Net2010/giomm/giomm.vcxproj:
	* MSVC_Net2010/giomm/giomm.vcxproj.filters:
	* MSVC_Net2010/glibmm/glibmm.vcxproj:
	* MSVC_Net2010/glibmm/glibmm.vcxproj.filters: Mention new source files.

2011-05-03  Fan, Chun-wei  <fanc999@ahoo.com.tw>

	Update the VS 2005 project files.

	* MSVC_Net2005/giomm/giomm.vcproj:
	* MSVC_Net2005/glibmm/glibmm.vcproj: Mention new source files.

2011-05-03  Kalev Lember  <kalev@smartlink.ee>

	gmmproc: Factored some copy-pasted code out to a common function

	* tools/generate_wrap_init.pl.in: Added print_with_guards() subroutine
	and replaced all _DISABLE_DEPRECATED and G_OS_WIN32 guard printing with
	calls to print_with_guards().

2011-05-03  Volker Grabsch  <bugzilla.gnome.org@v.notjusthosting.com>

	Examples build: Use the GLIB_COMPILE_SCHEMAS variable.

	* examples/Makefile.am: Instead of hard-coding glib-compile-schemas.
	This was an issue in cross-toolchain environments.
	Bug #648485.

2011-05-02  Kalev Lember  <kalev@smartlink.ee>

	Gio::DBus::Message: Fixed includes for WIN32

	* gio/src/dbusmessage.hg: Added G_OS_UNIX guards around unixfdlist.h
	include. Bug #649168

2011-04-28  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: GtkDefs::split_tokens() uses split() instead of substr().

	* tools/pm/GtkDefs.pm: GtkDefs::split_tokens() splits the string with
	split() instead of substr(). substr() can be very inefficient when splitting
	a utf8 string. Bug #644037

2011-04-06  Murray Cumming  <murrayc@murrayc.com>

	NEWS: fix typo

2011-04-06  Murray Cumming  <murrayc@murrayc.com>

	Improved NEWS

2011-04-06  Murray Cumming  <murrayc@murrayc.com>

	Minor documentation improvements.

	* gio/src/proxy.hg:
	* gio/src/proxyaddress.hg:
	* gio/src/proxyresolver.hg:
	* gio/src/socketcontrolmessage.hg:
	* gio/src/unixcredentialsmessage.hg:
	* gio/src/unixfdlist.hg:
	* gio/src/unixfdmessage.hg: Added these to NetworkIO doxygen group.
	* glib/glibmm.h: Mention Gio::Settings.

2011-04-06  Murray Cumming  <murrayc@murrayc.com>

	Fix the ChangeLog

2011-04-06  Murray Cumming  <murrayc@murrayc.com>

	DBus docs: Add a descripton for they doxygen group.

	* gio/src/dbusconnection.hg: Expand the defgroup doxygen comment block.

2011-04-05  Murray Cumming  <murrayc@murrayc.com>

	2.28.0

2011-04-05  Murray Cumming  <murrayc@murrayc.com>

	DBusServer: Add overview documentation.

	* gio/src/dbusserver.hg: Based on my documentation patch for GDBusServer
	in bug #646425.

2011-04-04  Murray Cumming  <murrayc@murrayc.com>

	Update a TODO

2011-04-04  Murray Cumming  <murrayc@murrayc.com>

	ThemedIcon: Remove a property as suggested by a TODO.

	* gio/src/themedicon.hg: The name property is write-only and construct-only
	so we should not have any API for it.
	Noticed by Kjell Ahlstedt.

2011-04-04  Murray Cumming  <murrayc@murrayc.com>

	Gio::Settings: Really add list_schemas().

	* gio/src/gio_others.defs: Add g_settings_list_schemas(), though we do not
	actually use this defnition yet. See below. This must be hand-written
	because h2defs.py gets confused by the return type.
	* gio/src/settings.[hg|ccg]: list_schemas(): Make this static and hand-code
	it because gmmproc is confused by the declaration when it is static.

2011-04-02  Murray Cumming  <murrayc@murrayc.com>

	Fixed the ChangeLog

2011-04-02  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus examples: Renamed one and removed one.

	* examples/dbus/server.cc: Rename this to server_without_bus.cc to make its
	purpose clearer. This is not the common case. It is for private peer-to-peer
	connections not involving the usual session or system buses, or any bus
	for that matter. Meaning, for instance, that it does not assign names or
	provide introspection, I think.
	* examples/dbus/peer.cc: Removed this because it seems like just a
	complicated version of the server_without_bus example, and this is not in sync
	with the C versoin. Well, we should probably add a client for the server
	example.

2011-04-02  Murray Cumming  <murrayc@murrayc.com>

	Fix compiler warnings.

2011-04-02  Murray Cumming  <murrayc@murrayc.com>

	Slight cleanup to D-Bus example code.

	* examples/dbus/server.cc:
	* examples/dbus/session_bus_service.cc: Remove code to handle the now
	non-existant GetStdOut D-Bus method. That code was left over from an earlier
	version of an example.

2011-04-02  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus::NodeInfo::lookup_interface(): Add a method overload with no name.

	* gio/src/dbusintrospection.[hg|ccg]: Add a lookup_interface() method overload
	that just returns the first interface, avoiding the need to specify the name
	when there is only one interface. The C API will not do this itself:
	See bug #646417.
	* examples/dbus/peer.cc:
	* examples/dbus/server.cc:
	* examples/dbus/session_bus_service.cc: Use the new method to simplify the
	code slightly.

2011-04-02  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus::Connection: Added a register_method() overload with no vtable.

	* gio/src/dbusconnection.[hg|ccg]: This makes sense now that the C API's
	documentation was improved in bug #646419.

2011-04-01  Murray Cumming  <murrayc@murrayc.com>

	Added a simple example of a D-Bus session bus service.

	* examples/dbus/session_bus_service.cc: This uses Gio::DBus::own_name().
	* examples/Makefile.am: Mention the new test.
	* examples/dbus/server.cc: Mention the return (out) value for the GetTime
	method here too, and catch an exception.

2011-04-01  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus: Minor API changes.

	* gio/src/dbusconnection.[hg|ccg]: register_object(), register_subtree():
	Take the VTable by reference, not pointer. register_object() can take a NULL
	but that needs documentation (see the bug mentioned) and a future method
	overload.
	* gio/src/dbusmethodinvocation.ccg: get_parameters(): Return a
	VariantContainerBase instead of taking a VariantBase output parameter,
	because this is always a tuple. Well, I think so: See the bug mentioned.
	* gio/src/dbusmethodinvocation.hg: return_value(): Take a VariantContainerBase
	instead of a VariantBase, because this is always a tuple.
	return_gerror(), return_error_literal(): Rename them both to return_error().
	* glib/src/variant.hg: VariantContainerBase::create_tuple(): Add a method
	overload that takes a single VariantBase, for convenience, so that applications
	don't need to create a single-item vector.
	* examples/dbus/busserver.cc: Adapted.
	* examples/dbus/busserver.cc: Rename to server.cc and actually implement it,
	though I am currently confused about whether this server's object should be
	available on an existing bus. Maybe we should use Gio::DBus::own_name()
	instead of Gio::DBus::Server.

2011-04-01  Murray Cumming  <murrayc@murrayc.com>

	Code style change.

2011-04-01  Murray Cumming  <murrayc@murrayc.com>

	Rename a D-Bus client example.

	* examples/dbus/userbus.cc: Rename to client_bus_listnames.cc to make it
	more obvious what it does.

2011-04-01  Murray Cumming  <murrayc@murrayc.com>

	Code style improvement

2011-03-31  Murray Cumming  <murrayc@murrayc.com>

	DBusProxy: Rename type_map_changed_properties to MapChangeProperties.

	* gio/src/dbusproxy.[hg|ccg]: Use our normal convention for container
	typedefs.

2011-03-30  Murray Cumming  <murrayc@murrayc.com>

	Use the latest mm-common.

	* configure.ac: Require the latest version.
	* doc/Makefile.am: Don't specify the mm-common .pl files to distribute
	because mm-common now does this automatically.

2011-03-29  Murray Cumming  <murrayc@murrayc.com>

	2.27.99.2

2011-03-29  Murray Cumming  <murrayc@murrayc.com>

	Variant: Rename get(index) to get_child(index).

	* glib/src/variant.[hg|ccg]: Rename all get() methods that return children
	to get_child() to make the API clearer and to avoid ambiguity with get()
	methods that return the underlying type instead.
	* examples/dbus/peer.cc:
	* examples/dbus/userbus.cc:
	* tests/glibmm_variant/main.cc: Adapted.
	https://bugzilla.gnome.org/show_bug.cgi?id=644207#c7
	(Yannick Guesnet)

2011-03-29  Murray Cumming  <murrayc@murrayc.com>

	FileUtils: Correct my previous commit.

	* glib/src/fileutils.ccg:
	* glib/src/iochannel.ccg: Do not create a ustring instead of a std::string.

2011-03-29  Murray Cumming  <murrayc@murrayc.com>

	Use the utility functions for creating strings.

	* gio/src/dbuserrorutils.ccg:
	* gio/src/dbusownname.ccg:
	* gio/src/dbusutils.ccg:
	* gio/src/dbuswatchname.ccg:
	* glib/src/fileutils.ccg:
	* glib/src/iochannel.ccg:
	* glib/src/markup.ccg:
	* glib/src/variant.ccg: Use convert_const_gchar_ptr_to_ustring() and
	convert_const_gchar_ptr_to_stdstring(), simplifying code and sometimes
	avoiding crashes with NULL const char*.

2011-03-29  Murray Cumming  <murrayc@murrayc.com>

	Variant<std::string>::get(): Correct my custom implementation.

	* glib/src/variant.ccg: Really call g_variant_get_bytestring().

2011-03-29  Murray Cumming  <murrayc@murrayc.com>

	ChangeLog improvement

2011-03-29  Murray Cumming  <murrayc@murrayc.com>

	Variant: Move constructor definitions into the .cc file.

	* glib/src/variant.[hg|ccg]: The implementations of constructors for
	template specializations do not need to be inline. This lets us fix them
	later without requiring recompilation of applications.

2011-03-29  Murray Cumming  <murrayc@murrayc.com>

	Variant: Really declare the cast_dyamic() specialization for ustring.

	* glib/src/variant.[hg|ccg]: Mention the specialization in the .h file instead
	of just in the .ccg file.
	Also write a custom Variant<std::string>::get() implementation because this
	can be used for types other than just bytestring.
	* tests/glibmm_variant/main.cc: Add tests for the new casts.

2011-03-29  Murray Cumming  <murrayc@murrayc.com>

	Whitespace changes

2011-03-29  Krzesimir Nowak  <qdlacz@gmail.com>

	ArrayHandle: Make it compilable with MSVC 2005, 2008, 2010.

	* glib/glibmm/arrayhandle.h: Put operator std::container methods
	definitions inside class template definition. Also added decrementation
	operators for ArrayHandleIterator for MSVC 2005.

2011-03-28  Murray Cumming  <murrayc@murrayc.com>

	Really correct the ChangeLog

2011-03-28  Murray Cumming  <murrayc@murrayc.com>

	Correct the ChangeLog

2011-03-28  Murray Cumming  <murrayc@murrayc.com>

	VariantType: Capitalize the standard types.

	* glib/src/varianttype.[hg|ccg]: Use, for instance VARIANT_TYPE_STRING instead
	of VariantTypeString. This seems more appropriate for a constant and is the
	style used by gtkmm's STOCK_* items, which this is based on.
	* glib/src/variant.ccg: Adapt.

2011-03-28  Murray Cumming  <murrayc@murrayc.com>

	VariantType: Capitalize the standard types.

	* glib/src/varianttype.[hg|ccg]: Use, for instance VARIANT_TYPE_STRING instead
	of VariantTypeString. This seems more appropriate for a constant and is the
	style used by gtkmm's STOCK_* items, which this is based on.
	* glib/src/variant.ccg: Adapt.

2011-03-28  Murray Cumming  <murrayc@murrayc.com>

	Variant: Add cast_dynamic<> specializations for strings.

	* glib/src/variant.[hg|ccg]: Add cast_dynamic() specializations for
	Vector<std::string> and Vector<Glib::ustring>, because this type seems
	appropriate for multiple types. For instance, see
	http://library.gnome.org/devel/glib/unstable/glib-GVariant.html#g-variant-get-string
	Thanks to Povietkin Konstantin.

2011-03-27  Murray Cumming  <murrayc@murrayc.com>

	2.27.99.1

2011-03-27  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus*: More use of VariantContainerBase.

	* gio/src/dbusconnection.hg:
	* gio/src/dbusinterfacevtable.hg: Correct the documentation.
	* gio/src/dbusproxy.[hg|cgg]: call(): Take a VariantContainerBase instead of
	a VariantBase.
	signal: Provide a VariantContainerBase instead of a VariantBase, though this
	is not documented as necessarily being a tuple, though it is multiple
	values.

2011-03-27  Murray Cumming  <murrayc@murrayc.com>

	Avoid use of NULL in C++

2011-03-27  Murray Cumming  <murrayc@murrayc.com>

	Balanced Tree: Clean up the documentation.

	* glib/src/balancedtree.hg: Use doxygen syntax.

2011-03-25  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus: Use VariantContainerBase for tuple Variants.

	* gio/src/dbusconnection.[hg|ccg]:
	* gio/src/dbusproxy.ccg.[hg|ccg]: call_sync(), call(), call_finish():
	Use VariantContainerBase, instead of VariantBase, for GVariants that are
	documented as being tuples. Because the type is known we can also use
	it as a simple return type instead of an output parameter.
	* tools/m4/convert_gio.m4: Added a necessary conversion.
	* examples/dbus/peer.cc:
	* examples/dbus/userbus.cc: Adapted. These already correctly assumed that
	the type should be VariantContainerBase.

2011-03-24  Murray Cumming  <murrayc@murrayc.com>

	2.27.99

2011-03-24  Murray Cumming  <murrayc@murrayc.com>

	Remove Gio::Application and friends for now because they are not finished.

	* gio/src/actiongroup.[hg|ccg]:
	* gio/src/application.[hg|ccg]:
	* gio/src/applicationcommandline.[hg|ccg]: Removed these temporarily
	because we removed Gtk::Application temporarily from gtkmm.
	See http://mail.gnome.org/archives/gtkmm-list/2011-March/msg00062.html

2011-03-24  Murray Cumming  <murrayc@murrayc.com>

	Regenerate the XML for the C API documentation.

	* gio/src/gio_docs.xml:
	* glib/src/glib_docs.xml: Regenerated with docextract_to_xml.py.

2011-03-24  Murray Cumming  <murrayc@murrayc.com>

	Gio: Remove SettingsBackend.

	* gio/src/settingsbackend.[hg|ccg]: Remove these because we do not know yet
	if implementing GSettings backends is useful or encouraged, and our wrapper
	is unimplemented, requiring an ABI break to fix it when adding the virtual
	methods.
	* gio/src/filelist.am: Remove mention of the files.
	* gio/src/settings.hg: Remove use of SettingsBackend here too. Unfortunately
	this might have been slightly useful but we cannot provide this API without
	freezing a SettingsBackend API.

2011-03-24  Murray Cumming  <murrayc@murrayc.com>

	Minor comment changes.

2011-03-24  Murray Cumming  <murrayc@murrayc.com>

	Another docs fix.

2011-03-24  Murray Cumming  <murrayc@murrayc.com>

	More minor documentation corrections.

	* gio/src/dbusauthobserver.hg:
	* gio/src/dbusconnection.hg:
	* gio/src/dbusmessage.hg:
	* gio/src/dbusmethodinvocation.hg:
	* gio/src/dbusproxy.hg:
	* gio/src/dbusserver.hg:
	* gio/src/dbussubtreevtable.hg:
	* glib/src/varianttype.hg: More fixes since the change from DBus* to DBus::.

2011-03-24  Murray Cumming  <murrayc@murrayc.com>

	Documentation: Change DBus to D-Bus.

	* glib/src/varianttype.hg: Use the correct name for D-Bus.
	I made the same change in the C documentation.

2011-03-24  Murray Cumming  <murrayc@murrayc.com>

	Variant: Improved the documentation, based on the C documentation.

	* glib/src/variant.hg: Also changed two methods to take std::string by
	const &.

2011-03-24  Murray Cumming  <murrayc@murrayc.com>

	Avoid a tarball dependency on mm-common.

	* configure.ac: Add a call to MM_CONFIG_DOCTOOL_DIR() telling it to
	copy the files locally and use them from there.
	* docs/Makefile.am: Dist the copied files, so that the build does not
	try to use the versions installed by mm-common.

2011-03-23  Murray Cumming  <murrayc@murrayc.com>

	2.27.98

2011-03-23  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus::InterfaceVTable: Make the tuple clearer.

	* gio/src/dbusinterfacevtable.[hg|ccg]: SlotInterfaceMethodCall: Change
	the VariantBase type to a VariantContainerBase, because this is a tuple,
	so people should get the children. This makes it more obvious.
	DBusInterfaceVTable_MethodCall_giomm_callback(): Adapt.
	Suggested by Michael Edwards.

2011-03-23  Murray Cumming  <murrayc@murrayc.com>

	Gio::DBus: Move InterfaceVTable and SubtreeVTable to their own files.

	* gio/src/dbusinterfacevtable.[hg|ccg]:
	* gio/src/dbussubtreevtable.[hg|ccg]: Moved code here from
	* gio/src/dbusconnection.[hg|ccg].
	* gio/src/filelist.am: Mention the new files.

2011-03-21  Murray Cumming  <murrayc@murrayc.com>

	Correct some range checks to use >= instead of just >.

	* glib/glibmm/stringutils.cc: Glib::Ascii::strtod():
	* glib/src/variant.[hg|ccg]: get(): Correct the range check. This would
	previously not have caught all wrong ranges.
	Thanks to Michael Edwards.

2011-03-21  Krzesimir Nowak  <qdlacz@gmail.com>

	Vectorutils, ArrayHandle: Check for NULL pointers.

	* glib/glibmm/vectorutils.[h|cc]: Don't crash in compute_array_size2, when
	NULL is passed - in that case just return 0. Also, array_to_vector method
	return empty vector in such case.
	* glib/glibmm/arrayhandle.[h|cc]: Set array_size to zero if passed array
	is NULL.
	* tests/glibmm_null_vectorutils/main.cc: New test for NULL arrays and lists
	for vectorutils.
	* tests/glibmm_null_containerhandle/main.cc: New test for NULL arrays and lists
	for containerhandles.
	* tests/Makefile.am: Added new tests to build.

	Spotted by Kalev Lember. Bug #645245.

2011-03-21  Murray Cumming  <murrayc@murrayc.com>

	Date: Document that some methods return *this, and why.

	* glib/src/date.hg: Thanks to Kjell Ahlstedt:
	http://mail.gnome.org/archives/gtkmm-list/2011-March/msg00049.html

2011-03-16  Murray Cumming  <murrayc@murrayc.com>

	2.27.97

2011-03-16  Murray Cumming  <murrayc@murrayc.com>

	Variant: Remove unncessary Glib:: namespace qualification.

	* glib/src/variant.[hg|ccg]
	* glib/src/variantiter.hg:
	* glib/src/varianttype.hg: Remove the unnecessary Glib:: namespace
	qualification in the API and documentation.

2011-03-16  Murray Cumming  <murrayc@murrayc.com>

	Gio::Variant: Add some get() method overloads.

	* glib/src/variant.[hg|ccg]: Variant<VariantBase>: Add a get(VariantBase&)
	along with the existing VariantBase get().
	VariantContainerBase: Added a VariantBase get() to match the existing
	get(VariantBase&). Both seem useful, particularly now that we can
	cast_dynamic them.

	VariantContainerBase::get() should maybe be renamed to get_child() too.

2011-03-16  Murray Cumming  <murrayc@murrayc.com>

	Changelog correction

2011-03-16  Murray Cumming  <murrayc@murrayc.com>

	Dbus::Proxy: properties_changed signal: Avoid namespace qualifiers in header.

	* gio/src/dbusproxy.[h|ccg]: Add a typedef to the .ccg file to help the
	compiler so we do not need the namespace qualifiers in the API.

2011-03-16  Yannick Guesnet  <yannick.guesnet@univ-rouen.fr>

	DBus::Proxy: Added signal properties_changed

	* gio/src/dbusproxy.hg: Add signal properties_changed.
	* gio/src/gio_signals.defs: Change the type of a parameter of
	signal g-properties-changed from "GStrv" to
	"const gchar * const *" to match the signal declaration.

2011-03-16  Murray Cumming  <murrayc@murrayc.com>

	Improve ChangeLog

2011-03-16  Murray Cumming  <murrayc@murrayc.com>

	Gio::Variant: Use _WRAP_METHOD() instead of hand-coding.

	* glib/src/variant.[hg|ccg]: Use _WRAP_METHOD() for two hand-coded methods.

2011-03-16  Yannick Guesnet  <yannick.guesnet@univ-rouen.fr>

	Variant: Added Variant<VariantBase>::get().

	* glib/src/variant.[ccg|hg]: Added Variant<VariantBase>::get().
	* tests/glibmm_variant/main.cc: Add some tests.

	This is useful because Variant<VariantBase> can be manipulate as other
	variants of type Variant<T>. This allow, for example, to define variants
	of type Variant<std::map<ustring, VariantBase> >.

2011-03-16  Yannick Guesnet  <yannick.guesnet@univ-rouen.fr>

	Variant: Add a cast operator.

	* gio/src/glib/src/variant.[ccg|hg]: Add a VariantBase::cast_dynamic()
	static method.
	* tests/glibmm_variant/main.cc: Add some tests.

	This is useful because VariantBase can and will be passed by value sometimes
	and DBus may have actual Variant types whose underlying type will not be
	known at compile time (this note was by Murray).

	Bug #644146

2011-03-16  Murray Cumming  <murrayc@murrayc.com>

	Added some TODOS

2011-03-16  Murray Cumming  <murrayc@murrayc.com>

	Fix missing doc-install.pl problem with the tarball build.

	* configure.ac: Remove the call to MM_CONFIG_DOCTOOL_DIR() so we do not copy
	the mm-common doc utils into glibmm and do not try to use local copies of
	them. This is what gtkmm and other modules do so it makes sense to do it now
	for glibmm now that glibmm is not the one that supplies these for pkg-config.
	This fixes bug #644829 (David Ronis) with the tarball build and
	Ubuntu launchpad bug
	https://bugs.launchpad.net/ubuntu/+source/glibmm2.4/+bug/735856
	(Krzysztof Klimonda)

	However, I can see the point of distributing copies in the tarball, which
	could make the tarball build not need mm-common at all. But if we want that
	then we should decide to do it for gtkmm and other modules too.

2011-03-15  Murray Cumming  <murrayc@murrayc.com>

	2.27.96

2011-03-15  Murray Cumming  <murrayc@murrayc.com>

	Do not install the doctool/*.pl scripts, such as doc-install.pl.

	* docs/Makefile.am: These were already installed by mm-common too, and are
	now discovered via pkg-config from mm-common-util, by the existing
	macro. No changes should be necessary to other modules, though autogen.sh
	might need to be run again.

2011-03-11  Murray Cumming  <murrayc@murrayc.com>

	FileInfo: Added more TODOs about using ustring instead of std::string.

	* gio/src/fileinfo.hg:
	See https://bugzilla.gnome.org/show_bug.cgi?id=615950#c7
	(Kjell Ahlstedt)

2011-03-11  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	Tell gmmproc that it reads and writes UTF-8 files.

	* tools/pm/GtkDefs.pm:
	* tools/pm/Output.pm:
	* tools/pm/WrapParser.pm: Add 'use open IO => ":utf8";'. Bug #644037

2011-03-09  Murray Cumming  <murrayc@murrayc.com>

	FileInfo: Add TODOs about using ustring instead of std::string.

	* gio/src/fileinfo.hg: The C documentation says that some of these are
	UTF-8.
	See https://bugzilla.gnome.org/show_bug.cgi?id=615950#c4
	(Kjell Ahlstedt)

2011-03-09  Murray Cumming  <murrayc@murrayc.com>

	DBus::InterfaceVTable: Use g_error_copy() where appropriate.

	* gio/src/dbusconnection.ccg: DBusInterfaceVTable_SetProperty_giomm_callback(),
	DBusInterfaceVTable_GetProperty_giomm_callback(): Copy the GError instead of
	just copying the pointer, because it will be freed along with the parent
	Glib::Error.
	Bug #644008 (Yannick.Guesnet)

2011-03-04  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application::open(file): Fix this.

	* gio/src/application.ccg: There should be one item, not two.

2011-03-04  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: open(): Added a single-file method overload.

	* gio/src/application.[hg|ccg]: Added an open() overload that takes a single
	Gio::File instead of a vector of Gio::Files.

2011-03-04  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Fix a signal definition.

	* gio/src/application.hg: The command-line signal returns an int, not a bool.

2011-03-04  Murray Cumming  <murrayc@murrayc.com>

	Added a TODO

2011-03-04  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Added get_environ().

	* gio/src/gio_others.defs: Add a hand-written definition for this, because
	h2defs.py ignores functions with this return type.
	* gio/src/applicationcommandline.hg: Wrap the function.

2011-03-04  Murray Cumming  <murrayc@murrayc.com>

	ApplicationCommandLine: Use std::string instead of ustring in some API.

	* gio/src/applicationcommandline.hg: The C documentation says that some
	return strings could be non-UTF-8.

2011-02-28  Murray Cumming  <murrayc@murrayc.com>

	Application: Wrap the local_command_line vfunc, though it is not finished.

	* gio/src/application.hg:
	* gio/src/gio_vfuncs.defs: Wrap the local_command_line vfunc, though see
	the bug report in the comment.

2011-02-25  Murray Cumming  <murrayc@murrayc.com>

	2.27.95

2011-02-24  Murray Cumming  <murrayc@murrayc.com>

	tests: Remove remaining use of std::cout.

	* tests/giomm_ioerror/main.cc:
	* tests/giomm_simple/main.cc: Hid some use of std::cout that I missed in my
	previous commit.

2011-02-24  Murray Cumming  <murrayc@murrayc.com>

	tests: Use EXIT_* for clarity.

	* tests/*.cc: Use EXIT_SUCCESS rather than 0 because I think that is clearer.

2011-02-24  Murray Cumming  <murrayc@murrayc.com>

	Actually run all tests, and check some failures.

	* tests/Makefile.am: Add all tests to TESTS so they are really run during
	make check, instead of just built.
	* tests/giomm_asyncresult_sourceobject/main.cc:
	* tests/giomm_ioerror/main.cc:
	* tests/giomm_simple/main.cc:
	* tests/glibmm_bool_arrayhandle/main.cc:
	* tests/glibmm_bool_vector/main.cc:
	* tests/glibmm_buildfilename/main.cc:
	* tests/glibmm_date/main.cc:
	* tests/glibmm_ustring_compose/main.cc:
	* tests/glibmm_valuearray/main.cc:
	* tests/glibmm_variant/main.cc:
	* tests/glibmm_vector/main.cc: Remove all use of std::cout by default,
	allowing it to be renabled by changing a line.
	Return (or) exit with EXIT_FAILURE after any use of std::cerr, so that
	make check can report it.

2011-02-24  Murray Cumming  <murrayc@murrayc.com>

	Restore the Gio::DBus::Error registration.

	* tools/generate_wrap_init.pl.in: Use a qualified C++ name for the key in
	the associated-array of exceptions. This seems to work, though it feels very
	hacky.

2011-02-24  Murray Cumming  <murrayc@murrayc.com>

	Rename Gio::DBus::DBusError to Gio::DBus::Error.

	* gio/src/dbuserror.hg: Rename the class to Error.
	* examples/dbus/busserver.cc: Adapated.
	* tests/giomm_ioerror_and_iodbuserror/main.cc: Added a test to check that
	both Gio::Error and Gio::DBus::Error are working.
	* tests/Makefile.am: Set TESTS, so that the test is actually run.
	We should add others to this too.

	This current fails, so I need to fix the problem in a subsequent commit.

2011-02-24  Murray Cumming  <murrayc@murrayc.com>

	Move Gio::DBusError to Gio::Dbus::DBusError.

	* tools/m4/base.m4: Added a SECTION_H_GERROR_PRIVATE section.
	* tools/m4/gerror.m4: Import the SECTION_H_GERROR_PRIVATE section.
	* gio/src/dbuserror.hg: Put this back into the DBus namespace.
	Push a custom friend declaration into the SECTION_H_GERROR_PRIVATE section,
	because the standard generated friend declaration would not specify the
	correct one.
	This still does not rename DBusError to DBus::Error, but this is a step on
	the way.
	* examples/dbus/busserver.cc: Adapated.

2011-02-23  Murray Cumming  <murrayc@murrayc.com>

	Bring back Gio::Error registration.

	* gio/src/error.[hg|ccg]: Move Gio::DBus::Error to
	* gio/src/dbuserror.[hg|ccg]: and temporarily rename it to Gio::DBusError
	because generate_wrap_init.pl.in is wrapping only on of Gio::Error and
	Gio::DBus::Error. Unfortunately, we need to fix the generation to handle
	this properly even when it is called Gio::DBus::DBusError.

2011-02-21  Krzesimir Nowak  <qdlacz@gmail.com>

	Added missing files.

2011-02-21  Murray Cumming  <murrayc@murrayc.com>

	Mark some new API.

	* glib/glibmm/miscutils.h: Add @newin{2,28} to the new build_filename()
	overloads.

2011-02-21  Fabrício Godoy  <skarllot@gmail.com>

	Extended build_filename() utility function

	Extended build_filename() to accept up to nine parameters.
	Added a new testcase in tests/glibmm_buildfilename.

2011-02-21  Murray Cumming  <murrayc@murrayc.com>

	Correct NEWS again.

2011-02-21  Murray Cumming  <murrayc@murrayc.com>

	Correct NEWS

2011-02-21  Murray Cumming  <murrayc@murrayc.com>

	2.27.94

2011-02-21  Murray Cumming  <murrayc@murrayc.com>

	Fix the build with --enable-warnigns=fatal.

	* glib/glibmm/arrayhandle.h: Remove some typename keywords to avoid this
	compiler warning:
	"error: using ‘typename’ outside of template"

2011-02-21  Krzesimir Nowak  <qdlacz@gmail.com>

	Added bool specialization for Glib::ArrayHandle.

	* glib/glibmm/arrayhandle.h: Added specialization for bool ArrayHandle.
	This is needed because std::vector<bool> is a specialization for which
	iterators does not return a reference to actual value it holds.
	* glib/glibmm/arrayhandle.cc: New file implementing destructor of
	bool ArrayHandle - the only method that is not inlined.
	* tests/glibmm_bool_arrayhandle/main.cc: New file implementing test
	checking if bool ArrayHandle actually works.
	* tests/Makefile.am: Added new test to build.

2011-02-18  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	OptionGroup: Fix build error, remove memory leak.

	* glib/src/optiongroup.ccg: Fix build error with --enable-warnings=fatal.
	Remove memory leak when the same OptionEntry is added twice.
	Bug #589197 (Hubert Figuiere)

2011-02-16  Murray Cumming  <murrayc@murrayc.com>

	Move the DBus classes into a Gio::DBus namespace.

	* gio/giomm.h:
	* gio/src/dbus*.[hg|ccg]
	* gio/src/error.hg: Rename all DBus* classes to remove the prefix, putting
	them in a Gio::DBus namespace.
	This required the use of the new _GMMPROC_EXTRA_NAMESPACE macro, to avoid
	generating a confused wrap_init.cc.
	Along the way, I removed unnecessary class predeclarations, instead including
	the relevant header, because that is more convenient for users of the API.
	* gio/src/dbuserror.[hg|ccg]: Renamed to dbuserrorutils.[hg|ccg] and
	renamed the Error namespace to ErrorUtils, to avoid a clash with the
	Gio::DBus::Error exception.
	* gio/src/filelist.am:
	* tools/m4/convert_gio.m4: Changed some conversions.
	* examples/dbus/busserver.cc:
	* examples/dbus/peer.cc:
	* examples/dbus/userbus.cc: Adapted.

	This is generally more organized. A prefix, instead of a namespace, looked
	generally wrong to C++ coders.

2011-02-16  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: Allow some classes to be in a sub-namespace.

	* tools/m4/class_shared.m4:
	* tools/generate_wrap_init.pl.in: Add a _GMMPROC_EXTRA_NAMESPACE(thenamespace)
	macro, so that wrap_init.cc will have the correct pre-declarations of the
	wrap_new() and get_type() functions.
	I am suprised that we have no other way to do this already, but I cannot
	find one, and this hack works.
	For instance, this lets use put some classes in a Gio::DBus namespace.

2011-02-15  Murray Cumming  <murrayc@murrayc.com>

	OptionGroup: Minor code style changes.

	* glib/src/optiongroup.[hg|ccg]: Use the explicit keyword and use a _
	suffix for member variables.

2011-02-15  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	OptionGroup: Add add_entry() that takes a slot with callback function.

	* glib/src/optiongroup.[hg|ccg]: Add add_entry() and add_entry_filename()
	that take a slot. Add protected option_arg_callback().
	An exception thrown by on_pre_parse() or on_post_parse() is propagated
	to the error argument of g_callback_pre_parse() or post_parse_callback().
	* glib/src/optionentry.hg: Add description of set_flags().
	* examples/options/main.cc: Add more OptionEntries and callback functions
	for parsing command option values.
	Bug 589197 (Hubert Figuiere)

2011-02-15  Murray Cumming  <murrayc@murrayc.com>

	Dealt with several TODOs.

	* gio/src/*.[hg|ccg]: Mostly just adding hand-coded documentation,
	and changing some new methods to use std::vector.

2011-02-15  Murray Cumming  <murrayc@murrayc.com>

	Update the .defs for signals and properties.

	* tools/extra_defs_gen/generate_defs_gio.cc: Mention more GDbus types.
	* tools/extra_defs_gen/generate_defs_glib.cc: Mention some types, though
	none have properties or signals.
	* gio/src/gio_signals.defs: Regenerated, though there are no new properties or
	signals.

2011-02-15  Murray Cumming  <murrayc@murrayc.com>

	Regenerate the XML of the C documentation.

	* gio/src/gio_docs.xml:
	* glib/src/glib_docs.xml: Regenerated with docextract_to_xml.py.

2011-02-15  Murray Cumming  <murrayc@murrayc.com>

	Require glib 2.28.0.

	* configure.ac: Update the version check.

2011-02-10  Murray Cumming  <murrayc@murrayc.com>

	Slight ChangeLog improvement.

2011-02-08  Murray Cumming  <murrayc@murrayc.com>

	Fix the make check build with --enable-warnings=fatal.

	* examples/options/main.cc: Comment-out unused method parameters.

2011-02-08  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	OptionGroup: An on_post_parse() override need not call the base class.

	* glib/src/optiongroup.[hg|ccg]: The C post_parse callback is a static
	protected member function, which performs all necessary post-parsing.
	OptionGroup::on_post_parse is a dummy function.
	* examples/options/main.cc: The on_pre_parse, on_post_parse, and on_error
	overrides don't call the base class functions. Bug 588988.

2011-02-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Add optional arguments custom_vfunc[_callback] to _WRAP_VFUNC.

	* tools/pm/Output.pm:
	* tools/pm/WrapParser.pm: Add handling of optional arguments
	custom_vfunc[_callback] in _WRAP_VFUNC. Bug 641165.

2011-02-02  Kjell Ahlstedt  <kjell.ahlstedt@bredband.net>

	gmmproc: Add optional arguments custom_vfunc[_callback] to _WRAP_VFUNC.

	* tools/pm/Output.pm:
	* tools/pm/WrapParser.pm: Add handling of optional arguments
	custom_vfunc[_callback] in _WRAP_VFUNC. Bug 641165.

2011-02-01  Murray Cumming  <murrayc@murrayc.com>

	2.27.93

2011-02-01  Krzesimir Nowak  <qdlacz@gmail.com>

	Vector utils: Corrected documentation and extended it bit.

	* glib/glibmm/vectorutils.h: Documented important parts of *Keeper classes
	and corrected examples in *Handler classes. The documentation mostly tries
	to explain memory management.

2011-01-30  Murray Cumming  <murrayc@murrayc.com>

	Vector utils: Added simple documentation.

	* glib/glibmm/vectorutils.h: Some simple documentation about the *Handler
	utility classes, though I need to correct the example code and explain the
	memory mangement when that is clear to me.

2011-01-28  Murray Cumming  <murrayc@murrayc.com>

	ArrayHandle, ListHandle, SListHandle: Document these as almost-deprecated.

	* glib/glibmm/arrayhandle.h:
	* glib/glibmm/listhandle.h:
	* glib/glibmm/slisthandle.h: Mention that we try not to use these now,
	though we cannot actually deprecate them yet without forcing other libraries
	such as pangomm to deprecate the methods that use them, which they cannot
	really do because they cannot just add a method overload without introducing
	ambiguity.

2011-01-27  Chris Kühl  <chrisk@openismus.com>

	Changed glib include to build cleanly with GLIB_DISABLE_SINGLE_INCLUDES.

	* glib/src/balancedtree.hg: Changed <glib/gtree.h> to <glib.h>.

2011-01-27  Murray Cumming  <murrayc@murrayc.com>

	Fixed code style.

2011-01-27  Krzesimir Nowak  <qdlacz@gmail.com>

	Added vectorutils.h.

	* glib/glibmm/vectorutils.[h|cc]: New files implementing an array, list,
	slist <-> std::vector convertions. It implements also a specialization
	for bool types.
	* glib/glibmm.h: Include vectorutils.h.
	* glib/glibmm/filelist.am: Added vectorutils to build.
	* tests/glibmm_vector/main.cc: New test for general vectorutils check.
	* tests/glibmm_bool_vector/main.cc: New test checking bool specializations.
	* tests/Makefile.am: Added above tests to build system.

2011-01-26  Krzesimir Nowak  <qdlacz@gmail.com>

	Ignore dbus examples binaries.

2011-01-20  Murray Cumming  <murrayc@murrayc.com>

	Improve the ChangeLog entry.

2011-01-20  Murray Cumming  <murrayc@murrayc.com>

	Resolver: lookup_service(), lookup_by_address(): Fix the reference counting.

	* gio/src/resolver.[hg|ccg]: Use the correct OWNERSHIP_*, based on the
	documentation for the C functions. We must release both the list and the
	items.

2011-01-20  Murray Cumming  <murrayc@murrayc.com>

	Application: Fix the build.

	* gio/src/application.ccg: Include giomm/init.h.

2011-01-19  Murray Cumming  <murrayc@murrayc.com>

	Application: Constructor: Initialize glibmm and giomm.

	* gio/src/application.[hg|ccg]: Use a custom klass init function to
	make sure that glibmm and giomm are initialized when Gio::Application is
	instantiated, so it is then unnecssary to call them explicitly.

2011-01-19  Murray Cumming  <murrayc@murrayc.com>

	Revert "Gio::Application: Initialize glibmm and giomm."

	This reverts commit 590000d08fa94a72d042ac1143fa042c90cf9705.
	Initializing glibmm in ObjectBase is not actually necessary.

2011-01-18  Murray Cumming  <murrayc@murrayc.com>

	Gio::Application: Initialize glibmm and giomm.

	* glib/glibmm/objectbase.cc: Constructors: Call Glib::init(), making it
	unnecessary to call this explicitly before instantiating a Glib::Object.
	* gio/src/application.ccg: Make sure that giomm can be used as soon as a
	Gio::Application has been instantiated.
	This should let use just instantiate a Gtk::Application
	instead of using Gtk::Main.

2011-01-18  Murray Cumming  <murrayc@murrayc.com>

	Fixed some docs typos

2011-01-17  Murray Cumming  <murrayc@murrayc.com>

	2.27.91.1

2011-01-17  Murray Cumming  <murrayc@murrayc.com>

	Fix the make check build.

	* examples/dbus/busserver.cc: Comment out unused methods, to fix the
	build. I guess this example is still in progress. Otherwise, the commented
	code should really be removed.

2011-01-17  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: _CLASS_GOBJECT: reverted removal of __REAL_* arguments.

	This is still needed for the gtkmm-2-24 branch.

2011-01-17  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus: Add initial implementation of a bus server/client example.

	* examples/Makefile.am:
	* examples/dbus/busserver.cc: Add a partial implementation of the
	server part of a server/client example that communicate through the
	user's bus.
	* examples/dbus/peer.cc: Typos.

2011-01-16  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Add a send_message() without an "out_serial" param.

	* gio/src/dbusconnection.{ccg,hg} (send_message): Add new method
	without the "out_serial" param.
	* gio/src/unixfdlist.hg (append): Add exception docs to method.

2011-01-16  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::[watch|own]_name(): Add default values for parameters.

	* gio/src/dbusownname.{ccg,hg} (own_name):
	* gio/src/dbuswatchname.{ccg,hg} (watch_name): Add default values for
	the slot parameters instead of writing up overloads since there would
	be many.  Also reorder the parameters so that the flags have default
	values.

2011-01-16  José Alburquerque  <jaalburqu@svn.gnome.org>

	InetAddress: Wrap properties.

	* gio/src/inetaddress.hg: Wrap the properties.
	* gio/src/dbusconnection.hg: Typo.

2011-01-15  Chris Kühl  <chrisk@openismus.com>

	Added conversion from bool& to gboolean*.

	* tools/m4/convert_glib.m4:

2011-01-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusServer: Comment out constructors because of bug #639478.

	* gio/src/dbusserver.{ccg,hg}: Comment out the constructors because
	the C new function does more than calling g_initable_new().

2011-01-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant: Use variant_type() functions in implementation where possible.

	* glib/src/variant.ccg: Use the existing variant_type() functions
	where possible.
	* gio/src/dbusserver.ccg: File bug #639478 about GDBusServer's new
	function doing more than using g_initable_new().

2011-01-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant: Have the variant_type() functions return actual types.

	* glib/src/variant.hg: Correct the variant_type() functions of the
	container derived classes to create and return actual variant types
	and not abstract ones.  Also use the functions in the implementation
	of the existing methods.

2011-01-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus: Avoid errors/exceptions in callbacks due to NULL C strings.

	* gio/src/dbusconnection.ccg: Modify the callbacks so that if a C
	string parameter might be NULL, it is passed to the slots as an empty
	string ("").  This avoids possible exceptions from constructing a
	Glib::ustring from NULL.
	* gio/src/dbusconnection.hg: Typos.

	* examples/dbus/peer.cc: Add the usage examples from the C API's
	example.

2011-01-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusServer: Add docs to the signal_new_connection() signal.

	* gio/src/dbusserver.hg: Add the docs from the C API to make sure it
	clear to users that when handling the "new-connection" signal that a
	reference to the new connection must be kept or the connection will
	not be accepted.

	* examples/dbus/peer.cc: Make an exception message more general to
	cover both a possible exception from the call_sync() call and the
	close_sync() call.

2011-01-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection, DBusMessage: Wrap properties and signals.

	* tools/extra_defs_gen/generate_defs_gio.cc:
	* gio/src/gio_signals.defs: Add the GDBusConnection and the
	GDBusMessage types to the signal and properties generation tool and
	regenerate the defs file.

	* gio/src/dbusconnection.hg: Wrap the properties and signals.
	* gio/src/dbusmessage.hg: Wrap the properties (no signals).
	* gio/src/dbusproxy.hg: Comment out a write-only/construct-only
	property.

2011-01-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus Peer Example: Correct some code to complete the example.

	* examples/dbus/peer.cc (keep_connection): renamed to curr_connection.
	(on_method_call): Place the return value of the method in a tuple
	which is then returned.
	(curr_connection): Use this variable to manage incoming connections.
	The C API docs says that when handling ther DBusServer's
	signal_new_connection() a reference to the connection should be kept
	and the handler should return true if the connection should be kept.
	This variable keeps a reference to the current connection.  When the
	caller finishes, it closes the connection thus allowing the server to
	accept another connection.
	(try/catches): Add return statements in the catches that fail so that
	execution does not continue.

	The example runs successfully with the previous commit and the patch
	in bug #639391 filed in the glib bugzilla product page.  Hopefully the
	request will be accepted.

2011-01-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Check for NULL bus name in the MethodCall callback.

	* gio/src/dbusconnection.ccg
	(DBusConnection_Message_Filter_giomm_callback): Since the sender can
	be NULL, check for that so that creating a Glib::ustring from a NULL
	does not cause exceptions.

2011-01-12  Murray Cumming  <murrayc@murrayc.com>

	2.27.91

2011-01-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: call*() methods: Re-order bus_name parameter.

	* gio/src/dbusconnection.{ccg,hg} (call*): Place the bus_name
	parameter before the timeout_msec parameter to make it easier to
	specifiy a bus name without having to set a timeout value.

	* gio/src/dbusaddress.hg (get_for_bus_sync): Correct declarations to
	return std::string instead of Glib::ustring in accordance with the
	last commit.

2011-01-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus: Use std::string for addresses since they could be a file path.

	* gio/src/dbusaddress.{ccg,hg}:
	* gio/src/dbusconnection.{ccg,hg}:
	* gio/src/dbusserver.{ccg,hg}: Use std::string instead of
	Glib::ustring for address parameters just to avoid possible errors
	since DBus address could be a filename path as the "Addresses"
	section of the DBus introduction seems to imply:
	http://www.freedesktop.org/wiki/IntroductionToDBus.

2011-01-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus: Use std::string for guid's.

	* gio/src/dbusaddress.{ccg,hg}:
	* gio/src/dbusconnection.{ccg,hg}:
	* gio/src/dbusserver.{ccg,hg}:
	* gio/src/dbusutils.{ccg,hg}: Use std::string instead of Glib::ustring
	for guid's since std::string's API is probably adequate enough for
	their use.

2011-01-10  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus: Add a peer example to test the DBusServer class.

	* gio/src/dbusconnection.{ccg,hg}:  Reorder the VariantBase
	'parameters' parameter in the call*() methods to come after the
	method_name parameter.
	* gio/src/dbusintrospection.hg: Use refreturn for methods where the C
	API does not automatically reference the return.
	* gio/src/dbusserver.{ccg,hg}: Add non-observable constructors and
	create() methods.
	* glib/src/variant.{ccg,hg} (create_tuple): Renamed from create().
	Write this method to be more specific for tuples (it's probably the
	only case where this method might be used).  Dealing with tuples still
	feels awkward with the method.  Maybe there's a better way.

	* examples/Makefile.am:
	* examples/dbus/peer.cc:
	* examples/dbus/userbus.cc:
	* examples/dbus/well-known-address-client.cc: Add the new
	server/client peer example (named peer).  The example crashes because
	the C API seems to not deal with empty strings "" well, but at least
	there is now an example.  Making sure it runs well is necessary.  Also
	rename the previous example to userbus.cc.

2011-01-08  Krzesimir Nowak  <qdlacz@gmail.com>

	Tools: Added a defs fixer tool.

	tools/defs_fixer.pl: Helper tool to fix the generated defs. I hope
	that for most cases it will be just better than using diff and patch.

2011-01-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Callbacks: Check for NULL GError** parameters.

	* gio/src/dbusconnection.ccg: Make sure that the callbacks that set a
	GError* do not try to access a NULL pointer if NULL has been passed
	as the GError** parameter.

	Bug #637587 (Yannick Guesnet)

2011-01-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBusConnection: Callbacks: Return all Glib::Errors to caller.

	* gio/src/dbusconnection.ccg: Have to previously modified callbacks
	that deal with getting/setting properties return all Glib::Errors
	and not just Gio::DBusError types.

	Bug #637587 (Yannick Guesnet)

2011-01-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Callbacks:  Return DBusError exceptions to caller.

	* gio/src/dbusconnection.ccg: Modify the callbacks that deal with
	getting/setting properties for a DBus interface to set the GError*
	parameter if it is a DBus related GError.  This should allow receiving
	DBus exceptions if the slot throws one with respect to not being able
	to successfully get/set a property.

2011-01-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Use gobj() instead of reinterpret_cast<> for *VTable.

	* gio/src/dbusconnection.ccg: Use the gobj() of the
	DBusInterfaceVTable instead of casting it to a GDBusInterfaceVTable in
	the callbacks and in the register_object() method.

2011-01-07  Murray Cumming  <murrayc@murrayc.com>

	DBusConnection: Use const guint instead of guint const.

	* gio/src/dbusconnection.ccg: This is more consistent with other code.

2011-01-07  Murray Cumming  <murrayc@murrayc.com>

	DBusConnectionInvocation: Use refreturn on get methods.

	* gio/src/dbusmethodinvocation.hg: This seems to be necessary, though it does
	not fix bug #637587.

2011-01-07  Murray Cumming  <murrayc@murrayc.com>

	DBusConnection: Use _ suffixes on member variables.

	* gio/src/dbusconnection.[hg|ccg]: Use a _ suffix on member variables to
	avoid confusion with method parameters of the same name, though this does not
	seem to be what is causing bug #637587.

2011-01-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Add [register|unregister]_subtree() methods.

	* gio/src/dbusconnection.{ccg,hg}: Add the new methods along with a
	corresponding class (like the one for register_object()).  Added
	method docs.  Modified the registration methods so that the vtable is
	passed and not a struct containing the slots.  Please note that this
	API feels like it could be made better before glibmm goes stable.  In
	particular, it might be nice and (maybe even possible) to not require
	that the *VTable instances be global.

2011-01-06  Murray Cumming  <murrayc@murrayc.com>

	SocketService, ThreadedSocketService: Correct ref-counting for signals.

	* tools/m4/convert_gio.m4: Remove conversions that are only for signals.
	These should not generally be in the general m4 files, to avoid them being
	used implicitly in the wrong place. This is important because they use
	different reference-taking.
	* gio/src/socketservice.hg:
	* gio/src/threadedsocketservice.hg: Add corrected conversions here.

2011-01-06  Krzesimir Nowak  <qdlacz@gmail.com>

	Fixed a stupid scoping mistake in GtkDefs.pm.

2011-01-06  Krzesimir Nowak  <qdlacz@gmail.com>

	Gmmproc: Try harder to limit false unwrapped properties.

	* tools/pm/GtkDefs.pm: When taking list of properties that are
	unwrapped, try to filter out the properties defined in base class.

2011-01-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusServer: Correct the "active" property.

	* gio/src/dbusserver.hg: Correct the type of the "active" property.

2011-01-05  Murray Cumming  <murrayc@murrayc.com>

	Correct some formatting

2011-01-05  Murray Cumming  <murrayc@murrayc.com>

	BufferedInputStream, BufferedOutputStream: Correct property name.

	* gio/src/bufferedinputstream.[hg|ccg]
	* gio/src/bufferedoutputstream.[hg|ccg]: When using create_sized(), it
	tried to set the wrong property. Renaming the parameter from size to
	buffer_size fixes this.

	Bug #638616 (Michael Edwards)

2011-01-05  Krzesimir Nowak  <qdlacz@gmail.com>

	Give more information about failed lookup in documentation generator.

	* tools/pm/DocsParser.pm: Print for which object the lookup failed.
	Also, added a newline.

2011-01-05  Krzesimir Nowak  <qdlacz@gmail.com>

	Forgot to push updated ChangeLog.

2011-01-05  Krzesimir Nowak  <qdlacz@gmail.com>

	Gmmproc: Warn about unwrapped properties.

	* tools/gmmproc.in: When displaying a list of unwrapped properties,
	ignore the ones that are nonreadable and construct only.
	* tools/pm/Property.pm: Added entity_type member initialized with
	'property' value to Property class, which allows us to sort out
	which unwrapped entities are actually properties.

2011-01-05  Krzesimir Nowak  <qdlacz@gmail.com>

	Update .gitignore.

	* .gitignore: Updated to ignore new variant stuff and MSVC.

2011-01-03  Murray Cumming  <murrayc@murrayc.com>

	2.27.5.1

2010-12-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	VariantContainerBase::create: Don't use pointers to pass the children.

	* glib/src/variant.{ccg,hg} (VariantContainerBase::create): Don't use
	pointers to the variant children to pass the array of variants, but
	instead use copies which might be more intuitive for new programmers.
	It is not clear whether this method should remain or not.  We'll have
	to wait for the example to be written.

2010-12-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	VariantContainerBase: Add a create() method from an array of variants.

	* glib/src/variant.{ccg,hg}: (VariantContainerBase::create): Add this
	method that accepts a VariantType (describing what kind of container
	should be created), and a vector of VariantBase.  Theoretically, this
	method should make creation of tuples possible.  There is no tuple
	class in standard C++ so something like this would be necessary in
	cases where tuples need to be created (to be returned, for example,
	from some method call).  The future server/client D-Bus example should
	put this method to the test.
	(VariantStringBase::create_*_path): Sink the variant after creation in
	these methods which was forgotten.
	* gio/src/dbusconnection.hg: Typos.

2010-12-28  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant test: Use the dictionary variant classes in the test.

	* glib/src/variant.{ccg,hg} (get_iter): Make all the get_iter()
	methods in the variant container classes const.
	(Variant< std::pair<K, V> >::get):
	(Variant< std::map<K, V> >::lookup):
	(std::map<K, V> Variant< std::map<K, V> >::get): Correct the getting
	of a std::pair<> from the Variant<> and the getting of children from
	the parent VariantContainerBase class.
	(Variant< std::map<K, V> >::create): Create the dictionary entries as
	Variants and then use g_variant_builder_add_value() to add them
	instead of g_variant_add() which is easier.

	* tests/glibmm_variant/main.cc: Use the updated dictionary classes in
	the test.

2010-12-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant: Add dictionary entry and dictionary specializations.

	* glib/src/varianttype.hg:
	* glib/src/variant_basictypes.h.m4: Renamed the glibmmVariant doxygen
	group to 'Variant'.
	* glib/src/variant.{ccg,hg}: Throw a std::out_of_range exception
	instead of a std::runtime_error one from methods that throw them
	because of indexes being out of bounds.
	(Variant< std::pair<K, V> >): Added this specialization to deal with a
	dictionary entry variant type.
	(Variant< std::map<K, V> >): Added this specialization to deal with
	variant dictionary types.
	(VariantContainerBase::get): Have this method throw a
	std::out_of_range exception if the index is out of range.
	(Variant< std::vector<Glib::ustring> >::get)
	(Variant< std::vector<std::string> >::get): Free the shallow copy of
	the returned string arrays in the get methods of the string variant
	arrays as the docs of the C API say.

	* gio/src/dbusconnection.hg: Added missing _IGNORE()'s.
	* gio/src/dbusproxy.hg: Updated a TODO.
	* examples/dbus/well-known-address-client.cc: Typo.

2010-12-24  Krzesimir Nowak  <qdlacz@gmail.com>

	Add a valuearray test to build.

	* tests/Makefile.am: Added a valuearray test to build instead of
	value test thrice.

2010-12-23  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Add register/unregister_object() methods.

	* gio/src/dbusconnection.{ccg,hg}: Add register_object() and
	unregister_object() methods.  Use a C++ wrapper class for the
	GDBusInterfaceVTable structure so that it is possible to use slots for
	the registration.

	Fixes Bug #637587 (Yannick Guesnet)

2010-12-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: _CLASS_GOBJECT: Remove __REAL_* additional arguments.

	* tools/m4/class_gobject.m4:
	* tools/m4/class_shared.m4: Remove the use of the
	__REAL_[CNAME|CPARENT]__ variables needed to wrap some classes in
	gtkmm that were typedef to their base type (such as GdkWindow and
	GdkPixmap).  These classes have been fixed in gtk+-3 thus eliminating
	the need for the special arguments in _CLASS_GOBJECT.

2010-12-22  Murray Cumming  <murrayc@murrayc.com>

	Added a TODO

2010-12-22  David Kozub  <zub@linux.fjfi.cvut.cz>

	RefPtr: Make it work with sorted containers (e.g. std::set<RefPtr<T> >).

	* glib/glibmm/refptr.h: Add operators <, <=, >, >=
	that compare RefPtrs by their underlying pointer.
	This makes RefPtr work with sorted containers (e.g. std::set<RefPtr<T> >)

2010-12-22  Yannick Guesnet  <Yannick.Guesnet@univ-rouen.fr>

	giomm: Application: Add the open signal.

	* gio/src/application.[hg|ccg]: Add signal_open(), by hand-coding instead of
	using _WRAP_SIGNAL(), because we need to change the number of parameters.

2010-12-22  Murray Cumming  <murrayc@murrayc.com>

	Variant: Fix compiler warnings.

	* glib/src/variant.ccg: Remove some uses of the typename keyword to avoid
	warnings about using them outside of templates (they were in template
	specializations, which I guess is different).

2010-12-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant< std::vector<std::string> >: Correct the getting of the array.

	* glib/src/variant.{ccg,hg} (get): Use
	g_variant_get_bytestring_array() in the get() methods instead of
	g_variant_get_strv().
	* examples/dbus/well-known-address-client.cc: Use a
	VariantContainerBase to get the result of the proxy's call method
	instead of a Variant<VariantBase>.  Also corrected the comment about
	why it is done that way.

2010-12-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus: Well known service example: Complete the example.

	* examples/dbus/well-known-address-client.cc: Complete the well known
	service example by calling the 'ListNames' method of the user's
	session bus.

2010-12-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add Variant< std::vector<[Glib::ustring|std::string]> specializations.

	* glib/src/variant.{ccg,hg}: Add two Variant specializations to deal
	specifically with arrays of UTF8 and non-UTF8 strings both reflecting
	the API of the specialization that deals with regular arrays.
	(docs, typos): Minor corrections.
	(Variant<std::vector<T>>::get): Have the method that gets the vector
	return the vector instead of setting an output parameter because
	returning the vector on the call stack should not be costly and it's
	probably more intuitive for the programmer.
	* tests/glibmm_variant/main.cc: Adapt test according to the above
	change.  Correct minor typos.

2010-12-20  José Alburquerque  <jaalburqu@svn.gnome.org>

	Allow giomm to build under mingw32.

	* gio/src/unixcredentialsmessage.hg:
	* gio/src/unixfdlist.hg:
	* gio/src/unixfdmessage.hg:
	* gio/src/unixsocketaddress.hg: Add the _GTKMM_WIN_NO_WRAP macro to
	newly added giomm classes so that giomm builds under mingw32.

	Fixes Bug #636754

2010-12-20  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant: Add a VariantStringBase and a VariantContainerBase class.

	* glib/src/variant.{ccg,hg} (VariantStringBase): Implement a new class
	from which the Glib::Variant<> string class (like
	Glib::Variant<Glib::ustring>) now derive.  The new class has methods
	for determining/creating object paths and signatures.  The new
	instances are created by setting output parameters.
	(VaraintContainerBase): Implement this new class from which variant
	containers should derive.
	(VariantContainerBase::get_n_children, get, get_maybe): Moved from
	Variant<VariantBase>
	(castitem constructors): Corrected all GVariant* castitem constructors
	to accept a 'take_a_reference' bool parameter.
	(Variant< std::vector<T> >::create, get, get_iter): Re-wrote these
	methods to use the Glib::VariantType class to get variant types
	instead of using strings.  Also Re-wrote to work specifically with
	fixed arrays (see g_variant_get_fixed_array).  This means that this
	class will not work with vectors of strings because
	g_variant_get_strv() and g_variant_get_bytestring_array() need to be
	used in those cases.
	(std::vector<T> get): Re-wrote to use an output parameter.

	* glib/src/variant_basictypes.h.m4: Corrected the castitem
	constructors as above.

	* tests/Makefile.am:
	* tests/glibmm_variant/main.cc: Added a small test for the
	Variant< std::vector<T> > methods.

	* gio/src/dbuserror.hg:
	* gio/src/error.hg: Wrap the GDBusError enum as a GError, moving its
	declaration to error.hg.

2010-12-16  José Alburquerque  <jaalburqu@svn.gnome.org>

	Added a new Glib::Variant<> specialization to deal with arrays.

	* glib/src/variant.{ccg,hg} (VariantBase::get_maybe): Move the method
	that gets a maybe of a container to Variant<VariantBase> because it a
	container specific method.
	(Variant<VariantBase>::get): Correct this method so that it uses an
	output parameter instead of returning a VariantBase.
	(Variant< std::vector<T> >): Added a new specialization designed to
	deal with variant arrays. Similar types dealing with array of strings
	should also be added.
	(typedefs): Added some typedefs that might possibly be useful later.
	(docs): Added docs to methods without them.
	* glib/src/variant_basictypes.{cc,h}.m4:
	(variant_type): Made all the static variant_type() methods return a
	Glib::VariantType so the C++ wrapper is used.
	* glib/src/variantiter.{ccg,hg}: Corrected the includes so
	variantiter.h can be included in variant.h.

2010-12-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	glibmm: Add a Variant<std::string> specialization.

	* glib/src/variant.ccg:
	* glib/src/variant.hg: Add a Variant<std::string> specialization based
	on the already existing Variant<Glib::ustring> one.  A way has to be
	found to create object paths and signatures (see
	g_variant_new_object_path() and g_variant_new_signature()) which are
	also strings and have their own GVariantType.

2010-12-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant[Iter,Type]: Add class docs.

	* glib/src/variantiter.hg:
	* glib/src/varianttype.hg: Add class docs.
	* glib/src/keyfile.hg:
	* glib/src/optiongroup.hg: Correct @newin{}s from 2,26 to 2,28.
	* glib/src/variant.hg (VariantBase): Move the get_n_children() method
	to Variant<VariantBase> since all containers essentially are created
	in the C API as a GVariant containing one (or more) GVariant(s).  The
	C++ container types (such as arrays, etc.) can derive from
	Glib::Variant<VariantBase> to inherit the get_n_children() method.

	* gio/src/gio_extra_objects.defs: Add GDBusProxy.

2010-12-15  Murray Cumming  <murrayc@murrayc.com>

	Tell the documentation generator about MatchInfo.

	* glib/src/glib_extra_objects.defs: Added GMatchInfo here.

2010-12-15  Murray Cumming  <murrayc@murrayc.com>

	2.27.4.1

2010-12-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus Client Example: create a DBusProxy in preparation for method call.

	* examples/dbus/well-known-address-client.cc: Asynchronously create a
	DBusProxy which can then be used to call a method on the user's
	session bus.  This tests asynchronous creation of objects that derive
	from the AsyncInitable interface.  The reference counting of the newly
	created object should be checked because in the SlotAsyncReady slot,
	the proxy has a reference count of two when it should possibly be
	one (the g_dbus_proxy_new_finish() docs say that in the callback,
	unreferencing the proxy destroys it).

2010-12-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus[Connection|Proxy]: Don't take extra reference on async creation.

	* gio/src/dbusconnection.ccg:
	* gio/src/dbusproxy.ccg: There's no need to put the newly constructed
	DBusConnection|DBusProxy in a Glib::RefPtr<> and then take an extra
	reference.  Simply constructing the object is enough to guarantee that
	the object continues existing until the SlotAsyncReady slot is called.

2010-12-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusProxy: Reorder the parameters so that "name" is second in methods.

	* gio/src/dbusproxy.{ccg,hg}: Reorder the parameters so that the
	"name" parameter comes before the "object_path" parameter as in the C
	API which is probably more natural.  Add _IMPLEMENTS_INTERFACE() for
	the Initable and AsyncInitable interfaces that it implements.
	(class docs): Removed some sentences in the class docs that only
	apply to the C API.  Made it clear that the docs is adapted from the C
	API in case the paragraph about sub-classing does not apply.
	(constructor properties): Corrected the "name" property to the correct
	name "g_name" in constructors.

	* gio/giomm.h: Added all the missing dbus includes.

2010-12-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add a DBus Doxygen group.

	* gio/src/dbusconnection.hg: Add a DBus Doxygen group in which to
	include all the D-Bus docs.
	* gio/src/dbusaddress.hg:
	* gio/src/dbusauthobserver.hg:
	* gio/src/dbuserror.hg:
	* gio/src/dbusintrospection.hg:
	* gio/src/dbusmessage.hg:
	* gio/src/dbusmethodinvocation.hg:
	* gio/src/dbusownname.hg:
	* gio/src/dbusproxy.hg:
	* gio/src/dbusserver.hg:
	* gio/src/dbusutils.hg:
	* gio/src/dbuswatchname.hg: Include all the D-Bus classes, functions
	and slots in the new group.
	* glib/glibmm.h: Mention the new group in the list of giomm features.

	* gio/src/dbusproxy.ccg: Typos.

2010-12-12  José Alburquerque  <jaalburqu@svn.gnome.org>

	glibmm: Add a MatchInfo class for use with the existing Regex class.

	* glib/src/regex.{ccg,hg}: Add a new (generic) class wrapping the
	GMatchInfo functions.  Wrap the (commented out) methods with a
	Glib::MatchInfo in Regex so that the new class is used.

	Fixes Bug #636911 (Alexander Shaduri)

2010-12-09  Murray Cumming  <murrayc@murrayc.com>

	Added generic gmmproc conversions previously in convert_gtkmm.m4.

	* tools/m4/convert_base.m4: Added generic macros back.

2010-12-09  Murray Cumming  <murrayc@murrayc.com>

	Remove non-glibmm .m4 files.

	* tools/m4/class_gtkobject.m4:
	* tools/m4/convert_atk.m4:
	* tools/m4/convert_gdk.m4:
	* tools/m4/convert_gtk.m4:
	* tools/m4/convert_gtkmm.m4:
	* tools/m4/convert_pango.m4: Remove conversions and macros for non-glibmm
	types. These will be moved to atkmm, pangomm and gtkmm instead.

2010-12-09  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusProxy: Add a non-cancellable call_sync() method.

	* gio/src/dbusproxy.{ccg,hg}: Add a non-cancellable call_sync()
	method.  Reorder the paramters so that the "timeout_msec" parameter in
	methods that have it can have a default of '-1' which means a default
	timeout.

2010-12-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus: Client Example: Choose a better name for the source file.

	* examples/dbus/client.cc: Renamed to:
	* examples/dbus/well-known-address-client.cc:

	* examples/Makefile.am: Corrected according to renaming above.

2010-12-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Add non-observable create method overloads.

	* gio/src/dbusconnection.{ccg,hg}: Add constructors and create methods
	that don't require a DBusAuthObservable paramter.

2010-12-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Also correct the static status of the get() methods.

	* gio/src/dbusconnection.{ccg,hg}: As with the create*() methods, the
	get() async methods should be static.
	* gio/src/dbusintrospection.hg (DBusPropertyInfo): Add class docs.

2010-12-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Correct docs of newly added methods that throw a Glib::Error.

	* gio/src/dbusconnection.hg:
	* gio/src/dbusproxy.hg:
	* gio/src/dbusintrospection.hg: Use _WRAP_METHOD_DOCS_ONLY together
	with a Doxygen @throw directive in methods that throw a Glib::Error to
	get the C docs and then make it clear that the methods throw a
	Glib::Error.
	(new_for_xml): Rename to create_for_xml().

2010-12-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Use static keyword for create methods.

	* gio/src/dbusconnection.{ccg,hg}: Add the forgotten 'static' keyword
	to all the create methods (that's what happens when coding too quickly
	without thinking about what's being done).  Fortunately it seems to
	have happened only here.

2010-12-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus: Client Example: Correct typo.

	* examples/dbus/client.cc: Correct a typo in a comment.
	* tools/m4/convert_gio.m4: Correct alphabetizing of last enum
	conversion.

2010-12-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus: Add an initial client example accessing a user's bus.

	* examples/dbus/client.cc: Initial example opening a connection to the
	user's bus and then printing its unique name.

2010-12-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add Gio::DBusConnection::get_sync() methods.

	* gio/src/dbusconnection.hg: Wrap get_sync() methods (cancellable and
	non-cancellable versions).
	* tools/m4/convert_gio.m4: Add enum conversion.

2010-12-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Add missing _IGNORE().

	* gio/src/dbusconnection.{ccg,hg}: Add a missing _IGNORE() for
	the emit_signal() method and correct its misspelled name at the same
	time.

2010-12-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Add send_message_with_reply_sync() methods.

	* gio/src/dbusconnection.{ccg,hg}: Add cancellable and non-cancellable
	versions of the send_message_with_reply_sync() methods (following the
	same logic as the existing send_message_with_reply() methods).  Some
	minor corrections.

2010-12-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Add signal_subscribe() and add_filter().

	* gio/src/dbusconnection.{ccg,hg}: Add signal_subscribe(),
	signal_unsubscribe(), add_filter() and remove_filter() methods.
	Wrapped GDBusSignalFlags (reordered enums in alphabetical order).
	([get|set]_exit_on_close):
	(get_capabilities): Reordered declarations (by moving the _WRAP_METHOD
	macros) according to where they are declared in the C API.

2010-11-30  Murray Cumming  <murrayc@murrayc.com>

	2.27.4

2010-11-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus[MethodInvocation|Server]: Code corrections.

	* gio/src/dbusmethodinvocation.hg: Remove the default constructor
	because it probably will not be used (there is no create() method to
	go along with it).
	* gio/src/dbusserver.{ccg,hg} (create_sync): Use
	g_dbus_server_new_sync() instead of the constructors because the C
	function does more than call g_initable_new().

2010-11-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Some conversion fixes.

	* tools/pm/DocsParser.pm (convert_docs_to_cpp): Convert occurances of
	'`' to the variable '__BT__' defined in base.m4 which safely produces
	the same character without causing M4 processing errors.
	(convert_tags_to_doxygen): Add a substition for the
	<constant></constant> gtk-doc tag to the equivalent Doxygen <tt></tt>
	tag.  Also use '<' instead of '&lt;' and '>' instead of '&gt;' in the
	substitutions because otherwise the tags are not recognized.

2010-11-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBusConnection: Add emit_signal().

	* gio/src/dbusconnection.{ccg,hg}: Add emit_signal() wrapping
	g_dbus_connection_emit_signal().
	* gio/src/dbusaddress.ccg: Typo.

2010-11-19  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBus::Address: Wrap the gio dbus address API in this namespace.

	* gio/giomm.h:
	* gio/src/dbusaddress.{ccg,hg}:
	* gio/src/filelist.am: Add new sources and make sure they are built.

	* gio/src/dbusconnection.hg:
	* gio/src/dbuserror.hg: Typos.

2010-11-16  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Add call(), call_finish() and call_sync() methods.

	* gio/src/dbusconnection.{ccg,hg}: Add cancellable and non-cancellable
	versions of call() and call_sync().  Also added call_finish().

2010-11-16  Murray Cumming  <murrayc@murrayc.com>

	2.27.3.1

2010-11-16  Murray Cumming  <murrayc@murrayc.com>

	ApplicationCommandLine: Fix print() and print_err().

	* gio/src/applicationcommandline.[hg|ccg]: These functions take a printf
	format and arguments, as shown by compiler warnings. So I just used "%s".

2010-11-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBus[Connection|Proxy]: Use Gio::AsyncInitable::init_async correctly.

	* gio/src/dbusconnection.ccg:
	* gio/src/dbusproxy.ccg: Use the non-cancellable version of
	Gio::AsyncInitable::init_async() where appropriate.

2010-11-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	Initable: Add a non-cancellable overload of the init() method.

	* gio/src/initable.{ccg,hg} (init): Add a non-cancellable overload.
	* gio/src/dbusconnection.ccg:
	* gio/src/dbusproxy.ccg:
	* gio/src/dbusserver.ccg: Adapt API to use non-cancellable version of
	Gio::Initable::init().

2010-11-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Provide non-cancellable overloads for newly added API.

	* gio/src/application.hg: Completed a TODO.
	* gio/src/asyncinitable.hg (init_async): Refer to existing method docs
	in the non-cancellable version instead of duplicating docs.
	* gio/src/dbusconnection.{ccg,hg}: Add non-cancellable overloads of
	the constructors and create methods instead of having a default null
	Cancellable parameter.  Renamed the synchronized create*() methods to
	create*_sync().
	(get): Added a non-cancellable overload as above.
	* gio/src/dbusproxy.{ccg,hg}: Added non-cancellable overloads of the
	constructors and create methods.  Renamed the create*() synchronized
	methods to create*_sync() as above.
	(call): Added a non-cancellable overload as above.
	* gio/src/dbusserver.{ccg,hg}: Add non-cancellable overloads of the
	constructor and create method.  Renamed the create() synchronized
	method to create_sync() as above.

2010-11-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	Correct @newin{}'s and add class docs of newly added API.

	* gio/src/application.hg:
	* gio/src/asyncinitable.hg:
	* gio/src/credentials.hg:
	* gio/src/dbusauthobserver.hg:
	* gio/src/dbusconnection.hg:
	* gio/src/dbuserror.hg:
	* gio/src/dbusintrospection.hg:
	* gio/src/dbusmessage.hg:
	* gio/src/dbusmethodinvocation.hg:
	* gio/src/dbusownname.hg:
	* gio/src/dbusproxy.hg:
	* gio/src/dbusserver.hg:
	* gio/src/dbusutils.hg:
	* gio/src/dbuswatchname.hg:
	* gio/src/unixcredentialsmessage.hg:
	* gio/src/unixfdlist.hg:
	* gio/src/unixfdmessage.hg: Correct @newin{}'s from 2.26 to 2.28.

	* gio/src/proxy.hg:
	* gio/src/proxyaddress.hg:
	* gio/src/proxyresolver.hg: Add class docs.
	* gio/src/unixsocketaddress.hg: Add to Doxygen group NetorkIO.

	* gio/src/socketcontrolmessage.hg: Rephrase a TODO.

2010-11-13  Jonathon Jongsma  <jonathon@quotidian.org>

	Add Gio::ApplicationCommandLine

2010-11-12  Jonathon Jongsma  <jonathon@quotidian.org>

	Miscellaneous Gio::Application fixes

	- Add non-cancellable overload of register_application()
	- return int value from run() correctly
	- Fix protected constructor signature
	- use _WRAP_CTOR and _WRAP_CREATE()

2010-11-10  Murray Cumming  <murrayc@murrayc.com>

	2.27.3

2010-11-10  Murray Cumming  <murrayc@murrayc.com>

	Gio: Added some methods.

	* gio/src/gio_methods.defs:
	* glib/src/glib_functions.defs:
	* glib/src/gobject_functions.defs: Regenerated with h2defs.py.

	* gio/src/application.hg: Added open(). Notice that I have used std::vector
	instead of ArrayHandle, because that is what we should use for all new API,
	after we decided that the intermediate types are too awkward for people to
	understand.
	* gio/src/actiongroup.[hg|ccg]: Added list_actions, though we need to
	use a std::vector here instead.
	* gio/src/datainputstream.[hg|ccg]: Added read_upto(), read_upto_async()
	and read_upto_finish(). Updated the read_until*() documentation to
	discourage their use (apparently they will be properly deprecated eventually).
	* gio/src/settings.hg: Added range_check().
	* gio/src/socketclient.[hg|ccg]: Addef connect_to_uri(), connect_to_uri_async()
	and connect_to_uri_finish().

2010-11-10  Murray Cumming  <murrayc@murrayc.com>

	Indentation corrections

2010-11-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Make sure the AsyncInitable inheritance is correct.

	* gio/src/dbusconnection.hg: Add a missing _IMPLEMENTS_INTERFACE() for
	the AsyncInitiable interface that DBusconnection implements.

2010-11-08  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm.h: Add includes of newly wrapped API.

	* gio/giomm.h: Add forgotten includes of actiongroup.h and
	unixsocketaddress.h to the main giomm.h include file.

2010-11-08  Krzesimir Nowak  <qdlacz@gmail.com>

	ObjectBase: Fixed refcount debugging message.

	* glib/glibmm/objectbase.cc: A parameter passed to g_warning() in
	destroy_notify_callback() describing a name of GObject should be indeed
	a name, not a pointer to GObject.

2010-11-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	UnixSocketAddress: Correct the wrapping of create() methods.

	* gio/src/unixsocketaddress.hg: Remove the multi-parameter constructor
	and create() method, handwriting the create() method instead to wrap
	g_unix_socket_address_new_with_type() because the C function does more
	than call g_object_new().

	* gio/src/filelist.am: Typo.

2010-11-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add UnixSocketAddress.

	* tools/extra_defs_gen/generate_defs_gio.cc:
	* gio/src/gio_signals.defs: Add the GUnixSockeAddress GType to the
	list of types for which signals and properties should be generated and
	regenerate the signals and properties defs file.

	* gio/src/filelist.am:
	* gio/src/unixsocketaddress.{ccg,hg}: Add the UnixSocketAddress
	sources and mention them so they are built.
	* tools/m4/convert_gio.m4: Add a necessary enum conversion.

	* gio/src/enums.hg: Wrap the Gio::ErrorEnum enum.

2010-11-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	UnixCredentialMessage, UnixFDMessage: Wrap properties correctly.

	* gio/src/unixcredentialsmessage.hg:
	* gio/src/unixfdmessage.hg: Correct the wrapping of properties (the
	arguments were interchanged).

	* gio/src/application.hg: Typos.
	* gio/src/socketconnectable.hg: Refine a TODO.

2010-11-04  Murray Cumming  <murrayc@murrayc.com>

	Added a TODO

2010-11-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Wrap several unwrapped functions.

	* gio/src/memoryoutputstream.hg: Added stream_steal_data(), and a
	get_data() constant version.
	* gio/src/networkservice.hg: Added get_scheme(), set_scheme().
	Wrapped the "scheme" property.
	* gio/src/socket.{ccg,hg}: Added get_timeout(), set_timeout(),
	receive_with_blocking() and send_with_blocking().
	* gio/src/socketclient.hg: Add get_enable_proxy(), set_enable_proxy(),
	get_timeout(), set_timeout() and add_application_proxy().
	* gio/src/socketconnectable.hg: Added proxy_enumerate() and an
	enumerate() constant version.

	* gio/src/socketaddressenumerator.hg: Added TODO's.

	* gio/src/actiongroup.hg: Small class docs correction.

2010-11-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	Application, ActionGroup: Add Doxygen class documentation.

	* gio/src/application.hg: Add class docs.
	(is_valid): Renamed to id_is_valid().
	* gio/src/actiongroup.hg: Added class docs.
	* gio/src/dbuserror.hg: Typos.

2010-11-03  Murray Cumming  <murrayc@murrayc.com>

	Fix the build with glib from git master.

	* glib/glibmm/main.[h|cc]: get_time(): Now returns a gint64 instead of
	a GTimeSpec output parameter.

2010-11-02  Murray Cumming  <murrayc@murrayc.com>

	2.27.2

2010-11-01  Murray Cumming  <murrayc@murrayc.com>

	Fix the build with --enable-warnings=fatal

	* glib/glibmm/main.[h|cc]: get_current_time(): undef G_DISABLE_DEPRECATED
	so this can build. Deprecate it to match the C API. Add get_time() which
	replaces it. However, we should replace our use of it, which seems difficult.

2010-11-01  José Alburquerque  <jaalburqu@svn.gnome.org>

	Application: Re-wrap according to the latest API.

	* gio/src/application.{ccg, hg}: Re-wrapped the API according to the
	recent changes in the C API.  Old methods were removed and new ones
	wrapped.  Also wrapped its properties.
	* tools/m4/convert_gio.m4: Added necessary conversion.

2010-11-01  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add ActionGroup interface.

	* tools/extra_defs_gen/generate_defs_gio.cc:
	* gio/src/gio_signals.defs: Add the GActionGroup type to the extra
	defs generation tool and regenerate the signal defs file to get the
	signals of GActionGroup.
	* gio/src/actiongroup.{ccg, hg}:
	* gio/src/filelist.am: Add new ActionGroup interface sources and
	mention them so they are build.

2010-10-28  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Reorder parameters to allow default values for flags.

	* gio/src/dbusconnection.{ccg,hg}: Reorder the parameters in the
	constructors and create methods so that the DBusConnection flag
	parameter has a default value.
	* gio/src/dbusproxy.hg (get_cached_property): Docs re-formatting.

2010-10-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusConnection: Add docs to some methods.

	* gio/src/dbusconnection.hg: Add Doxygen docs to wrapped methods
	without them.
	* gio/src/dbusproxy.hg: Typo.

2010-10-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusProxy: Add get_cached_property().

	* gio/src/dbusproxy.{ccg,hg}: Add get_cached_property(), wrapping
	g_dbus_proxy_get_cached_property().  Also add missing _IGNORE().

2010-10-26  Murray Cumming  <murrayc@murrayc.com>

	2.27.1

2010-10-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusProxy: Wrap call(), call_finish() and call_sync() methods.

	* gio/src/dbusconnection.hg: Wrap the DBusCallFlags enum.
	* gio/src/dbusproxy.{ccg,hg}: Wrap the call(), call_finish() and
	call_sync() methods.

2010-10-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	Variant: Remove floating reference on creation.

	* glib/src/variant.ccg:
	* glib/src/variant_basictypes.cc.m4: Modify all create methods of the
	variant classes so that they remove the floating reference of the
	newly created GVariants.  The C API sometimes 'consumes' GVariants
	with floating references (see g_dbus_proxy_call()) so this allows C++
	to worry about deleting GVariants when their references are all lost.

2010-10-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	DBusProxy: Wrap properites and signals.

	* tools/extra_defs_gen/generate_defs_gio.cc: Add a new section for
	DBus types and add the GDBusProxy type to the gio extra defs
	generation tool.
	* gio/src/gio_signals.defs: Regenerate with the extra defs tool to get
	the properties and signals of GDBusProxy.  Some types (like GVariant
	and GStrv) have to be manually edited.
	* gio/src/dbusproxy.hg: Wrap properties and (one of two) signals.
	* tools/m4/convert_glib.m4: Add a const-gchar* to `const
	Glib::ustring&' conversion (it may be more appropriate to include it
	in dbusproxy.hg for the "g-signal" signal).

2010-10-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	AsyncInitable: Add create_finish() wrapping an unwrapped function.

	* gio/src/asyncinitable.hg: Add create_finish() wrapping
	g_async_initable_new_finish().  Its not clear how useful the method
	will be, but at least gmmproc does not say that it is still unwrapped.
	* gio/src/dbusproxy.hg: Typo.

2010-10-21  Murray Cumming  <murrayc@murrayc.com>

	Added get_system_data_dirs() and get_system_config_dirs().

	* glib/glibmm/miscutils.[h|cc]: Wrappping g_get_system_data_dirs() and
	g_get_system_config_dirs(), which were actually added in glib 2.6 but
	not noticed by us until now.
	Notice that these return std::vector<> instead of ArrayHandle, because we
	have decided to do that for new APIs.

2010-10-19  Murray Cumming  <murrayc@murrayc.com>

	Fix the build with the latest glib API.

	* gio/src/gio_enums.defs: Regenerated with enums.pl.
	* gio/src/gio_methods.defs: Regenerated with h2defs.py.
	* gio/src/gio_signals.defs: Regenerated with extra_defs.
	* gio/src/application.[hg|ccg]: Adapt to the changed API in glibmm,
	though several functions, properties and signals are not yet wrapped.
	* gio/src/dbusserver.hg: new_connection signal: Now returns a bool.
	* tools/m4/convert_gio.m4: Mention the new enum.

2010-10-18  José Alburquerque  <jaalburqu@svn.gnome.org>

	glibmm: ustring: Restore last block removed by #ifdef removal script.

	* glib/glibmm/ustring.cc: Restore the last block that was accidentally
	removed by the optional API #ifdef removal script.  There were three.
	Two were restored (GNOME bug #622030), but one (final one) was not.
	This commit does that, restoring the file to its original condition
	without the optional API #ifdefs.

2010-10-14  Murray Cumming  <murrayc@murrayc.com>

	Almost ready for 2.27.0 release

2010-10-12  Murray Cumming  <murrayc@murrayc.com>

	Added missing file, on advice from Armin

2010-09-29  Armin Burgmeier  <armin@arbur.net>

	Add MSVC 2010 project files and 64 bit support to MSVC projects

2010-09-21  Murray Cumming  <murrayc@murrayc.com>

	Depend on glib 2.27.0, because we need GApplication.

	* configure.ac: Increase the glib dependency.

2010-09-19  Murray Cumming  <murrayc@murrayc.com>

	2.25.5 changes from glibmm-2-26 branch.

2010-09-18  Murray Cumming  <murrayc@murrayc.com>

	Marked the branch.

2010-09-14  Murray Cumming  <murrayc@murrayc.com>

	Settings: Comment out get_destroyed() to avoid a linker error.

	* gio/src/settings.[hg|ccg]: Comment out the use of g_setting_get_destroyed().
	See glib bug https://bugzilla.gnome.org/show_bug.cgi?id=629621 .

2010-09-14  Murray Cumming  <murrayc@murrayc.com>

	DBusConnection: Fix some (useful) compilation warnings.

	* gio/src/dbusconnection.[hg|ccg]: IOStream constructors and create*()
	methods: Actually use the slot parameter.

2010-09-14  Murray Cumming  <murrayc@murrayc.com>

	giomm: Added some DBusMessage and NetworkAddress methods.

	* gio/src/dbusmessage.hg: Added get_locked(), lock(), and copy().
	* gio/src/networkaddress.hg: Added get_scheme() and property.

2010-09-14  Murray Cumming  <murrayc@murrayc.com>

	Added VariantIter source files that I forget to git add before.

	* glib/src/variantiter.[hg|ccg]: Added missing files to git.

2010-09-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	Correct the ChangeLog entry of the last commit.

2010-09-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: DBusConnection: Wrap async constructors and create methods.

	* gio/src/dbusconnection.{ccg,hg}: Wrapped create(), create_finish().
	Renamed the create() method accepting an address instead of an
	IOStream to create_for_address().  Wrapped
	create_for_address_finish().  Wrapped pertinent constructors.  Wrapped
	start_message_processing().
	* gio/src/dbusproxy.{ccg,hg}: Renamed create() accepting a BusType
	parameter to create_for_bus().  Wrapped create_for_bus_finish().

2010-09-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: DBusServer: Corrected parameter order of constructor.

	* gio/src/dbusserver.{ccg,hg}: Reordered the parameters of the
	constructor and create() method so that the flag is the last optional
	parameter.

2010-09-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add various unwrapped methods.

	* gio/src/gio_methods.defs: Regenerated.
	* gio/src/gio_signals.defs: Corrected GVariant parameters of the
	GApplication signal defs (from GVariant to GVariant*).
	* gio/src/application.hg: Wrapped "action-with-data",
	"prepare-activation", and "quit-with-data" signals.
	* gio/src/settings.hg: Wrapped reset(), list_children(), list_keys()
	get_destroyed(), and the "writable_change_event" signal.

	* gio/src/asyncinitable.hg:
	* gio/src/settingsbackend.hg: Typos.

2010-09-13  Murray Cumming  <murrayc@murrayc.com>

	DBusMessage: Added methods.

	* gio/src/dbusconnection.hg: Move DBusCapabilityFlags to dbusmessage.h.
	* gio/src/dbusmessage.[hg|ccg]: Added create_from_blob(),
	set/get_byte_order(), get_header_fields(), bytes_needed(), to_blob(), and
	to_exception().
	* gio/src/gio_enums.defs: Regenerated with enums.pl.

2010-09-13  Murray Cumming  <murrayc@murrayc.com>

	Add VariantIter include to glibmm.h.

	* glib/glibmm.h:
	* glib/src/variant.hg: Add an _IGNORE() too.

2010-09-13  Murray Cumming  <murrayc@murrayc.com>

	Added VariantIter.

	* glib/src/glib_functions.defs:
	* glib/src/gobject_functions.defs: Regenerated with h2defs.py.
	* glib/src/filelist.am:
	* glib/src/variantiter.[hg|ccg]: Added the VariantIter class. Unfortunately
	it can't be much like a std::iterator until we fix the C API - see the
	comments.
	* glib/src/varianttype.hg: Added an m4 line to fix the build.

2010-09-13  Murray Cumming  <murrayc@murrayc.com>

	VariantBase: Added a byte/guchar specialization.

	* glib/src/variant_basictypes.cc.m4:
	* glib/src/variant_basictypes.h.m4: Add an extra argument to the macro,
	so we can handle g_variant_get_byte(), whose function/macro type name is not
	the same as its C type name. Each macro only uses 2 arguments, but it is
	clearer if both are the same, I think.
	* glib/src/variant.hg: Mark g_variant_get_byte() as handled.

2010-09-13  Murray Cumming  <murrayc@murrayc.com>

	Variant: Added some methods.

	* glib/src/variant.[hg|ccg]: Added get_maybe(), get_size(), get_data(),
	store(), and get_n_children().

2010-09-09  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: DBus: Wrap D-Bus Utilities and GDBusError C functions.

	* gio/src/dbuserror.{ccg,hg}:
	* gio/src/dbusutils.{ccg,hg}:
	* gio/src/filelist.am: Add new sources wrapping C functions from the
	D-Bus Utitiles and GDBusError gio DBus C API.  The GBDusError
	functions are wrapped in a new Gio::DBus::Error namespace.
	* gio/src/dbusownname.hg:
	* gio/src/dbuswatchname.hg: Typos.

2010-09-09  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: DBus Introspection Data Classes: Add const methods.

	* gio/src/dbusintrospection.hg: Add const methods returning
	DBusMethodInfo, DBusSignalInfo, DBusPropertyInfo and DBusInterfaceInfo
	classes to the DBusInterfaceInfo and DBusNodeInfo classes.
	* gio/src/dbusmethodinvocation.hg (get_method_info): Remove the
	non-const verrsion of this method because the C API only has a version
	returning a const GDBusMethodInfo.
	* tools/m4/convert_gio.m4: Move the conversion
	DBusMethodInvocation::get_method_info() over to the local .hg file
	because it is specific to that method.

2010-09-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: DBusProxy: Correct the use of DBusInterfaceInfo class.

	* gio/src/dbusproxy.{ccg,hg}: Use the DBusInterfaceInfo class wrapper
	instead of the C API one.  The wrapper is reference counted.
	(set/get_interface_info): Add these new methods, wrapping
	g_dbus_proxy_set_interface_info() and
	g_dbus_proxy_get_interface_info().
	* gio/src/dbusmethodinvocation.{ccg,hg} (get_method_info): Add this
	method, wrapping g_dbus_method_invocation_get_method_info().
	* tools/m4/convert_gio.m4: Add necessary conversions.

2010-09-07  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add D-Bus Introspection Data classes.

	* gio/src/dbusintrospection.{ccg,hg}:
	* gio/src/filelist.am: Add new sources containing the various
	introspection data classes (with their methods) representing
	annotations, methods, signals, properties and interfaces for the DBus
	API.
	* tools/m4/convert_gio.m4: Add the necessary conversions.

2010-09-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: DBusProxy: Add constructors and create methods.

	* gio/src/dbusproxy.{ccg,hg}: Add the constructors and create methods
	making sure that the order of the parameters allows for the
	Cancellable to be optional.  Also made sure that the GDBusInterface
	paramater is constant.

	* gio/src/dbusconnection.ccg (DBusConnection): Rename the "observer"
	property in the _CONSTRUCT macro to the correct
	"authentication-observer" name used in the new function.

	* gio/src/socketcontrolmessage.hg:
	* gio/src/unixfdlist.hg:
	* gio/src/unixfdmessage.hg: Correct typos in newin{}'s.

2010-09-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add initial DBusProxy implementation.

	* gio/src/dbusproxy.{ccg,hg}:
	* gio/src/filelist.am: Add new DBusProxy source.
	* tools/m4/convert_gio.m4: Add conversions for DBusProxy.

2010-09-03  Murray Cumming  <murrayc@murrayc.com>

	gmmproc: Fix the annoying warnings about documentation.

	* tools/pm/GtkDefs.pm: lookup_object(): Do not print a warning when the
	object is found, because this is used when guessing an object name while
	breaking apart a function name in DocsParser.pm.
	* gio/src/filelist.am:
	* gio/src/gio.defs:
	* gio/src/gio_extra_objects.defs:
	* glib/src/filelist.am:
	* glib/src/glib.defs:
	* glib/src/glib_extra_objects.defs: Added the *extra_objects.defs files,
	with hand-coded define-object sections, for objects that hide their *Class
	or *Iface struct declarations, which stops h2defs.py from generating
	define-object sections.
	These allows DocsParser.pm to know how to split mentions of C functions into
	the object and the method, so it can guess the C++ method name to mention
	instead.

2010-09-03  Murray Cumming  <murrayc@murrayc.com>

	giomm: Added remaining Proxy and ProxyResolver methods.

	* gio/src/proxy.[hg|ccg]: Added connect_async().
	* gio/src/proxyresolver.[hg|ccg]: Added lookup_async().

2010-09-02  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: DBus: watch_name(): Add DBusConnection implementation.

	* gio/src/dbuswatchname.ccg (watch_name): Add this forgotten
	function implementation accepting a DBusConnection instead of a
	BusType.

2010-09-02  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: DBus: Add watch/unwatch_name().

	* gio/src/dbuswatchname.{ccg,hg}:
	* gio/src/filelist.am: Add watch/unwatch_name() functions to the
	Gio::DBus namespace wrapping the Gio Bus Name Watching API.

2010-09-02  Murray Cumming  <murrayc@murrayc.com>

	giomm: Added Proxy, ProxyAddress and ProxyResolver.

	* gio/src/proxy.[hg|ccg]:
	* gio/src/proxyaddress.[hg|ccg]:
	* gio/src/proxyresolver.[hg|ccg]: New files, not complete.

2010-09-01  Murray Cumming  <murrayc@murrayc.com>

	2.25.4

2010-08-31  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: AsyncInitiable: Correct errors.

	* gio/src/asyncinitable.ccg (init_async_vfunc_callback): Take an extra
	reference of the cancellable when calling the member virtual method so
	the cancellable is not destroyed.
	(init_async_vfunc): Don't create a copy of the SlotAsyncReady because
	it would have already been copied in init_async() method invocation.

2010-08-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: AsyncInitable: Wrap virtual functions.

	* gio/src/gio_vfuncs.defs: Add the GAsyncInitable virutal functions.
	* gio/src/asyncinitable.{ccg,hg} (init_async_vfunc): Handwrite virtual
	function because of the slot parameter.
	(init_finish_vfunc): Likewise, because of the GError parameter.

2010-08-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	AsyncInitable: Remove duplicate license blocks.

	* gio/src/asyncinitable.hg:

2010-08-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	Include header files of newly added API in main include files.

	* gio/giomm.h:
	* glib/glibmm.h: Include the headers of newly added API in the main
	header files so the API is included automatically with the general
	includes.

2010-08-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add AsyncInitable interface.

	* gio/src/asyncinitable.ccg:
	* gio/src/asyncinitable.hg: Add source files for AsyncInitable
	interface.
	* gio/src/filelist.am: Mention the asyncinitable.hg file so the
	sources are built.
	* gio/src/dbusconnection.hg: Have DBusConnection derive from the
	AsyncInitable interface also.

2010-08-27  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: DBusConnection: Wrap synchronous new functions.

	* gio/src/dbusconnection.ccg:
	* gio/src/dbusconnection.hg: Wrap g_dbus_connection_new_sync() and
	g_dbus_connection_new_for_address_sync() functions (using constructors
	and create methods).

2010-08-24  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add UnixCredentialsMessage to the build.

	* tools/extra_defs_gen/generate_defs_gio.cc: Uncomment the code in the
	extra defs generation tool so that properties and signals for
	GUnixCredentialsMessage are generated.
	* gio/src/gio_signals.defs: Regenerate the signal and properties def
	file to get the properties of GUnixCredentialsMessage.
	* gio/src/filelist.am: Mention the unixcredentialsmessage.hg so that
	it is built.

2010-08-17  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add UnixFDMessage to the build.

	* gio/src/unixfdmessage.ccg: Include <gio/gunixfdmessage.h> instead
	of <gio/gio.h> so that the C API function definitions are correctly
	included.
	* gio/src/unixcredentialsmessage.ccg: Correct the include here also,
	but bug #627013 must be resolved before including
	UnixCredentialsMessage in the build.
	* gio/src/filelist.am: Mention the unixfdmessage.hg file so
	UnixFDMessage is built.  Left a TODO for UnixCredentialsMessage.
	* tools/extra_defs_gen/generate_defs_gio.cc: Updated so that the tool
	can be used to generate the signals and properties of GUnixFDMessage.
	* gio/src/gio_signals.defs: Regenerated to get the properties of
	GUnixFDMessage.

2010-08-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	Regenerate the docs.

	* gio/src/gio_docs.xml:
	* glib/src/glib_docs.xml: Regenerate the docs so that documentation is
	generated for methods that wrap newly added API.

2010-08-10  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Use ifdef in _WRAP_METHOD()s surrounded by #ifdefs.

	* gio/src/credentials.hg:
	* gio/src/dbusmessage.ccg:
	* gio/src/dbusmessage.hg: Use the ifdef option in the _WRAP_METHOD()s
	that wrap C functions that are built based on #ifdef conditions.  This
	allows the #ifdefs to be generated in the .cc files also.

	* gio/src/unixconnection.hg (receive_credentials): Use constversion
	in the _WRAP_METHOD() of the constant version so that the code of the
	non-constant version is used instead of generated new code.

	* gio/src/unixfdlist.hg: _IGNORE() C functions that are handwritten.
	(UnixFDList): Use explicit for single parameter constructor.

2010-08-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	glibmm: VariantBase: Correct typo in docs.

	* glib/src/variant.hg: Correct typos in class docs.
	* glib/src/variant.ccg (get_normal):
	(byteswap): Receive the GVariants from the C functions as const since
	the variants should not be modified.

2010-08-06  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: UnixConnection: Add receive/send_credentials() methods.

	* gio/src/unixconnection.hg: Add receive/send_credentials() which
	the UnixCredentialsMessage docs refers to.

2010-08-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	giomm: Add SocketControlMessage, Unix[Credentials|FD]Message classes.

	* gio/src/socketcontrolmessage.{ccg,hg}:
	* gio/src/filelist.am: Add SocketControlMessage sources and mention
	the .hg file so the sources are built.
	* gio/src/gio_vfuncs.defs: Add virtual functions for
	GSocketControlMessage.

	* gio/src/unixcredentialsmessage.{ccg,hg}:
	* gio/src/unixfdmessage.{ccg,hg}: Add UnixCredentialsMessage and
	UnixFDmessage sources but don't mention them because the gio include
	paradignm seems to be causing the C functions not to be declared upon
	compilation.
	* tools/extra_defs_gen/generate_defs_gio.cc: Add the
	GUnixCredentialsMessage and the GUnixFDMessage types but commented out
	because the types also appear not to be defined because of the gio
	include paradigm.

	* tools/m4/convert_gio.m4: Add necessary conversions.

2010-08-03  Murray Cumming  <murrayc@murrayc.com>

	2.25.3

2010-07-30  Murray Cumming  <murrayc@murrayc.com>

	generate_defs_gio.cc: Added some new types.

	* tools/extra_defs_gen/generate_defs_gio.cc: Added GApplication,
	GSettings and GSettingsBackend.

2010-07-30  Murray Cumming  <murrayc@murrayc.com>

	Application: Add create_*() overloads.

	* gio/src/application.[hg|ccg]: Add create_*() methods without argc and
	argv parameters, because these can be NULL.

2010-07-30  Murray Cumming  <murrayc@murrayc.com>

	Added Gio::Application, wrapping GApplication.

	* gio/src/filelist.am:
	* gio/src/application.[hg|ccg]: New files. We maybe want to move some of
	Glib::Main to this and deprecated Glib::Main, though it would then be
	annoying to use Glib::RefPtr there.

2010-07-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add Gio::DBus::[own|unown]_name().

	* gio/src/dbusconnection.hg: Wrap the BusType enum and add class docs.
	* gio/src/dbusownname.{ccg,hg}: Add new source files that implement
	the own_name() and unown_name() functions.  The functions are defined
	in a Gio::DBus namesapce.
	* gio/src/filelist.am: Mention the hg source file so that the sources
	are built.

2010-07-30  José Alburquerque  <jaalburqu@svn.gnome.org>

	VaraintBase: Use output parameters instead of returning values.

	* glib/src/variant.{ccg,hg}: get_normal_form(), byteswap(): Handwrote
	these methods so that output parameters can be used instead of
	returning the result.

2010-07-29  Murray Cumming  <murrayc@murrayc.com>

	Variant: Added some methods.

	* glib/src/variant.hg: Added some methods.

2010-07-29  Murray Cumming  <murrayc@murrayc.com>

	VariantType

	* glib/src/glib_functions.defs: Regenerated, manually changing some
	define-method lines to define-function lines.
	* glib/src/varianttype.[hg|ccg]: Added create_*() methods and a
	(std::string) constructor.
	* tools/m4/convert_glib.m4: Added a conversion.

2010-07-29  Murray Cumming  <murrayc@murrayc.com>

	VariantType: Add more appropriate constructor and add Gtk::Stock-like types.

	* glib/src/varianttype.[hg|ccg]: Add a cobject constructor that always copies,
	and an operator= to match.
	Add VariantType* objects to match the G_VARIANT_TYPE_* defines in C.

2010-07-29  Murray Cumming  <murrayc@murrayc.com>

	Added VariantType

	* glib/src/filelist.am:
	* glib/src/varianttype.[hg|ccg]: Added VariantType, though
	we still need to wrap the _new_*() functions as create_*().
	* tools/m4/convert_glib.m4: Added necessary conversions.

2010-07-28  Martin Braure de Calignon  <braurede@free.fr>

	giomm: DBusConnection: Added send_message_with_reply().

	* gio/src/dbusconnection.[hg|ccg]: Added send_message_with_reply()
	and send_message_with_reply_finish().

2010-07-27  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add Gio::DBusMethodInvocation.

	* gio/src/dbusmethodinvocation.{ccg,hg}:
	* gio/src/filelist.am: Add source files for Gio::DBusMethodInvocation.
	* tools/m4/convert_gio.m4: Add necessary conversions.
	* gio/src/unixfdlist.hg: Add missing @newin{}'s.
	* gio/src/dbusauthobserver.hg: Typo.

2010-07-27  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::Message: Wrap several methods.

	* gio/src/dbusmessage.ccg:
	* gio/src/dbusmessage.hg: Wrap create_method_error_literal(),
	get_body(), set_body(), [get|set|unset]_unix_fd_list().  Reordered
	method declarations according to the C declarations.  Added class and
	method docs.
	* tools/m4/convert_gio.m4: Added conversions for new methods above.

2010-07-27  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::UnixFDList: peek_fds(): Made return const for emphasis.

	* gio/src/unixfdlist.ccg:
	* gio/src/unixfdlist.hg: Remove redundant paragraph in class docs.
	(peek_fds): Made return const to emphasize that the file descriptors
	should not be modified.
	(steal_fds): Remove unnecessary const_cast<>.

2010-07-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::UnixFDList: Add params and returns in create() method docs.

	* gio/src/unixfdlist.hg (create): Add @param and @return to the method
	docs for clarity.

2010-07-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add Gio::UnixFDList.

	* gio/src/unixfdlist.ccg:
	* gio/src/unixfdlist.hg:
	* gio/src/filelist.am: Add the UnixFDList source files.

	* gio/src/dbusserver.hg (DBusServer): Add a description line to the
	class header.

2010-07-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBusServer: Use the _CONSTRUCT macro in the constructor.

	* gio/src/dbusserver.ccg (DBusServer): Use the _CONSTRUCT macro in the
	constructor so that its instances are constructed properly.

2010-07-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add Gio::DBusServer.

	* gio/src/dbusserver.ccg:
	* gio/src/dbusserver.hg:
	* gio/src/filelist.am: Add the new sources for Gio::DBusServer.

	* tools/extra_defs_gen/generate_defs_gio.cc:
	* gio/src/gio_signals.defs: Add the GDBusServer type to the extra defs
	generation utility and regenerate the signal defs file to get the
	signals and properties of GDBusServer.

	* tools/m4/convert_gio.m4: Add conversions for GDBusServer.
	Alphabetize the enum conversions.

	* gio/src/dbusauthobserver.hg: Typos.

2010-07-25  Murray Cumming  <murrayc@murrayc.com>

	DBusAuthObserver: Fix the build with latest glib.

	* gio/src/dbusauthobserver.hg: authorize_authenticated_peer signal:
	Use no_default_handler, so we don't try to access the (totally private)
	GDBusAuthObserverClass struct.

2010-07-23  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::DBusAuthObserver: Make parameters constant.

	* gio/src/dbusauthobserver.[hg|ccg]:
	* gio/src/filelist.am: Add the source files, this time making sure the
	parameters in the methods and signals are constant because this class
	is only meant to observe authentications of remote peers and tell if
	the connection is valid based on the parameters.  It doesn't look like
	the parameters should be changed in the signal handlers.

	* gio/src/gio_signals.defs:
	* tools/extra_defs_gen/generate_defs_gio.cc: Add changes not included
	in the addition of the Gio::DBusAuthObserver API.

	* tools/m4/convert_gio.m4: Fix the conversions so that they convert
	from const parameters to non-const for the C API.

2010-07-23  Murray Cumming  <murrayc@murrayc.com>

	Fix warnings.

	* gio/src/settings.hg:
	* glib/src/variant.hg: Remove extra ;s.

2010-07-23  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add Gio::DBusAuthObserver.

	* gio/src/dbusauthobserver.ccg:
	* gio/src/dbusauthobserver.hg:
	* gio/src/filelist.am: Add the source files of Gio::DBusAuthObserver
	and add them to 	Add Gio::DBusAuthObserver.

	* gio/src/dbusauthobserver.ccg:
	* gio/src/dbusauthobserver.hg:
	* gio/src/filelist.am: Add the source files of Gio::DBusAuthObserver
	and add them to the compile list.

	* tools/extra_defs_gen/generate_defs_gio.cc:
	* gio/src/gio_signals.defs: Add the G_TYPE_DBUS_AUTH_OBSERVER to the
	extra defs gio utility and regenerate the signals defs file with the
	utility to get the signals and properties of GDBusAuthObserver.

	* tools/m4/convert_gio.m4: Add the necessary conversions.the compile list.

	* tools/extra_defs_gen/generate_defs_gio.cc:
	* gio/src/gio_signals.defs: Add the G_TYPE_DBUS_AUTH_OBSERVER to the
	extra defs gio utility and regenerate the signals defs file with the
	utility to get the signals and properties of GDBusAuthObserver.

	* tools/m4/convert_gio.m4: Add the necessary conversions.

2010-07-22  Murray Cumming  <murrayc@murrayc.com>

	DBusMessage: Add get_header() and set_header().

	* gio/src/dbusmessage.[hg|ccg]: Add get_header(), using a VariantBase output
	parameter, and set_header().
	* gio/src/settings.[hg|ccg]: get_value(): Make this const too.
	* tools/m4/convert_gio.m4: Added conversions.

2010-07-22  Murray Cumming  <murrayc@murrayc.com>

	Variant<>: Make this usable as an ouput parameter.

	* glib/src/variant.[hg|ccg]: VariantBase: Added init(), like Value::init().
	This just changes the gobject_, with appropriate unref and ref.
	* gio/src/settings.[hg|ccg]: get_value(): Use an output parameter for the
	VariantBase, instead of a return value, as we do for Value, allowing the
	caller to use a derived (templated) type.
	* examples/settings/settings.cc: Show how Variant<> can be used.

2010-07-22  Murray Cumming  <murrayc@murrayc.com>

	Settings example: Minor change.

	* examples/settings/settings.cc: Remove the unnecessary use of
	Glib::ustring::raw().

2010-07-22  Murray Cumming  <murrayc@murrayc.com>

	Revert changes that I did not mean to commit yet.

2010-07-22  Murray Cumming  <murrayc@murrayc.com>

	Variant: Added some methods.

	* glib/src/variant.[hg|ccg]: ValueBase: Wrap some simple functions
	with _WRAP_METHOD().
	* glib/src/variant_basictypes.h.m4: Syntax changes, and make the castitem
	constructor explicit.
	* tools/m4/convert_gio.m4: Added necessary conversion.

	We need to decide how to use this in get*() methods and add some tests.

2010-07-22  Murray Cumming  <murrayc@murrayc.com>

	giomm: DBusMessage: Added several  methods.

	* gio/src/dbusmessage.hg: Wrapped the simple functions.
	* tools/m4/convert_gio.m4: Added necessary conversions.

2010-07-22  Murray Cumming  <murrayc@murrayc.com>

	giomm: DBusMessage: Added create_*() methods.

	* gio/src/dbusmessage.hg: Added create_signal(), create_method_call() and
	create_method_reply().
	* tools/m4/convert_gio.m4: Added necessary conversion.

2010-07-21  Murray Cumming  <murrayc@murrayc.com>

	Added DBusMessage and DBusConnection::send_message().

	* gio/src/gio_methods.defs: Regenerated.
	* gio/src/filelist.am:
	* gio/src/dbusmessage.[hg|ccg]: New wrapper for GMessage, with no methods
	yet.
	* gio/src/dbusconnection.hg: Added send_message().
	* tools/m4/convert_gio.m4: Added necessary conversions.
	* gio/src/credentials.hg: Uncommented out some methods now that the .defs
	are correct.
	* gio/src/socket.hg: Added get_credentials().

2010-07-21  Murray Cumming  <murrayc@murrayc.com>

	giomm: Added Credentials and DBusConnection::get_peer_credentials().

	* gio/src/gio_enums.defs: Regenerated.
	* gio/src/filelist.am:
	* gio/src/credentials.[hg|ccg]: New wrapper for GCredentials.
	* gio/src/dbusconnection.hg: Added get_peer_credentials().

2010-07-15  Murray Cumming  <murrayc@murrayc.com>

	Fix the build for a GDBusConnection API change.

	* gio/src/gio_methods.defs:
	* gio/src/gio_unix_functions.defs:
	* glib/src/glib_functions.defs:
	* glib/src/gobject_functions.defs: Regenerate.
	* glib/src/gdbusconnection.[hg|ccg]: Made close() async, adding close_finish()
	and close_sync().
	Added flush(), flush_finish() and flush_sync().

2010-06-29  Murray Cumming  <murrayc@murrayc.com>

	Added DBusConnection

	* gio/src/gio_enums.defs: Regenerated with tools/enums.pl.
	* gio/src/filelist.am:
	* gio/src/dbusconnection.[hg|ccg]: Added DBusConnection with just the
	simplest methods.
	I might put this in a GDBus namespace, and maybe even in a separate library.

2010-06-24  Murray Cumming  <murrayc@murrayc.com>

	Simplify VariantBase .hg code and use it in Settings.

	* glib/src/variant.[hg|ccg]: Use CLASS_OPAQUE_COPYABLE() instead of
	_CLASS_GENERIC() to avoid writing some stuff manually. This seems to be OK.
	Do not include the C header in our .h file.
	* tools/m4/convert_gio.m4: Added GVariantBase conversions.
	* gio/src/settings.hg: Added get_value() and set_value().

2010-06-22  Murray Cumming  <murrayc@murrayc.com>

	Clean up glib_functions.defs.

	* glib/src/glib_functions.defs: Remove bad definitions of function-pointers
	that cause annoying warnings during the build.

2010-06-19  José Alburquerque  <jaalburqu@svn.gnome.org>

	Glib::Variant<>: Use gmmproc files so wrapping is not done manually.

	* glib/src/glib_functions.defs: Regenerate to get the GVariant
	functions.
	* glib/src/variant.ccg:
	* glib/src/variant.hg:
	* glib/src/filelist.am: Add the new .hg and .ccg files and mention
	them.  Wrapping is now done using gmmproc instead of handwriting the
	methods.
	* glib/glibmm/variant.cc:
	* glib/glibmm/variant.h:
	* glib/glibmm/filelist.am: Remove these files and their mentions
	because now they are written as .hg and .ccg files.
	* glib/src/variant_basictypes.h.m4: Add docs.

2010-06-19  Koop Mast  <kwm@freebsd.org>

	Restore lost #else block to fix build without __STDC_ISO_10646__

	* glib/glibmm/ustring.cc: Add back an #else block that was probably lost
	while automatically removing the no-exceptions #if/#else code.

2010-06-18  José Alburquerque  <jaalburqu@svn.gnome.org>

	Preliminary implementation of Glib::Variant<> classes.

	* glib/glibmm/variant.cc:
	* glib/glibmm/variant.h:
	* glib/src/variant_basictypes.cc.m4:
	* glib/src/variant_basictypes.h.m4: Add an initial implementation of
	of the Glib::Variant<> classes which wrap glib's GVariant API.

2010-06-18  Murray Cumming  <murrayc@murrayc.com>

	2.25.2

2010-06-18  Murray Cumming  <murrayc@murrayc.com>

	Settings: Fix the build with the latest glib.

	* gio/src/settingsbackend.[hg|ccg]: Add this interface. Notice the
	comment about the semi-private get_type() function.
	* gio/src/filelist.am: Mention the new files.
	* gio/src/settings.hg: Adapt to the changed glib API, using
	a SettingsBackend backend instead of a string context.

2010-06-08  Murray Cumming  <murrayc@murrayc.com>

	Mark version in ChangeLog

2010-06-08  Murray Cumming  <murrayc@murrayc.com>

	Use GLIBMM_DISABLE_DEPRECATED on StreamIoChannel.

	* glib/glibmm/streamiochannel.[h|cc]: Put #ifndef GLIBMM_DISABLE_DEPRECATED
	around this long-since-deprecated class.

2010-06-08  Murray Cumming  <murrayc@murrayc.com>

	Remove a junk line from VolumeMonitor.hg.

	* gio/src/volumemonitor.hg: Remove this line because it must have been
	an accidental paste or some other confusion:
	gboolean (*is_supported)          (void);
	It is API but not anything anybody ever would have used.

2010-06-08  Murray Cumming  <murrayc@murrayc.com>

	2.25.1

2010-06-07  Daniel Elstner  <danielk@openismus.com>

	Update list of ignored files

2010-06-07  Daniel Elstner  <danielk@openismus.com>

	Do not install the schema of the gsettings example

	* examples/Makefile.am: Do not install the schema file of the settings
	example to the user's system.  Instead, compile the binary shema cache
	in a local directory and have the example use that.  As a side effect,
	this also resolves the "make distcheck" failure when trying to install
	the schema.
	* examples/settings/settings.cc (main): Do not try to determine the
	schema directory from the executable name, as it depends too much on
	the libtool setup with the hidden .libs directory being part of the
	path name.  Requiring the user to change to the example directory is
	good enough.  Also, initialize the C++ locale on program startup, and
	call Gio::init() instead of Glib::init().
	(on_key_changed): Call ustring::raw() to suppress the locale-aware
	comparison ustring performs by default.

2010-06-06  Murray Cumming  <murrayc@murrayc.com>

	Documentation: Mention module names in Enums and Flags doxygen groups.

	* tools/m4/enum.m4: Add the module name (such as gdkmm or gtkmm) to the
	doxygen Enums and Flags groups, to avoid duplicate names appearing in the
	Modules list.

2010-06-06  Murray Cumming  <murrayc@murrayc.com>

	Settings: Fix the build with the latest glib from git master.

	* gio/src/gio_methods.defs: Remove extra length parameters, removed from the
	C API. This is a generated file, but this change is simple.
	* gio/src/settings.[hg|ccg]: get_string_array(), set_string_array():
	Remove the length parameter, and just use _WRAP_METHOD() now that it is simple
	enough for that.
	* tools/m4/convert_gio.m4: Add a necessary conversion.
	* glib/src/glib_functions.defs: Remove some bad unused definitions that
	were causing annoying warnings.

2010-06-06  Murray Cumming  <murrayc@murrayc.com>

	Remove default conversion to StringArrayHandle

	* tools/m4/convert_gio.m4: Remove a default conversion from char** to
	StringArrayHandle, because there can be no good default, because each use
	can have different ownership, so it risks hiding an error.
	* gio/src/drive.hg:
	* gio/src/fileinfo.hg:
	* gio/src/filenamecompleter.hg:
	* gio/src/volume.hg: Add a local #m4 conversion instead.
	One day we will have the new introspection information (with the ownership)
	available to gmmproc so we don't need to do this.

2010-06-04  Chris Kühl  <blixtra@gmail.com>

	Removal of length parameter for g_settings_[gs]et_strv

	* gio/src/settings.ccg: Removed length parameter from
	get_string_array and set_string_array.

2010-06-04  Murray Cumming  <murrayc@murrayc.com>

	Avoid compiler warning.

	* examples/settings/settings.cc: Comment out an unused paramter to
	fix a compiler warning, to partly fix the distcheck.

2010-06-02  José Alburquerque  <jaalburqu@svn.gnome.org>

	Gio::Settings: [get|set]_strv(): Rename to [get|set]_string_array().

	* gio/src/settings.ccg:
	* gio/src/settings.hg ([get|set]_strv): Rename to *_string_array()
	which is more readable.

2010-06-01  Jonathon Jongsma  <jonathon@quotidian.org>

	Fix make dist with gsettings example

2010-06-01  Murray Cumming  <murrayc@murrayc.com>

	Add missing GLIBMM_VFUNCS_ENABLED to avoid breaking existing code.

	* glib/glibmmconfig.h.in: Added missing GLIBMM_VFUNCS_ENABLED.

2010-06-01  Murray Cumming  <murrayc@murrayc.com>

	Gio::Settings: Make get_has_unapplied() const.

	* gio/src/settings.hg: get_has_unapplied(): Make this const.

2010-05-31  José Alburquerque  <jaalburqu@svn.gnome.org>

	Wrapped new glib-2.26 methods.

	* configure.ac: Bump the glib requirement up to 2.25.7 because of the
	new methods that are wrapped.
	* glib/src/glib_docs.xml:
	* glib/src/glib_functions.defs: Regenerate to get new methods and the
	docs for them.
	* glib/src/keyfile.ccg:
	* glib/src/keyfile.hg (get_boolean): Added method overload (as other
	get_*() methods have).
	(get_int64, get_uint64, set_int64, set_uint64):
	* glib/src/regex.hg (get_compile_flags, get_match_flags): Wrapped new
	methods.
	* gio/src/settings.hg:
	* gio/src/socket.hg: Add some forgotten _IGNORE's and @newin{}'s.

2010-05-31  Murray Cumming  <murrayc@murrayc.com>

	Remove the reduced API options and code, as discussed on mailing list.

	* configure.ac: Removed the --enable-api-exceptions, --enable-api-properties,
	--enable-api-vfuncs and --enable-api-default-signal-handlers options.
	* build/reduced.m4: Removed.
	* tools/m4/*.m4:
	* tools/pm/Output.pm: Remove any use of ifdefs and auto_ptr for reduced API.
	* *.[hg|ccg|h|cc]: Remove the idefed code.

2010-05-31  Daniel Elstner  <danielk@openismus.com>

	Avoid compiler warning in TimeVal::as_double()

	* glib/glibmm/timeval.h (TimeVal::as_double): Cast long int operands
	to double explicitly, to avoid a conversion warning due to possible
	loss of precision.  Reported by Alexander Shaduri, GNOME bug #617463.

2010-05-28  José Alburquerque  <jaalburqu@svn.gnome.org>

	Settings: Add [get|set]_strv().

	* gio/src/settings.ccg:
	* gio/src/settings.hg: Added [get|set]_strv().  Also added a
	get_child() const version.  Reordered signal wrappings to reflect the
	order of the C API docs.

2010-05-27  José Alburquerque  <jaalburqu@svn.gnome.org>

	OptionGroup: set_translate_slot(): Rename to set_translate_func().

	* glib/src/optiongroup.ccg:
	* glib/src/optiongroup.hg set_translate_slot(): Rename to
	set_translate_func() which is more like the C API's name.

2010-05-27  José Alburquerque  <jaalburqu@svn.gnome.org>

	OptionGroup: Add set_translate_slot().

	* glib/src/optiongroup.ccg:
	* glib/src/optiongroup.hg: Wrap g_option_group_set_translate_func().

2010-05-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add _IGNORE's for g_iconv().

	* glib/src/date.hg:
	* glib/src/fileutils.hg:
	* glib/src/markup.hg:
	* glib/src/optionentry.hg:
	* glib/src/shell.hg:
	* glib/src/spawn.hg:
	* glib/src/thread.hg:
	* glib/src/unicode.hg:
	* glib/src/uriutils.hg: For some reason, gmmproc thinks that g_iconv
	should be wrapped in these files so include _IGNORE's so that it is
	clear what has not been wrapped yet.

2010-05-25  José Alburquerque  <jaalburqu@svn.gnome.org>

	Wrap couple of unwrapped methods.

	* gio/src/desktopappinfo.hg: Wrap get_filename().
	* glib/src/keyfile.hg: Wrap load_from_dirs().
	* glib/src/convert.hg:
	* glib/src/valuearray.hg: some _IGNORE()'s.

2010-05-05  José Alburquerque  <jaalburqu@svn.gnome.org>

	gmmproc: Quote the property docs to avoid losing text after commas.

	* tools/pm/Output.pm: Quote the property docs for the _PROPERTY_PROXY
	macros by first changing the quotes, quoting the docs and then
	changing the quotes back.  This avoids losing the contents after
	possible commas in property docs.  (Using the standard m4 quotes
	leaves trailing single quotes for some reason).

	Fixes Bug #603930 (Jonatan Olofsson).

2010-05-03  Murray Cumming  <murrayc@murrayc.com>

	Documentation: Add more links to main page, and mention giomm.

	* glib/glibmm.h: Add more doxggen links to groups and classes, based on
	http://www.gtkmm.org/documentation.shtml and a look at the classes list.
	Mention giomm features and add giomm to the pkg-config calls and mention
	giomm.h

2010-05-03  David King  <davidk@openismus.com>

	Further changes to main page documentation

	* glib/glibmm.h: Some minor changes to the main page documentation.

2010-05-03  David King  <davidk@openismus.com>

	Improvements to main page documentation

	* glib/glibmm.h: Add external links and compilation example.

2010-04-29  José Alburquerque  <jaalburqu@svn.gnome.org>

	gio_docs.xml: Regenerate with the new doc extraction tool.

	* gio/src/gio_docs.xml: Regenerate docs with the latest
	docextract_to_xml.py in pygobject to get better docs in general.

2010-04-27  David King  <davidk@openismus.com>

	Further changes to main page documentation

	* glib/glibmm.h: Some minor changes to the main page documentation.

2010-04-23  David King  <davidk@openismus.com>

	Improvements to main page documentation

	* glib/glibmm.h: Add external links and compilation example.

2010-04-22  Jonathon Jongsma  <jonathon@quotidian.org>

	Require glib 2.25.1 for GSettings

2010-04-21  Alex Vallée  <alex@alexvallee.com>

	Wrap function g_listenv()

2010-04-21  Jonathon Jongsma  <jonathon@quotidian.org>

	Add basic Gio::Settings example

2010-04-20  Jonathon Jongsma  <jonathon@quotidian.org>

	Initial implementation of Gio::Settings

2010-04-20  Jonathon Jongsma  <jonathon@quotidian.org>

	Re-generate defs for GSettings

2010-04-20  Jonathon Jongsma  <jonathon@quotidian.org>

	Bug 581811 - Gio::content_type_guess() miss the version with a NULL filename

	Pass NULL to the C function when the filename is an empty string.  The
	alternative of providing an overloaded function without the filename parameter
	would have resulted in 6 overloads of this function, which is just too much, so
	I chose this path instead.

2010-04-18  Olav Vitters  <olav@vitters.nl>

	Fix doap file

2010-04-16  David King  <davidk@openismus.com>

	Add main page to Doxygen documentation

	* docs/Makefile.am: Parse glib/glibmm.h for documentation.
	* glib/glibmm.h: Add main page to Doxygen documentation.

2010-04-16  Murray Cumming  <murrayc@murrayc.com>

	2.24.1

2010-04-13  José Alburquerque  <jaalburqu@svn.gnome.org>

	One more regeneration of docs to avoid gmmproc parsing errors.

	* gio/src/gio_docs.xml:
	* glib/src/glib_docs.xml: Regenerated with a fixed
	docextract_to_xml.py script to avoid parsing errors by &...;
	expressions that gmmproc does not understand.

2010-04-12  Armin Burgmeier  <armin@arbur.net>

	Add compose example to MSVC project files

2010-04-12  Armin Burgmeier  <armin@arbur.net>

	* examples/compose/main.cc: Don't use ustring::format with std::fixed
	with MSVC 2005 or below (see #599340).

	* MSVC_Net2005/examples/compose/compose.vcproj:
	* MSVC_Net2005/glibmm.sln:
	* MSVC_Net2008/examples/compose/compose.vcproj:
	* MSVC_Net2008/glibmm.sln: Added the compose example for both MSVC
	versions.

2010-04-12  Alex Vallee  <avallee@hotmail.com>

	UnixOutputStream: Fix the constructor to use the correct property name.

	* gio/src/unixoutputstream.hg: Correct the constructor parameter name
	used in the _WRAP_CTOR() call. We had already fixed the property name
	but had forgotten to fix this, which affects the generated implementation.
	Fixes bug #615482

2010-04-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	Regenerate docs with the new docextract_to_xml.py script.

	* gio/src/gio_docs.xml:
	* glib/src/glib_docs.xml: Regenerated with the new documentation
	extraction script to take advantage of the new generation method it
	uses.

2010-04-02  Armin Burgmeier  <armin@arbur.net>

	Update MSVC projects for 2.24

2010-03-29  Murray Cumming  <murrayc@murrayc.com>

	2.24.0

2010-03-26  Murray Cumming  <murrayc@murrayc.com>

	2.23.4

2010-03-26  Jonathon Jongsma  <jonathon.jongsma@collabora.co.uk>

	Gio::File: Add TypeTraits to fix Gtk::FileChooser::get_files() in gtkmm.

	* gio/src/file.hg: add TypeTraits to allow concrete implementations
	of GFile to be wrapped properly.  For example, this fix allows
	Gtk::FileChooser::get_files() to work properly (Fixes #590940)

2010-03-26  Murray Cumming  <murrayc@murrayc.com>

	Add regression test for Bug #613250.

	* tests/Makefile.am
	* tests/glibmm_ustring_format/main.cc: Added a regression test for the
	previously-commited fix, based on code in bug #613250 from Debarshi Ray.

2010-03-26  Debarshi Ray  <debarshir@src.gnome.org>

	Bug #613250 - Overload Glib::ustring::FormatStream::stream for char *

2010-03-24  Murray Cumming  <murrayc@murrayc.com>

	ThemedIcon: Added get_names().

	* gio/src/themedicon.[hg|ccg]: Add get_names() manually because we have
	a strange error when trying to use _WRAP_METHOD() for it.
	Bug #612584 (Markus Schwab)

2010-03-23  Alexey Kosilin  <kosilin@gmail.com>

	MemoryInputStream: Correct data loss/corruption with binary data.

	* gio/src/memoryinputstream.ccg: add_data(): Use g_memdup() instead of
	g_strdup() on data that could have a null in the middle.
	Bug #609552 (Holger Seelig)

2010-03-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	Revert accidentally pushed commits.

	* ChangeLog-ValueArrayTest:
	* ChangeLog.local:
	* tests/glibmm_valuearray/main.cc:
	* tools/docextract_to_xml.pl: Revert accidentally pushed commits which
	should be pushed with bugs that were filed.

2010-03-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	Regenerate defs files.

	* gio/src/gio_enums.defs:
	* gio/src/gio_methods.defs:
	* glib/src/glib_enums.defs:
	* glib/src/glib_functions.defs:
	* glib/src/gmodule_enums.defs:
	* glib/src/gmodule_functions.defs:
	* glib/src/gobject_enums.defs:
	* glib/src/gobject_functions.defs: Regenerate defs file, particularly
	the enum defs file with the new enum generation tool.

2010-03-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	ValueArray Example: Get values as references in loops.

	* tests/glibmm_valuearray/main.cc (main): Get values as references
	instead of copying them in both for loops.

2010-03-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add a tool to extract C documentation for gmmproc.

	* tools/docextract_to_xml.pl: Add a tool to extract documentation from
	C source files.  The processing of the description of C functions
	seems a little better than the docextract_to_xml.py script which is
	normally used.  Since it is shorter, it might be a little easier to
	make changes to how the extracting of C docs is done for the
	convenience of *mm projects.

2010-03-10  David King  <davidk@openismus.com>

	Reorder assignment to LDADD and giomm_ldadd in tests/Makefile.am

	* tests/Makefile.am: Reorder values assigned to LDADD and
	giomm_ldadd to place built libraries before system libraries.
	Fixes GNOME bug #610854.

2010-03-09  Krzesimir Nowak  <qdlacz@gmail.com>

	Make splitting tokens more robust in GtkDefs.pm and Enum.pm.

	* tools/pm/Enum.pm: Written splitter for values in
	(flags|enum)-extended defs.
	* tools/pm/GtkDefs.pm: Written splitter for general defs.

2010-03-08  Murray Cumming  <murrayc@murrayc.com>

	2.23.3

2010-03-08  Krzesimir Nowak  <qdlacz@gmail.com>

	Updated enum.pl script.

	* tools/enum.pl: Updated to work with `use strict' and
	`use warnings', prints original enums in comments above every enum
	defs, added --omit-deprecated (just omits everything deprecated)
	option, handles most of enums and flags (especially flags!)
	properly, generates proper nicks for enums with one value, prints
	warnings to stderr about several stuff, uses some primitive
	heuristics to detect whether an enum is enum or flags. It is
	a better hack, but still a hack.

2010-03-08  Murray Cumming  <murrayc@murrayc.com>

	AsyncResult: Add get_source_object_base(), deprecating get_source_object().

	* gio/asyncresult.[hg|ccg]: Deprecate get_source_object(), replacing it
	with get_source_object_base(), because in giomm, the C++ wrapper object
	might be a Glib::Interface, but not a Glib::Object (though the underlying
	C instance must be a GObject). This happens if giomm does not know about
	the GType of the underlying C Object, which is a legitimate situation.
	* tests/giomm_asyncresult_sourceobject/main.cc: Added this test case
	from Michael Hasselmann, from bug #608269.

2010-03-08  Murray Cumming  <murrayc@murrayc.com>

	Regenerated more .defs.

	* gio/src/gio_enums.defs:
	* glib/src/glib_enums.defs: Regenerated with enums.pl
	* gio/src/gio_methods.defs: Regenerated with h2defs.py

2010-03-08  Murray Cumming  <murrayc@murrayc.com>

	glib/src/glib_functions.defs: Regenerated with h2defs.py

2010-03-08  Debarshi Ray  <debarshir@src.gnome.org>

	Bug #611521 - Free Gio::SlotFileProgress (and friends) at completion

	The Gio::SlotFileProgress slots (and their friends) used in operations like
	Gio::File::copy, Gio::File::copy_async and Gio::File::move should not freed
	when their C callbacks are invoked for the first time. Instead they should be
	freed after the operation has completed.

2010-02-27  Daniel Elstner  <daniel.kitta@gmail.com>

	Avoid compiler warning in resolver example

	* examples/network/resolver.cc (interrupted): Check the return value
	of the write() call to avoid a warning from GCC.  Save and restore
	the value of errno to make the signal handler reentrant.  Get rid of
	the signal() call to re-establish the default handler, as there is
	not much of a point in doing so for this handler.
	(main): Create the pipe before installing the signal handler.

2010-02-22  Michael  <space3000@gmail.com>

	Gio::MemoryInputStream::add_data(): Minor documentation fix.

	* gio/src/memoryinputstream.hg: Move a deprecation warning to the
	correct method overload.

2010-02-06  Murray Cumming  <murrayc@murrayc.com>

	IOStream: get_input_stream(), get_output_stream(): Fix reference counting.

	* gio/src/iostream.hg: get_input_stream(), get_output_stream(): Use refreturn
	to avoid a crash as mentioned in bug #607554.

2010-02-06  Murray Cumming  <murrayc@murrayc.com>

	MemoryOutputStream: Add properties.

	* gio/src/gio_signals.defs: Regenerated.
	* gio/src/memoryoutputstream.hg: Add properties, as suggesed in bug #605710.

2010-02-06  Murray Cumming  <murrayc@murrayc.com>

	MemoryOutputStream: Fix the constructor.

	* gio/src/memoryoutputstream.hg: Constructor and create(): Rename the len
	parameter to size, to match the properties, so the constructor works.
	Bug #605710

2010-02-05  Murray Cumming  <murrayc@murrayc.com>

	2.23.2:

	Also:
	NEWS: Added 2.23.1 entry from the tarball. Jonathan probably forgot
	to commit/push it.
	ChangeLog: Added commit entries for changes that had no ChangeLog
	entries. Not happy about this.

2010-02-05  Murray Cumming  <murrayc@murrayc.com>

	UnixInputStream: Fix the constructor.

	* gio/src/unixinputstream.hg: Constructor and create(): Rename the
	close_fd_at_close parameter to close_fd to match the properties (and the
	C function), so our constructor works.
	Bug #608665 (Matt Marsh)

2010-02-05  Murray Cumming  <murrayc@murrayc.com>

	Add TODO

2010-01-29  Murray Cumming  <murrayc@murrayc.com>

	Regenerated method .defs. Added a Resolver signal.

	* gio/src/gio_enums.defs: Removed GSocketMsgFlags because it contained
	an #error and the values are non-numeric anyway.
	* gio/src/gio_methods.defs: Regenerated with h2defs.py
	* glib/src/glib_functions.defs: Regenerated with h2defs.py, removing
	badly-generated ones that try to mention function pointers.
	* gio/src/resolver.hg: Added reload signal.

2010-01-29  Murray Cumming  <murrayc@murrayc.com>

	Use 0 instead of NULL.

	* gio/src/*.ccg
	* glib/src/*.ccg: Use 0 instead of NULL because this is C++ where
	NULL is generally not a good idea. I didn't see any places where it
	was a real problem though.

2010-01-29  Murray Cumming  <murrayc@murrayc.com>

	Use Glib::unwrap() instead of ->gobj(),

	* gio/src/*.ccg: Use Glib::unwrap() instead of ->gobj(), so we don't
	crash if people pass in null RefPtr<>s, which they might do by
	accident, or if we have not wrapped all the may-be-null cases as
	method overrides.

2010-01-29  Murray Cumming  <murrayc@murrayc.com>

	File: Added has_parent() and supports_thread_contexts().

	* gio/src/file.[hg|ccg]: Added has_parent(), supports_thread_contexts().

2010-01-28  Murray Cumming  <murrayc@murrayc.com>

	File: Added start_mountable(), stop_mountable(), poll_mountable().

	* gio/src/drive.[hg|ccg]:
	* gio/src/mount.hg:
	* gio/src/volume.hg: Change some includes to allow file.h to include
	more.
	* gio/src/file.[hg|ccg]: Added start_mountable(), stop_mountable(),
	poll_mountable() and the *_finish() methods. The awful documenation
	will be improved when I have improved it (tomorrow) for the C functions.

2010-01-28  Murray Cumming  <murrayc@murrayc.com>

	file.hg: Correct/Add newin2p* doxygen comments.

2010-01-28  Murray Cumming  <murrayc@murrayc.com>

	File: Added create_file_readwrite() and creat_file_readwrite_async().

	* gio/src/file.[hg|ccg]: Added create_file_readwrite(),
	create_file_readwrite_async() and create_file_readwrite_finish().

2010-01-28  Murray Cumming  <murrayc@murrayc.com>

	unmount_mountable(), eject_mountable(): Add overrides with MountOperation.

	* gio/src/file.[hg|ccg]: unmount_mountable(), eject_mountable():
	Reimplement these with the new *_with_operation functions.
	Undeprecate them - that should not have happened without replacements.
	Added unmount_mountable() and eject_mountable() overrides with
	MountOperation parameters. Unfortunately there are now 6 of each.

2010-01-28  Murray Cumming  <murrayc@murrayc.com>

	File, Cancellable: Added some new methods.

	* gio/src/cancellable.hg: Added release_fd() and make_polldf().
	* gio/src/file.[hg|ccg]: Added open_readwrite(), open_readwrite_async()
	and finish_readwrite().
	Added replace_readwrite(), replace_readwrite_async() and
	finish_replace_readwrite().
	* tools/m4/convert_gio.m4:Added conversion for FileIOStream.
	* glib/src/glib_enums.defs: Fix an #error that enum.pl has put there
	for some reason.

2010-01-06  Alexander Shaduri  <ashaduri@gmail.com>

	Bug #594173 - NodeTree::get_root() violates const-correctness

	Explicitly cast the const away here to avoid an error with Intel compiler

2010-01-06  Krzesimir Nowak  <qdlacz@gmail.com>

	Bug #606100 - Fix wrapping properties.

	* gio/src/networkservice.hg: NetworkService has "domain" property,
	instead of "hostname".
	* gio/src/socketconnection.hg:
	* gio/src/tcpconnection.hg: SocketConnection has no
	"graceful-disconnect" property - it belongs to TcpConnection.

	https://bugzilla.gnome.org/show_bug.cgi?id=606100

2010-01-05  Jonathon Jongsma  <jonathon@quotidian.org>

	Bug #606146 - Relax the glib requirement

	I was accidentally too aggressive with bumping the glib requirement.  This
	resulted in the last release depending on an unreleased version of glib from
	git.

2010-01-05  Jonathon Jongsma  <jonathon@quotidian.org>

	Rename btree.* to balancedtree.*

	This follows the standard glibmm conventions better, even though it's a bit of a
	pain to type.

2010-01-05  Jonathon Jongsma  <jonathon@quotidian.org>

	Fix up some formatting issues for BalancedTree

2010-01-05  Szilárd Pfeiffer  <mailbox@pfeifferszilard.hu>

	Fixed several bugs of balanced binary tree wrapper.

2010-01-05  Szilárd Pfeiffer  <mailbox@pfeifferszilard.hu>

	Implemented reference counting for BalancedTree.

2010-01-05  Szilárd Pfeiffer  <mailbox@pfeifferszilard.hu>

	Implement GTree wrapper

	Also add some tests for the new class

2010-01-06  Daniel Elstner  <daniel.kitta@gmail.com>

	Fine-tune Doxygen configuration to improve output

	* docs/reference/Doxyfile.in (SHOW_INCLUDE_FILES): Enable option, as
	it looks better than SHOW_USED_FILES and can be adjusted by means of
	the @headerfile command.
	(SHOW_USED_FILES): Disable.
	(ALPHABETICAL_INDEX): Enable alphabetical class index.
	(PREDEFINED): Predefine G_GNUC_INTERNAL in anticipation of explicit
	symbol visibility attributes.
	(CLASS_DIAGRAMS): Enable to get class inheritance graphs without any
	of the other graph options.
	(DOT_FONTNAME): Change to Sans to avoid the bad hinting for FreeSans
	at least on my system, which resulted in blurry graph labels.
	(COLLABORATION_GRAPH), (GROUP_GRAPHS), (TEMPLATE_RELATIONS): Disable
	additional graphs to reduce the noise.

2010-01-03  Jonathon Jongsma  <jonathon@quotidian.org>

	A bunch of minor doxygen cleanups around the tree

	Mostly correct the 'since 2.24' notation on all of the network classes, and fix
	up a variety of other little issues.

2010-01-03  Jonathon Jongsma  <jonathon@quotidian.org>

	wrap g_socket_connection_factory_create_connection()

	Wrapped this as SocketConnection::create().  I guess it's debatable whether this
	API choice is a good idea or not, but it seem to make sense to me.

2010-01-03  Jonathon Jongsma  <jonathon@quotidian.org>

	Add non-cancellable versions of a bunch of SocketClient functions

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	fix warning in examples to make distcheck happy

	warnings are errors in distcheck

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Update NEWS, bump versioning for 2.23.0 release

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Add some more .gitignore stuff

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Wrap missing properties of SocketClient, SocketConnection, SocketListener

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Wrap ThreadedSocketService

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Wrap SocketService

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Re-generate gio signal defs

	Add new classes to the gen_defs script

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Accidentally marked wrong SocketConnection as non-win32

	Correctly mark the UnixConnection as non-win32 instead of the TcpConnection

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Wrap SocketListener

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Wrap SocketClient, SocketConnection, TcpConnection, UnixConnection

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	_IGNORE a couple API that we've implemented manually

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Wrap Gio::Mount::get_default_location()

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Re-generate gio_docs.xml

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Regenerate gio_methods.defs, bump glib requirement

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Fix another bug in resolver example

	I wasn't splitting the service triples properly.  resolving a service should
	work now.  For example, try: ./resolver xmpp-server/tcp/google.com

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Take an extra ref from the return of g_inet_socket_address_get_address

	This was causing a bunch of warnings in the examples

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Add socket-server example

	InetAddress needed a couple additions / modifications for the example to work
	properly.

2010-01-02  Jonathon Jongsma  <jonathon@quotidian.org>

	Add socket-client example

2009-12-17  Armin Burgmeier  <armin@arbur.net>

	ifdef-out inclusion of files not available on Windows in giomm.h

2009-12-16  Armin Burgmeier  <armin@arbur.net>

	* gio/giomm.h: Don't include files on Windows that are not available
	on that platform.

2009-12-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	Make build successful when exceptions, vfuncs, etc. are disabled.

	* gio/src/iostream.hg (close): Include a definition for when
	exceptions are disabled.
	* glib/src/keyfile.ccg: Correct some typos related to exceptions
	disabled.
	* gio/src/socket.ccg:
	* gio/src/socket.hg: Included definitions and code for when
	exceptions are disabled.
	* gio/src/resolver.ccg (hostname_to_ascii):
	(hostname_to_unicode): Included returns to avoid warnings.

2009-11-28  Jonathon Jongsma  <jonathon@quotidian.org>

	Re-enable network IO stuff (Socket, Resolver, etc)

	There is a bit of a problem with some of the async stuff that is exhibited by
	the included resolver example.  For example, when run the example with the
	following arguments:

	./resolver -c domain.com

	There are several critical warnings printed to the terminal, and I have not been
	able to debug it to find the cause yet.  I think it must have something to with
	the lifetime of the enumerator object during the next_async() calls and
	sigc::bind, etc. but I can't figure it out yet.

2009-11-28  Jonathon Jongsma  <jonathon@quotidian.org>

	Re-enable network IO stuff (GSocket, etc)

2009-11-23  Murray Cumming  <murrayc@murrayc.com>

	Regex: Slight documentation improvement.

	* tools/m4/class_opaque_refcounted.m4: refererence()/unreference():
	Use the same doxygen comments as on ObjectBase::reference/unreference()
	so this shows up, for instance, on Glib::Regex.

2009-10-22  Armin Burgmeier  <armin@arbur.net>

	Added new files to MSVC projects

2009-10-22  Armin Burgmeier  <armin@arbur.net>

	* MSVC_Net2005/giomm/giomm.vcproj:
	* MSVC_Net2005/glibmm/glibmm.vcproj:
	* MSVC_Net2008/giomm/giomm.vcproj:
	* MSVC_Net2008/glibmm/glibmm.vcproj: Added new files in 2.22 to the
	projects.

	* MSVC_Net2005/examples/keyfile/keyfile.vcproj:
	* MSVC_Net2005/examples/properties/properties.vcproj:
	* MSVC_Net2005/examples/regex/regex.vcproj:
	* MSVC_Net2008/examples/keyfile/keyfile.vcproj:
	* MSVC_Net2008/examples/properties/properties.vcproj:
	* MSVC_Net2008/examples/regex/regex.vcproj: Added projects for these
	examples.

	* MSVC_Net2005/glibmm.sln:
	* MSVC_Net2008/glibmm.sln:
	* MSVC_Net2005/filelist.am:
	* MSVC_Net2008/filelist.am: Added the new projects.

2009-09-21  Jonathon Jongsma  <jonathon@quotidian.org>

	Update for 2.22.1

2009-09-21  Daniel Elstner  <danielk@openismus.com>

	Fix KeyFile build with exceptions disabled

	* glib/src/keyfile.hg (Glib::KeyFile): Correct repeated syntax
	error in the code that is built when GLIBMM_EXCEPTIONS_ENABLED
	is not defined.  Also remove the bogus default argument values
	appearing in the middle of the argument list.

2009-09-21  Jonathon Jongsma  <jonathon@quotidian.org>

	Update version and NEWS for 2.22.0

2009-09-19  Daniel Elstner  <daniel.kitta@gmail.com>

	Support Automake silent rules

	* configure.ac: Call the AM_SILENT_RULES macro if it is defined.
	(AM_INIT_AUTOMAKE): Add check-news option.
	* glib/src/Makefile.am: Prefix the M4 command line with $(AM_V_GEN)
	in order to support the silent rules feature of Automake.

2009-09-16  Daniel Elstner  <danielk@openismus.com>

	Do not complain about missing docs_override.xml

	* tools/pm/DocsParser.pm (read_defs): Print error messages to
	standard error.  Do not complain if the docs_override.xml file
	is missing, since it is no longer necessary.

2009-09-13  Daniel Elstner  <daniel.kitta@gmail.com>

	Enable verbose output of autoreconf

	* autogen.sh: Pass --verbose option to autoreconf.

2009-09-11  Daniel Elstner  <daniel.kitta@gmail.com>

	Correctly quote the extracted comment for M4

	* tools/pm/WrapParser.pm (extract_preceding_documentation): Add M4
	quotes around the extracted comment, since it may contain sequences
	of end-quote + macro + start-quote.

2009-09-11  Daniel Elstner  <daniel.kitta@gmail.com>

	Slightly clean up gross Perl code in gmmproc.in

	* tools/gmmproc.in: Try not to abuse Perl too much, and get rid of
	the 'no warnings' hammer.

2009-09-10  Daniel Elstner  <danielk@openismus.com>

	Allow the C documentation to be overridden

	* tools/pm/WrapParser.pm (extract_preceding_documentation): Factor
	the code from on_wrap_enum() to extract a preceding comment block
	into a separate subroutine.
	(on_wrap_method): Invoke extract_preceding_documentation() to
	extract a preceding Doxygen comment, and if one was found allow
	it to override the inherited C documentation.

2009-09-10  Daniel Elstner  <danielk@openismus.com>

	Fix broken test for empty _WRAP_METHOD argument

	* tools/pm/DocsParser.pm: Escape variable values substituted into
	regular expressions.
	* tools/pm/Output.pm (output_wrap_property): Transliterate using
	tr/// instead of s///g.
	* tools/pm/WrapParser.pm: Correct a number of worst offenders among
	all the horrible Perl code.
	(on_wrap_{ctor,method,corba_method}): Instead of testing whether
	the prototype argument does not consist solely of non-whitespace
	characters, actually do what the accompanying comment claimed and
	test whether the argument is empty or consists only of whitespace.
	The only reason this age-old bug was never triggered is that there
	is always at least one whitespace character in a prototype, namely
	between the return type and the function name.  The only exception
	would be the default constructor, which however just so happens to
	have its own special _CTOR_DEFAULT macro.
	In a nutshell, the bug itself was broken and failed to properly
	break things.

2009-09-10  Daniel Elstner  <danielk@openismus.com>

	Re-enable input file line markers in gmmproc

	* tools/pm/WrapParser.pm: Replace hairy uses of scalar(@array)
	to get the number of array elements by $#array, which returns
	the index of the last element.
	(read_file): Re-enable the commented
	code which used to insert input file and line information into
	the token list.
	(parse_and_build_output): Use a simple regular expression to
	match the start of a string instead of messing with substr().

2009-09-08  Jonathon Jongsma  <jonathon@quotidian.org>

	fix distcheck

2009-09-08  Jonathon Jongsma  <jonathon@quotidian.org>

	Increment version to 2.21.5

2009-09-08  Jonathon Jongsma  <jonathon@quotidian.org>

	disable network io stuff.  punt to next release

2009-09-08  Jonathon Jongsma  <jonathon@quotidian.org>

	Add Network I/O classes to new documentation module

2009-09-08  Daniel Elstner  <danielk@openismus.com>

	Implement Gio::Socket ctors using Gio::Initable

	* gio/src/gio_vfuncs.defs: Add GInitableClass::init() vfunc.
	* gio/src/initable.{ccg,hg} (Initable::init): Use _WRAP_METHOD().
	(Initable::init_vfunc): Wrap GInitableClass::init() vfunc.
	* gio/src/socket.{ccg,hg} (Socket::Socket): Wrap constructors
	manually.  Call Initable::init() from the constructor body.
	(Socket::create), (Socket::create_from_fd): Forward to constructors.
	* tools/m4/convert_gio.m4: Add conversion from GCancellable* to
	const Glib::RefPtr<Cancellable>&.

2009-09-07  Daniel Elstner  <danielk@openismus.com>

	Delete obsolete MAINTAINERS file

2009-09-07  Daniel Elstner  <danielk@openismus.com>

	Officially deprecate GLIBMM_CHECK_PERL macro

	* build/glibmm_check_perl.m4 (GLIBMM_CV_PERL_VERSION): Define with
	m4_define() so that the macro is only visible internally.
	(GLIBMM_CHECK_PERL): Define as deprecated macro using AU_DEFUN().

2009-09-03  Daniel Elstner  <danielk@openismus.com>

	Sanitize the Glib::Cond usage example

	* glib/src/thread.hg (Glib::Cond): Sanitize the usage example.

2009-09-02  Daniel Elstner  <danielk@openismus.com>

	Remove sigc from the Doxygen excluded symbols

	* docs/reference/Doxyfile.in (EXCLUDE_SYMBOLS): Stop excluding
	the sigc namespace from the documentation since it apparently
	also removes the links to external documentation.  Also, with
	the latest changes in libsigc++ it seems no longer necessary to
	suppress the symbol.

2009-09-01  Daniel Elstner  <daniel.kitta@gmail.com>

	Increment version to glibmm 2.21.4.2

	* configure.ac (AC_INIT): Increment version to 2.21.4.2.
	* NEWS: Write news entry for glibmm 2.21.4.2 release.

2009-09-01  Daniel Elstner  <daniel.kitta@gmail.com>

	Update Doxygen configuration for Doxygen 1.6.1

	* docs/reference/Doxyfile.in: Update configuration template using
	Doxygen 1.6.1.
	(SORT_MEMBERS_CTORS_1ST): Enable.

2009-09-01  Daniel Elstner  <daniel.kitta@gmail.com>

	Always build tools/ subdirectory (bgo #593518)

	* Makefile.am (SUBDIRS): Unconditionally recurse into the tools/
	subdirectory, rather than only in maintainer-mode.  Otherwise, the
	code generator support files located there would not be installed
	when building a tarball of glibmm.

2009-08-28  Daniel Elstner  <danielk@openismus.com>

	Increment version to glibmm 2.21.4.1

	* configure.ac (AC_INIT): Increment version to 2.21.4.1.
	* NEWS: Write news entry for glibmm 2.21.4.1 release.

2009-08-28  Daniel Elstner  <danielk@openismus.com>

	Ignore docs/doxygen.css file

2009-08-28  Daniel Elstner  <danielk@openismus.com>

	Use shared mm-common Doxygen style sheet

	* configure.ac (MM_PREREQ): Require mm-common 0.7.
	* docs/Makefile.am (dist_doctool_DATA): List doxygen.css.
	* docs/reference/Doxyfile.in (HTML_STYLESHEET): Assign path
	to the shared doxygen.css provided by mm-common.

2009-08-28  Daniel Elstner  <danielk@openismus.com>

	Remove header and footer HTML fragments

	* docs/reference/glibmm_{header,footer}.html_fragment: Delete
	files.  These custom fragments were an unnecessary maintenance
	hassle.  Also, the files were out of date with respect to the
	encoding and CSS classes used by Doxygen.
	* docs/reference/Doxyfile.in (HTML_HEADER), (HTML_FOOTER): Set
	to the empty string.
	(PROJECT_NUMBER): Substitute @PACKAGE_VERSION@.  It does look
	nicer in the generated HTML pages, and is probably also less
	confusing.
	(SORT_GROUP_NAMES): Enable for predictability.
	* docs/Makefile.am (dist_noinst_DATA): Remove deleted HTML
	fragment files.

2009-08-26  Daniel Elstner  <danielk@openismus.com>

	Reenable hierarchy graphs for each class

	* docs/reference/Doxyfile.in (COLLABORATION_GRAPH): Set option
	to YES to enable the per-class inheritance graphs.

2009-08-25  Jonathon Jongsma  <jonathon@quotidian.org>

	release 2.21.4

2009-08-25  Daniel Elstner  <danielk@openismus.com>

	Change documentation host to library.gnome.org

	* docs/Makefile.am (htmlrefpub): Remove override and use the
	updated mm-common default value.
	* docs/reference/glibmm_header.html_fragment: Adjust links to
	the main page and the gtkmm book.
	* {glib,gio}/{glib,gio}mm{,-uninstalled}.pc.in (htmlrefpub):
	Adjust variable values.
	* configure.ac (MM_PREREQ): Require mm-common 0.6.1.

2009-08-24  Daniel Elstner  <danielk@openismus.com>

	Strip directory from filenames in enum.pl output

	* tools/enum.pl: Use File::Spec module.  Reduce the backslashitis
	in a number of regular expressions by replacing the slash used as
	the delimiter with a less troublesome character.
	(parse): Only print the basename component of the filename.
	(process): Put \Q...\E quoting escapes around a variable reference
	within a regular expression to protect meta-characters.

2009-08-21  Daniel Elstner  <danielk@openismus.com>

	Deprecate wrapper methods of deprecated functions

	* gio/src/file.{ccg,hg} (File::{eject,unmount}_mountable*),
	gio/src/volumemonitor.hg (VolumeMonitor::adopt_orphan_mount):
	Enclose within deprecation guards since the corresponding C API
	functions have been deprecated in API version 2.22 of GIO.
	Insert #undef G_DISABLE_DEPRECATED at the top of the source files
	so that giomm builds again at warning level fatal.

2009-08-21  Daniel Elstner  <danielk@openismus.com>

	Move #undef G_DISABLE_DEPRECATED out of header

	* glib/src/date.hg: Push the #undef G_DISABLE_DEPRECATED into the
	new SECTION_CC_PRE_INCLUDES rather than the public header file.

2009-08-21  Daniel Elstner  <danielk@openismus.com>

	Add SECTION_CC_PRE_INCLUDES section to gmmproc

	* tools/m4/base.m4: Define new SECTION_CC_PRE_INCLUDES and import
	it at the top of the generated source file.  This new section can
	be used to insert custom code at the beginning of the translation
	unit as seen by the compiler.

2009-08-21  Daniel Elstner  <danielk@openismus.com>

	Use mm-common macro for --disable-deprecated-api

	* configure.ac: Replace GLIBMM_ARG_ENABLE_API_DEPRECATED() with
	the new MM_ARG_DISABLE_DEPRECATED_API() macro from mm-common.
	(MM_PREREQ): Raise requirement to mm-common 0.6.
	* build/reduced.m4 (GLIBMM_ARG_ENABLE_API_DEPRECATED): Remove
	obsolete macro definition.
	* glib/glibmmconfig.h.in (GLIBMM_DISABLE_DEPRECATED): Copy #undef
	statement from config.h.in template.
	* gio/giommconfig.h.in (GIOMM_DISABLE_DEPRECATED): ditto.

2009-08-21  Daniel Elstner  <danielk@openismus.com>

	Insist on working Perl in maintainer mode

	* configure.ac: Call MM_CHECK_PERL in maintainer mode in order
	to verify early that the Perl interpreter is working.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Rename @since back to @newin

	* docs/reference/Doxyfile.in (ALIASES): Rename the @since alias
	back to its old name @newin, but otherwise keep the parameters.
	Apparently there is a @since command predefined in Doxygen which
	I hadn't noticed.  It does seem to get overridden silently, but
	it is better not to rely on this.
	* tools/pm/DocsParser.pm (convert_tags_to_doxygen): Output @newin
	instead of @since.
	* {glib,gio}/src/*.hg, {glib,gio}/{glib,gio}mm/*.h: Replace all
	uses of @since with @newin.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Predefine GIOMM_API for Doxygen

	* docs/reference/Doxyfile.in (PREDEFINED): Define GIOMM_API to the
	empty expansion, so that it won't show up in the documentation.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Substitute API version in filenames dynamically

	* glib/glibmm.pc.in: Rename file from glib/glibmm-2.4.pc.in.
	* glib/glibmm-uninstalled.pc.in: Rename file from
	glib/glibmm-2.4-uninstalled.pc.in.
	* gio/giomm.pc.in: Rename file from gio/giomm-2.4.pc.in.
	* gio/giomm-uninstalled.pc.in: Rename file from
	gio/giomm-2.4-uninstalled.pc.in.
	* configure.ac (AC_CONFIG_FILES): Insert ${GLIBMM_MODULE_NAME}
	and ${GIOMM_MODULE_NAME} into output filenames and remove the
	hard-coded version from the input filenames.
	* glib/glibmm/Makefile.am (lib_LTLIBRARIES): Substitute
	@GLIBMM_API_VERSION@ into the libtool archive name as well as
	the variable names derived from it instead of hard-coding the
	API version.

2009-08-20  Daniel Elstner  <danielk@openismus.com>

	Do not hard-code API version in resource files

	* MSVC_Net200[58]/glibmm/glibmm.rc.in: Use newer @PACKAGE_VERSION@
	substitution in place of @VERSION@.  Substitute @GLIBMM_MODULE_NAME@
	instead of hardcoding the API version.
	* MSVC_Net200[58]/giomm/giomm.rc.in: Use newer @PACKAGE_VERSION@
	substitution in place of @VERSION@.  Substitute @GIOMM_MODULE_NAME@
	instead of hardcoding the API version.  Replace @GLIBMM_*_VERSION@
	substitutions with their @GIOMM_*_VERSION@ equivalents.

2009-08-19  Daniel Elstner  <danielk@openismus.com>

	Predefine GLIBMM_API for Doxygen

	* docs/reference/Doxyfile.in (PREDEFINED): Define GLIBMM_API to the
	empty expansion, so that it won't show up in the documentation.

2009-08-18  Daniel Elstner  <danielk@openismus.com>

	Prepend tools/pm/ to Perl include path

	* g{lib,io}/src/Makefile.am (gmmproc): Pass -I$(top_srcdir)/tools/pm
	to the Perl interpreter when invoking the local gmmproc, so that it
	will pick up the modules from the source tree instead of an existing
	glibmm installation.
	* tools/gmmproc.in (BEGIN): Substitute @GLIBMM_MODULE_NAME@ instead
	of hard-coding the location.

2009-08-18  Daniel Elstner  <danielk@openismus.com>

	Implement parametric Doxygen alias @since{m,n}

	* docs/reference/Doxyfile.in (ALIASES): Define a parametrized alias
	@since{major,minor} to replace the old @newin?p?* aliases which had
	to be defined manually for every version number used.
	(PREDEFINED): Predefine G_GNUC_NORETURN, G_GNUC_NULL_TERMINATED and
	G_GNUC_PURE to the empty expansion.  Remove GTKMM_* macros.
	* tools/pm/DocsParser.pm (convert_tags_to_doxygen): Change "Since:"
	substitution to output the new generic @since alias.
	* {glib,gio}/src/*.hg, {glib,gio}/{glib,gio}mm/*.h: Change all uses
	of @newin?p?* to @since{major,minor}.

2009-08-17  Daniel Elstner  <danielk@openismus.com>

	Append slash to overridden $(htmlrefpub)

	* docs/Makefile.am (htmlrefpub): Append trailing slash for
	consistency with the non-overridden value.

2009-08-17  Daniel Elstner  <danielk@openismus.com>

	Exclude non-glibmm symbols from the documentation

	* docs/reference/Doxyfile.in (EXCLUDE_SYMBOLS): Add GTimeVal, nil
	and sigc to the list of symbols to exclude from the documentation.

2009-08-17  Daniel Elstner  <daniel.kitta@gmail.com>

	Reenable JAVADOC_AUTOBRIEF mode of Doxygen

	* docs/reference/Doxyfile.in (JAVADOC_AUTOBRIEF): Change value
	back to 'YES'.  I accidentally turned off the setting during the
	build infrastructure transition.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Unbreak List_Iterator::operator->()

	* glib/glibmm/containers.h ({S,}List_Iterator::operator->):
	Use &**this, not &*this.  Oops.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Define GLIBMM_USING_STD() as dummy no-op

	* glib/glibmmconfig.h.in (GLIBMM_USING_STD): Resurrect macro
	for backwards compatibility, but unconditionally define it to
	the empty expansion.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Define GLIBMM_BUILD and GIOMM_BUILD

	* glib/glibmm/Makefile.am (local_cppflags): Add -DGLIBMM_BUILD=1.
	* gio/giomm/Makefile.am (local_cppflags): Add -DGIOMM_BUILD=1.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Slightly clean up List_Iterator helper classes

	* glib/glibmm/containers.h ({S,}List_Iterator): Smooth out
	a number of eye sores I had stumbled upon in the code.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Correct nesting mistakes in Autoconf macros

	* build/cxx.m4: Fix the incorrect nesting of parentheses with
	about every other AC_COMPILE_IFELSE/AC_LANG_PROGRAM construct.
	My fault, ooops.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Clean up g{lib,io}mmconfig.h.in templates

	* glib/glibmmconfig.h.in: Rewrite, copying large chunks from
	the autoheader-generated config.h.in template.
	* gio/giommconfig.h.in: Remove everything that belongs to glibmm
	and include glibmmconfig.h.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Remove superfluous entry from .gitignore

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Set GTHREAD_LIBS to the full --libs value again

	* configure.ac (GTHREAD_LIBS): Go back to pkg-config --libs
	to retrieve the linker flags to use with threaded programs.
	For some reason --libs-only-other does not include -pthread.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Get rid of all uses of GLIBMM_USING_STD()

	* glib/src/*.{ccg,hg}: Remove all uses of GLIBMM_USING_STD().
	We definitely do not need this anymore, and probably never
	did.  We never covered all symbols from namespace std anyway
	and never got any complaint about it.  Also, be careful to
	always include the glibmmconfig.h header when it is needed.
	* glib/glibmm/*.{cc,h}: ditto.
	* glib/glibmmconfig.h.in: Clean up and re-indent.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Clean up C++ compiler test Autoconf macros

	* build/cxx.m4: Clean up M4 code and switch to non-deprecated
	Autoconf macros.
	(AC_CXX_NAMESPACES), (AC_CXX_BOOL), (AC_CXX_MUTABLE): Remove
	obsolete feature check macros.
	* configure.ac: Remove AC_CXX_NAMESPACES(), AC_CXX_BOOL(),
	AC_CXX_MUTABLE() and GLIBMM_CXX_HAS_NAMESPACE_STD checks.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Remove now optional macro arguments

	* configure.ac: Insert MM_PREREQ([0.4]) macro call.
	(MM_INIT_MODULE): Remove the now optional second macro argument.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Move M4 files from scripts/ over to build/

	* scripts/*.m4: Move files over to the build/ directory, in order
	to be more consistent with the directory layout of other binding
	modules that switched to the new build organization.
	* Makefile.am (ACLOCAL_AMFLAGS): Search build/ for M4 files.
	(dist_aclocal_macro_DATA): Adjust directory prefix to build/.
	* configure.ac (AC_CONFIG_MACRO_DIR): Place third-party Autoconf
	macros into the build/ directory.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Use hammer method to avoid admitting to be wrong

	* glib/README, gio/README: Oops, looks like I was wrong in my
	assumption that these files would be distributed automatically by
	Automake.  In order to save face, I thought I might just delete
	them then, as their content is not very useful anyway.

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Update .gitignore files

2009-08-16  Daniel Elstner  <daniel.kitta@gmail.com>

	Stop distributing README files manually

	* Makefile.am (text_files): Remove glib/README and gio/README as
	files named README are distributed automatically by Automake.
	(msvc_files): Use the more readable and safer $(addprefix ...)
	function of GNU make instead of a $(foo:%=prefix/%) substitution.
	(DISTCLEANFILES): Use $(filter %mmconfig.h,$(msvc_files)) instead
	of listing the generated configuration header files manually.

2009-08-16  Daniel Elstner  <danielk@openismus.com>

	Provide g{lib,io}mm-2.4-uninstalled.pc files

	* glib/glibmm-2.4-uninstalled.pc.in: New file to provide a pkg-config
	configuration for building against an uninstalled glibmm library.
	* gio/giomm-2.4-uninstalled.pc.in: ditto for giomm.
	* glib/glibmm-2.4.pc.in (htmlrefpub): Append slash to URL.
	* gio/giomm-2.4.pc.in (htmlrefpub): ditto.
	* configure.ac (AC_CONFIG_FILES): List glib/glibmm-2.4-uninstalled.pc
	and gio/giomm-2.4-uninstalled.pc output files.

2009-08-11  Daniel Elstner  <danielk@openismus.com>

	Micro pedantry: sort file list alphabetically

2009-08-11  Daniel Elstner  <danielk@openismus.com>

	Add missing datadir substitution to .pc file

	* glib/glibmm-2.4.pc.in (datadir): Substitute value, as it is
	used as a component of doctooldir later in the file.
	* gio/giomm-2.4.pc.in (datadir): Substitute value, just in case.
	* docs/Makefile.am: Remove overrides of the documentation
	utilities, since MM_CONFIG_DOCTOOL_DIR() already takes care
	of setting MMDOCTOOLDIR to the local directory.

2009-08-11  Daniel Elstner  <danielk@openismus.com>

	Get rid of some old Autoconf macro cruft

	* scripts/dk-warn.m4: Delete file, since the functionality is now
	provided by MM_ARG_ENABLE_WARNINGS() from the mm-common module.
	* scripts/docgen.m4: Delete obsolete file.
	* scripts/cxx_std.m4: Remove stray text snippet from the top of the
	file.  Probably a cut'n'paste accident.
	* scripts/cxx.m4 (GLIBMM_MEMBER_FUNCTIONS_MEMBER_TEMPLATES): Do not
	AC_DEFINE to 0 in the else branch, as that will do the wrong thing
	when #ifdef is used instead of #if.
	* scripts/README: Delete file consisting solely of whitespace.
	* configure.ac: Add note on pointless test for namespace std.

2009-08-10  Daniel Elstner  <danielk@openismus.com>

	Clean up configure check for Windows host

	* configure.ac (OS_WIN32): Rename conditional to HOST_WINDOWS_NATIVE
	because the OS vs platform terminology confused the hell out of me.
	Remove the check for a non-native Windows host such as Cygwin, since
	the corresponding conditional is not used anymore.

2009-08-10  Daniel Elstner  <danielk@openismus.com>

	List removed files in .gitignore

2009-08-10  Daniel Elstner  <danielk@openismus.com>

	Have mm-common-prepare install the doc utils

	* configure.ac: Call MM_CONFIG_DOCTOOL_DIR([docs]) to set
	up the destination directory for mm-common-prepare to copy
	the documentation utilities to.
	* docs/doc-install.pl: Delete file.
	* docs/doc-postprocess.pl: ditto,
	* docs/tagfile-to-devhelp2.xsl: ditto.

2009-08-10  Daniel Elstner  <danielk@openismus.com>

	Delete ancient api_status.txt file

	* It was time to let go.  Sniff.  It will be forever in our hearts^W
	version control history.

2009-08-10  Daniel Elstner  <danielk@openismus.com>

	Distribute README.SUN and autogen.sh

	* Makefile.am (text_files): Add README.SUN.
	(dist_noinst_SCRIPTS): List autogen.sh.

2009-08-10  Daniel Elstner  <danielk@openismus.com>

	Update list of files to ignore

2009-08-10  Daniel Elstner  <danielk@openismus.com>

	Use versioned directory for documentation tools

	* docs/Makefile.am (doctooldir): Use the versioned module
	name instead of the package name as $(datadir) subdirectory.
	* glib/glibmm-2.4.pc.in (doctooldir): Change the variable
	value accordingly.

2009-08-10  Daniel Elstner  <danielk@openismus.com>

	Provide documentation location via pkg-config

	* glib/glibmm-2.4.pc.in: Clean up and modernize the values,
	and make use of more configure variable substitutions.
	(datarootdir): Substitute @datarootdir@.
	(gmmprocdir): Remove the @GMMPROC_DIR@ substitution and expand
	${libdir} indirectly.
	(doctooldir): New variable pointing to the location of the
	installed utilities for building the reference documentation.
	(docdir), (doxytagfile), (htmlrefdir), (htmlrefpub): Provide
	meta information on the installed reference documentation in
	these new pkg-config variables.
	* gio/giomm-2.4.pc.in: Clean up and modernize the values,
	and make use of more configure variable substitutions.
	(datarootdir): Substitute @datarootdir@.
	(docdir), (doxytagfile), (htmlrefdir), (htmlrefpub): Provide
	meta information on the installed reference documentation in
	these new pkg-config variables.  The values are identical to
	the glibmm-2.4 ones because the documentation is bundled.
	* docs/Makefile.am (hmtlrefpub): Override the public web URL
	of the reference documentation, since the currently uploaded
	documentation still has the redundant docs/ component in the
	base path.

2009-08-09  Daniel Elstner  <danielk@openismus.com>

	Get make distcheck to pass cleanly

	* Makefile.am (DISTCLEANFILES): List the configuration header
	copies made by the AC_CONFIG_COMMANDS() as files to delete.
	* configure.ac (AM_INIT_AUTOMAKE): Switch to POSIX archive
	format (pax) for tar, because just as with libsigc++ the
	filenames generated by Doxygen exceed the tar-ustar limit.

2009-08-09  Daniel Elstner  <danielk@openismus.com>

	Work around Automake cleverness failure

	* gio/giomm/filelist.am (giomm_files_built_ph): Use the GNU
	make $(patsubst ...) function instead of $(var:%=foo%bar) if
	a simple $(var:.a=.b) is not sufficient.  Apparently Automake
	is able to expand some of these constructs statically, but in
	some cases it will actually produce the wrong result.  Using
	$(patsubst ...) helps to avoid the problem because Automake
	does not attempt to expand it.
	* glib/glibmm/filelist.am (glibmm_files_built_ph): Use the
	$(patsubst ...) function here, too.
	* gio/src/filelist.am (giomm_files_used_hg): Define another
	intermediate variable to avoid repetition.

2009-08-09  Daniel Elstner  <danielk@openismus.com>

	Get rid of all Makefile.am in the MSVC dirs

	* MSVC_Net2005/**/Makefile.am: Delete recursive build files.
	* MSVC_Net2008/**/Makefile.am: ditto.
	* MSVC_Net2005/filelist.am: New file.  Recursively list all
	files that should go into the distribution.
	* MSVC_Net2008/filelist.am: ditto.
	* configure.ac (AC_CONFIG_FILES): Remove all Makefile outputs
	to the MSVC subdirectories.  Combine all the remaining output
	files into a single argument to just one AC_CONFIG_FILES call.
	Follow through with a number of TODO comments and remove some
	old cruft which is no longer used anywhere in the module.
	(AC_CONFIG_COMMANDS): Copy the configuration header files into
	the MSVC subdirectories by making config.status execute custom
	configuration commands.  This is easier than doing it at the
	Makefile level, where it was previously implemented.
	* Makefile.am: Include the filelist.am files from the MSVC
	subdirectories.
	(SUBDIRS): Remove MSVC_Net200[58] directories from the list.
	(dist_noinst_DATA): Distribute the MSVC project files.
	* tools/gmmproc.in: Substitute @PERL@ instead of @PERL_PATH@.
	* tools/generate_wrap_init.pl.in: ditto.

2009-08-09  Daniel Elstner  <danielk@openismus.com>

	Bring back the giomm reference documentation

	* glib/{src,glibmm}/filelist.am: Add namespace prefix glibmm_
	to variable names, so that the file lists of glibmm and giomm
	can be included together without conflicts.
	* gio/{src,giomm}/filelist.am: Add namespace prefix giomm_ to
	variable names.
	* glib/{src,glibmm}/Makefile.am: Copy the namespace-prefixed
	make variables to non-prefixed variables, so that the Automake
	include files from mm-common will pick up the values.
	* gio/{src,giomm}/Makefile.am: ditto.
	* docs/Makefile.am: Include file lists of giomm.
	(doc_input): List the header files of both glibmm and giomm.

2009-08-09  Daniel Elstner  <danielk@openismus.com>

	Begin move to new documentation infrastructure

	* configure.ac (AC_CONFIG_FILES): Remove the old build files
	docs/{images,internal,reference}/Makefile from the list.  Also
	remove the obsolete docs/reference/beautify_docs.pl.
	* docs/Makefile.am: Big overhaul.  Reimplement on top of the
	new documentation infrastructure provided with the mm-common
	module.  Build, distribute and install files which used to be
	handled by the subdirectories' Makefiles directly from here.
	Note that the generated reference documentation at the moment
	only covers glibmm without giomm.  Remedy follows.
	* docs/reference/Doxyfile.in: Replace configuration with the
	modernized version from librsvgmm, appropriately modified for
	glibmm.  Make use of the new substitutions provided by the
	mm-common Autoconf magic.
	* docs/doc-install.pl: Copy script from mm-common.  Install
	it into $(pkgdatadir)/doctool.
	* docs/doc-postprocess.pl: ditto,
	* docs/tagfile-to-devhelp2.xsl: ditto.
	* docs/images/Makefile.am: Delete subdirectory Makefile.
	* docs/internal/Makefile.am: ditto,
	* docs/reference/Makefile.am: ditto.
	* docs/reference/README: Delete file, as it documents exactly
	the things I just ripped.
	* docs/reference/beautify_docs.pl.in: Delete obsolete file.
	* docs/reference/doxygen_to_devhelp.xsl: ditto,
	* docs/reference/libstdc++.tag.xml: ditto.

2009-08-09  Daniel Elstner  <danielk@openismus.com>

	Add .dirstamp and others to .gitignore file

2009-08-09  Daniel Elstner  <danielk@openismus.com>

	Convert examples/ sub-tree to non-recursive build

	* examples/Makefile.am: Rewrite to a non-recursive build of
	all example programs with a single control file.  Hook the
	build of the example programs to the make check target.
	* examples/Makefile.am_fragment: Delete obsolete file.
	* examples/*/Makefile.am: Delete obsolete files.
	* examples/README: Delete file, as it was empty anyway apart
	from a single whitespace character.
	* configure.ac (AC_CONFIG_FILES): Remove examples/*/Makefile
	output files from the list.

2009-08-09  Daniel Elstner  <danielk@openismus.com>

	Convert tests/ sub-tree to non-recursive build

	* tests/Makefile.am: Rewrite to a non-recursive build of all
	test programs with a single control file.  Hook the the build
	of the test programs to the make check target.
	* tests/Makefile.am_fragment: Delete obsolete file.
	* tests/*/Makefile.am: Delete obsolete files.
	* configure.ac (AC_CONFIG_FILES): Remove tests/*/Makefile
	output files from the list.

2009-08-09  Daniel Elstner  <daniel.kitta@gmail.com>

	Delete now unused build_shared/ subdirectory

	* build_shared/*.am_fragment: Delete files, as they are no
	longer used anywhere.
	* tools/Makefile_list_of_sources.am_fragment: Delete file,
	* tools/m4/Makefile_list_of_sources.am_fragment: ditto,
	* tools/pm/Makefile_list_of_sources.am_fragment: ditto.

2009-08-09  Daniel Elstner  <daniel.kitta@gmail.com>

	Convert gio/ sub-tree to new build system

	* gio/src/filelist.am: New file for defining the lists of
	gmmproc input files.
	* gio/src/Makefile.am: Clean up and modernize.  Integrate
	with the new generate-binding.am build file from mm-common.
	* gio/giomm/filelist.am: New file for the lists of source
	code files, both generated and static.  Also list files from
	the private/ subdirectory here.
	* gio/giomm/Makefile.am: Clean up and modernize.  Integrate
	with the new compile-binding.am build file from mm-common.
	* configure.ac (AC_CONFIG_FILES): Remove the output file
	gio/giomm/private/Makefile from the list.
	* gio/giomm/private/Makefile.am: Delete file.
	* gio/src/Makefile_list_of_hg.am_fragment: Delete file.

2009-08-09  Daniel Elstner  <daniel.kitta@gmail.com>

	Convert glib/ sub-tree to new build system

	* glib/src/filelist.am: New file for defining the lists of
	gmmproc input files and M4 template files.
	* glib/src/Makefile.am: Clean up and modernize.  Integrate
	with the new generate-binding.am build file from mm-common.
	* glib/glibmm/filelist.am: New file for the lists of source
	code files, both generated and static.  Also list files from
	the private/ subdirectory here.
	* glib/glibmm/Makefile.am: Clean up and modernize.  Integrate
	with the new compile-binding.am build file from mm-common.
	* configure.ac (AC_CONFIG_FILES): Remove the output file
	glib/glibmm/private/Makefile from the list.
	* glib/glibmm/private/Makefile.am: Delete file.
	* glib/src/Makefile_list_of_hg.am_fragment: Delete file.

2009-08-09  Daniel Elstner  <daniel.kitta@gmail.com>

	Do not recurse into scripts/ subdirectory

	* Makefile.am: Install scripts/glibmm_check_perl.m4 from here.
	* scripts/Makefile.am: Delete file.
	* configure.ac (AC_CONFIG_FILES): Remove scripts/Makefile.

2009-08-09  Daniel Elstner  <daniel.kitta@gmail.com>

	Convert tools/ directory to new build system

	* configure.ac (AC_CONFIG_FILES): Remove the output files
	tools/{extra_defs_gen,m4,pm}/Makefile from the list.
	* tools/Makefile.am: Clean up.  Build, distribute and install the
	contents of all three subdirectories.  Rename generate_extra_defs
	executable to generate_defs_glib.
	* tools/m4/filelist.am: New file to hold the list of M4 files.
	* tools/pm/filelist.am: New file to hold the list of Perl modules.
	* tools/{extra_defs_gen,m4,pm}/Makefile.am: Delete files.

2009-08-09  Daniel Elstner  <danielk@openismus.com>

	Remove glib/Makefile.am and gio/Makefile.am

	* Makefile.am: Move things from glib/Makefile.am and gio/Makefile.am
	to the toplevel.  Remove the improvised custom convenience rules for
	now.
	(SUBDIRS): Enter the glib/src, gio/src, glib/glibmm and gio/giomm
	subdirectories directly from the toplevel.  Use indirect variables
	to define the conditionally entered subdirectories.
	* configure.ac: Call macros from mm-common for preparing the build of
	the reference documentation.  Remove {glib,gio}/Makefile.am from the
	AC_CONFIG_FILES list.  Avoid repeating the version requirement for all
	the basic g* libraries when constructing the list of dependencies for
	pkg-config.
	* {glib,gio}/Makefile.am: Remove files.

2009-08-09  Daniel Elstner  <danielk@openismus.com>

	Begin transition to new build infrastructure

	* autogen.sh: Replace script with a minimalistic wrapper around
	mm-common-prepare, autoreconf and configure.
	* Makefile.am (ACLOCAL_AMFLAGS): Pick up ${ACLOCAL_FLAGS} from the
	environment, so that autoreconf can do its magic.
	* configure.ac: Modernize.  Cut loads of old cruft.  Make use of
	magic mm-common macros to simplify things.  Declare build/ as the
	destination for auxiliary build files.  Add TODO comments to flag
	the pieces that still need cutting.  Re-enable autoheader.
	* config.h.in: Remove file, and have autoheader generate it.

2009-07-27  José Alburquerque  <jaalburqu@svn.gnome.org>

	Correct the if condition in Gio::MemoryInputStream::add_data().

2009-07-27  Jonathon Jongsma  <jonathon@quotidian.org>

	update for release of 2.21.3

2009-07-26  Jonathon Jongsma  <jonathon@quotidian.org>

	Add Glib::ObjectBase::freeze_notify()/thaw_notify.  Fixes Bug #575533

2009-07-26  Jonathon Jongsma  <jonathon@quotidian.org>

	Fix a build error in MemoryInputStream

2009-07-26  Jonathon Jongsma  <jonathon@quotidian.org>

	Fix MemoryInputStream::addData (Bug #589683)

2009-07-26  Krzesimir Nowak  <krnowak@svn.gnome.org>

	Wrapped several ISO 8601 related functions.

	* glib/glibmm/timeval.cc:
	* glib/glibmm/timeval.h: Wrapped g_time_val_from_iso8601() and
	g_time_val_to_iso8601().
	* glib/src/date.ccg:
	* glib/src/date.hg: Wrapped g_date_get_iso8601_week_of_year().

2009-07-17  David King  <davidk@openismus.com>

	Only compile the properties example if properties are enabled.

2009-07-17  Murray Cumming  <murrayc@murrayc.com>

	Corrected the ChangeLog to mention changes that I accidentally committed in last month, but which I did want to commit some time.

2009-07-16  Jonathon Jongsma  <jonathon@quotidian.org>

	Added a simple example showing how to resolve an internet address from a hostname

2009-07-16  Jonathon Jongsma  <jonathon@quotidian.org>

	add async versions of Resolver methods

2009-07-16  Jonathon Jongsma  <jonathon@quotidian.org>

	add overloads for resolver methods without a cancellable object

2009-07-16  Jonathon Jongsma  <jonathon@quotidian.org>

	add get_start_stop_type() and Gio::DriveStartStopType enum

2009-07-16  Jonathon Jongsma  <jonathon@quotidian.org>

	add _IGNORE() for a eject_with_operation() which is hand-written

2009-07-14  Jonathon Jongsma  <jonathon@quotidian.org>

	Bug 587173 - Fails to install when bootstrapped with Automake 1.11

2009-07-14  José Alburquerque  <jaalburqu@svn.gnome.org>

	Repair Glib::KeyFile docs with regard to exceptions. Bug# 587766.

2009-07-13  Jonathon Jongsma  <jonathon@quotidian.org>

	fix release target to use correct tagging scheme

2009-07-13  Jonathon Jongsma  <jonathon@quotidian.org>

	fix release targets in makefile for git transition

2009-07-13  Jonathon Jongsma  <jonathon@quotidian.org>

	Bumped version / NEWS for release 2.21.2

2009-07-11  Daniel Elstner  <daniel.kitta@gmail.com>

	Remove dead --enable-fulldocs option

	* configure.ac (GTKMM_ARG_ENABLE_FULLDOCS): Remove macro
	call.  Its result is not used anywhere at all anymore.

2009-07-11  Daniel Elstner  <daniel.kitta@gmail.com>

	Remove stray semicolons

	* gio/src/drive.hg (Drive::start_finish): Remove stray
	semicolon to get rid of compiler warning in pedantic mode.
	(Drive::stop_finish): ditto.

2009-07-09  Jonathon Jongsma  <jonathon@quotidian.org>

	implement Gio::VolumeMonitor::drive-stop-button

2009-07-09  Jonathon Jongsma  <jonathon@quotidian.org>

	fix accidental bug in Gio::Drive::eject() that the compiler warned me about

2009-07-09  Jonathon Jongsma  <jonathon@quotidian.org>

	implement Gio::Volume::eject_with_operation()

	* gio/src/volume.ccg:
	* gio/src/volume.hg: implement eject_with_operation()
	similarly to the GDrive methods mentioned below

2009-07-09  Jonathon Jongsma  <jonathon@quotidian.org>

	Implement Gio::Mount::mount/eject_with_operation()

	* gio/src/mount.ccg:
	* gio/src/mount.hg: implement eject_with_operation() and
	mount_with_operation similarly to the GDrive methods mentioned
	below

2009-07-09  Jonathon Jongsma  <jonathon@quotidian.org>

	implement Gio::InetAddress::get_native_size()

2009-07-09  Jonathon Jongsma  <jonathon@quotidian.org>

	implement GDrive::stop-button signal

2009-07-09  Jonathon Jongsma  <jonathon@quotidian.org>

	Wrap g_drive_eject_with_operation() and related functions

	* gio/src/drive.ccg:
	* gio/src/drive.hg: Wrap the new eject_with_operation() methods and
	implement the other eject() functions with
	g_drive_eject_with_operation since g_drive_eject has been
	deprecated in favor of eject_with_operation()

2009-07-09  Jonathon Jongsma  <jonathon@quotidian.org>

	wrap a couple added GDrive methods

	* gio/src/drive.ccg:
	* gio/src/drive.hg:
	* gio/src/gio_enums.defs:
	* tools/m4/convert_gio.m4: wrap added GDrive methods: start(),
	stop(), start_finish(), stop_finish(), can_start(), can_start(),
	can_start_degraded()

2009-07-09  Jonathon Jongsma  <jonathon@quotidian.org>

	Fix build with glib from master

	* gio/src/socket.hg: fix build breakage caused by the addition of a
	bunch of cancellable parameters to GSocket methods.

2009-07-06  Daniel Elstner  <danielk@openismus.com>

	Treat empty Glib::spawn*() working dir as unset

	* glib/src/spawn.ccg (Glib::spawn_async_with_pipes): If the
	working_directory argument is the empty string, pass a 0 pointer
	to the GLib C API to make it inherit the parent's working directory.
	This is fine as the empty string is not a valid directory name, and
	our documentation already says that it will be interpreted that way.
	(Glib::spawn_async): ditto,
	(Glib::spawn_sync): ditto.

2009-07-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	Use references to store casts in glibmm_valuearray test.

2009-06-30  Jonathon Jongsma  <jonathon@quotidian.org>

	Add OptionGroup::add_entry(.., double&)

2009-06-29  Jonathon Jongsma  <jonathon@quotidian.org>

	add some namespaced conversions for use by gdk

2009-06-29  Murray Cumming  <murrayc@murrayc.com>

	Increased version

2009-06-24  Daniel Elstner  <daniel.kitta@gmail.com>

	Shorten my mail address in the DOAP file

2009-06-24  Daniel Elstner  <danielk@openismus.com>

	Duplicate log entry into legacy ChangeLog file

2009-06-24  Daniel Elstner  <daniel.kitta@gmail.com>

	Update and simplify .gitignore

2009-06-24  Daniel Elstner  <daniel.kitta@gmail.com>

	Omit unused parameter names to avoid warning

	* tools/extra_defs_gen/generate_defs_gio.cc (main): Omit names of
	unused function parameters, to fix the build with fatal warnings
	enabled.
	* examples/properties/properties_example.cc (main): ditto,
	* tests/giomm_ioerror/main.cc (main): ditto.

2009-06-23  José Alburquerque  <jaalburqu@svn.gnome.org>

	Use a const instead of a #define in the value array example.

2009-06-23  Hubert Figuiere  <hub@figuiere.net>

	* tools/pm/WrapParser.pm (on_defs): Make sure we trim the module names to not have extraneous space. Closes bug #586785.

2009-06-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	Typo corrections in Glib::ValueArray sources.

2009-06-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	ChangeLog of last commit (forgot).

2009-06-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	Add Glib::ValueArray with usage test.

2009-06-22  José Alburquerque  <jaalburqu@svn.gnome.org>

	Check for invalid date in Glib::Date copy constructor.

2009-06-20  Jonathon Jongsma  <jonathon@quotidian.org>

	add start of Socket class

2009-06-19  Jonathon Jongsma  <jonathon@quotidian.org>

	Add start of Initable

2009-06-19  Jonathon Jongsma  <jonathon@quotidian.org>

	add NetworkService class

2009-06-19  Jonathon Jongsma  <jonathon@quotidian.org>

	update giomm.h main header

2009-06-19  Jonathon Jongsma  <jonathon@quotidian.org>

	Add NetworkAddress

2009-06-18  Jonathon Jongsma  <jonathon@quotidian.org>

	add Resolver to the extra defs generator

2009-06-18  Jonathon Jongsma  <jonathon@quotidian.org>

	clean up the list of .hg fragments in giomm

2009-06-18  Jonathon Jongsma  <jonathon@quotidian.org>

	add InetSocketAddress class

2009-06-18  Jonathon Jongsma  <jonathon@quotidian.org>

	split SocketAddressEnumerator into its own file

2009-06-18  Jonathon Jongsma  <jonathon@quotidian.org>

	add Glib::file_set_contents()

2009-06-18  Murray Cumming  <murrayc@murrayc.com>

	Correction to previous commit

2009-06-18  Jonathon Jongsma  <jonathon@quotidian.org>

	bump version and min glib requirement

2009-06-18  Murray Cumming  <murrayc@murrayc.com>

	Add debug output to hint that you *_docs.xmls needs a define-object.

	* tools/pm/DocsParser.pm: lookup_object_of_method(),
	* tools/pm/GtkDefs.pm: lookup_object(): Add debug output to hint that you
	need a define-object for each C GType in the *_docs.xml file, though I
	do not yet know why these are sometimes missing.

2009-06-18  Jonathon Jongsma  <jonathon@quotidian.org>

	add overloads without a 'cancellable' argument for SocketAddressEnumerator methods

2009-06-18  Jonathon Jongsma  <jonathon@quotidian.org>

	re-generate .defs for giomm, fix a coupel methods

	* gio/src/gio_methods.defs: re-generate
	* gio/src/socketaddress.hg: uncomment method that was being
	generated incorrectly due to out-of-date .defs
	* gio/src/socketconnectable.ccg:
	* gio/src/socketconnectable.hg: wrap the next_async() manually
	because we need to do the slot adaptation stuff

2009-06-18  Jonathon Jongsma  <jonathon@quotidian.org>

	Add Typetraits for SrvTarget so we can return a list of them

2009-06-18  Murray Cumming  <murrayc@murrayc.com>

	Require glib 2.21, because g_cancellable_connect/disconnect() are not in glib 2.20.

2009-06-17  Jonathon Jongsma  <jonathon@quotidian.org>

	Add initial wrappers for SocketConnectable, SocketAddress

2009-06-17  Jonathon Jongsma  <jonathon@quotidian.org>

	initial wrapping of Resolver, SrvTarget

2009-06-17  Jonathon Jongsma  <jonathon@quotidian.org>

	wrap Gio::InetAddress

2009-06-17  Hubert Figuiere  <hub@figuiere.net>

	Gio::File::load_contents() override to allow ignoring the etag contents. (Bug #581349)

2009-06-16  José Alburquerque  <jaalburqu@svn.gnome.org>

	Modify extra defs generation utility to accept a custom is_a_pointer() function.

2009-05-31  Alexander Shaduri  <ashaduri@gmail.com>

	Build static libraries correctly under Windows/MinGW

	* configure.ac: Define GLIBMM_STATIC_LIB and GIOMM_STATIC_LIB when
	--enable-static is specified.
	* gio/giommconfig.h.in: Add GIOMM_STATIC_LIB and don't define GIOMM_DLL
	when using MinGW unless GIOMM_STATIC_LIB is defined.
	* glib/glibmmconfig.h.in: Add GLIBMM_STATIC_LIB and don't define
	GLIBMM_DLL when using MinGW unless GLIBMM_STATIC_LIB is defined.

	Signed-off-by: Armin Burgmeier <armin@arbur.net>

2009-05-31  Armin Burgmeier  <armin@arbur.net>

	Made gmmproc work on Windows

	* tools/pm/Output.pm: Made gmmproc work on Windows, so that it is
	possible to build glibmm and friends directly from git.

2009-05-26  José Alburquerque  <jaalburqu@svn.gnome.org>

	Corrected stray semicolons to fix the build with exceptions disabled.

2009-05-19  Siavash Safi  <siavash@siavashs.org>

	Fix --module option in enum.pl to work

2009-05-18  Jonathon Jongsma  <jonathon@quotidian.org>

	update .gitignore

2009-05-18  Jonathon Jongsma  <jonathon@quotidian.org>

	wrap Gio::FileIOStream

2009-05-18  Jonathon Jongsma  <jonathon@quotidian.org>

	wrap Gio::IOStream

2009-05-18  Jonathon Jongsma  <jonathon@quotidian.org>

	Fix build breakage due to comments in documentation

2009-05-17  Jonathon Jongsma  <jonathon@quotidian.org>

	add Gio::Cancellable::connect() and disconnect()

2009-05-17  Jonathon Jongsma  <jonathon@quotidian.org>

	update gio_methods.defs and gio_docs.xml

2009-05-16  Theppitak Karoonboonyanan  <thep@linux.thai.net>

	Fix non-sourcedir build failure

	Reference to generated beautify_docs.py in builddir, not srcdir.
	Bug #581319

	Signed-off-by: Theppitak Karoonboonyanan <thep@linux.thai.net>

2009-05-16  Jonathon Jongsma  <jonathon@quotidian.org>

	Make .doap file valid with mailto:

2009-05-16  Jonathon Jongsma  <jonathon@quotidian.org>

	Add small Glib::Property example

	* examples/properties/Makefile.am
	* examples/properties/properties_example.cc
	* .gitignore
	* configure.ac
	* examples/Makefile.am: add a brief example of using properties with
	a Glib::Object-derived class

2009-05-14  Murray Cumming  <murrayc@murrayc.com>

	Type registration: Ignore NULL GTypes, preventing crashes.

	* glib/glibmm/wrap.cc: wrap_register(): Silently ignore NULL GTypes.
	* glib/glibmm/class.cc: register_derived_type(): Silently ignore NULL
	GTypes. Use g_strconcat() instead of ustring+= to maybe make it more
	efficient. This helps gstreamermm, which may try to use type names of
	plugins that are not actually available on the system.

2009-05-06  Chris Vine  <chris@cvine.freeserve.co.uk>

	Allow comparison of const and non-const ustring iterators

	* glib/glibmm/ustring.h (ustring_Iterator<>): Turn the relational
	operators into non-templated functions, and rely on the implicit
	conversion of ustring::iterator to ustring::const_iterator.  This
	makes the operators work with mixed argument types. (bgo #580773)

2009-04-27  Jonathon Jongsma  <jonathon.jongsma@collabora.co.uk>

	add .gitignore file

2009-04-25  Johannes Schmid  <jhs@gnome.org>

	Remove gtk_text_iter docs translation as murrayc suggested.

2009-04-25  Johannes Schmid  <jhs@gnome.org>

	Fixed the regular expressions in the doc generation as Daniel suggested

	Use ^prefix instead of just prefix.

2009-04-25  Johannes Schmid  <jhs@gnome.org>

	Fix #568490 – gmmproc: gtk_accel_map_*() not substituted in documentation

	Fixed by adding some more special cases to the doc generation. Also fixes the same issue for
	most methods where the .defs file do not mention an object.

2009-04-23  Olav Vitters  <olav@bkor.dhs.org>

	Remove dot in DOAP description

2009-04-22  Jonathon Jongsma  <jonathon.jongsma@collabora.co.uk>

	add category to doap file

2009-04-21  Hubert Figuiere  <hub@figuiere.net>

	fix shortdesc

2009-04-21  Hubert Figuiere  <hub@figuiere.net>

	fix XML (was causing the git post hook to barf)

2009-04-21  Hubert Figuiere  <hub@figuiere.net>

	added doap file

2009-03-26  Daniel Elstner  <daniel@src.gnome.org>

	Rename configure.in to configure.ac

	* configure.ac: Rename from configure.in.
	* autogen.sh: Fix reference to configure.in.
	* MSVC_Net2005/glibmm/Makefile.am: ditto,
	* MSVC_Net2005/giomm/Makefile.am: ditto,
	* MSVC_Net2008/glibmm/Makefile.am: ditto,
	* MSVC_Net2008/giomm/Makefile.am: ditto.

	svn path=/trunk/; revision=810

2009-03-26  Daniel Elstner  <daniel@src.gnome.org>

	Use DK_ARG_ENABLE_WARNINGS() to replace custom M4 macro

	* scripts/dk-warn.m4: New file defining DK_ARG_ENABLE_WARNINGS().
	* scripts/macros.m4: Remove the old GTKMM_ARG_ENABLE_WARNINGS().
	* configure.in: Use new macro DK_ARG_ENABLE_WARNINGS() to set the
	Makefile variable $(GLIBMM_WXXFLAGS).
	* build_shared/Makefile_build.am_fragment (all_includes): Prepend
	$(GLIBMM_WXXFLAGS).
	* tools/extra_defs_gen/Makefile.am (INCLUDES): ditto,
	* examples/Makefile.am_fragment (all_includes): ditto,
	* tests/Makefile.am_fragment (INCLUDES): ditto.

	svn path=/trunk/; revision=809

2009-03-26  Daniel Elstner  <daniel@src.gnome.org>

	Remove stray semicolons to get rid of compiler warnings

	svn path=/trunk/; revision=808

2009-03-26  Daniel Elstner  <daniel@src.gnome.org>

	Fix generated code to not trigger warnings

	* tools/m4/list.m4 (GP_LIST_FIND): Rewrite the two find() loops
	to avoid a GCC warning about a lone semicolon as a loop body.

	svn path=/trunk/; revision=806

2009-03-25  Murray Cumming  <murrayc@murrayc.com>

	Remove broken definitions - mostly functions that take function pointers.

2009-03-25  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/glib_enums.defs:
	* glib/src/glib_functions.defs: Remove broken definitions - mostly 
	functions that take function pointers. I wonder why I did not notice 
	this before.

	svn path=/trunk/; revision=805

2009-03-23  Daniel Elstner  <daniel@src.gnome.org>

	Fix --disable-api-exceptions build

	* glib/src/keyfile.{ccg,hg}: Conditionalize all exception-handling
	code in order to fix the build with --disable-api-exceptions.
	* glib/src/regex.hg: ditto,
	* gio/src/appinfo.ccg: ditto,
	* gio/src/file.{ccg,hg}: ditto,
	* gio/src/outputstream.ccg: ditto,
	* examples/keyfile/main.cc: ditto,
	* examples/regex/main.cc: ditto,
	* tests/giomm_ioerror/main.cc: ditto,
	* tests/giomm_simple/main.cc: ditto.

	svn path=/trunk/; revision=803

2009-03-23  Daniel Elstner  <daniel@src.gnome.org>

	Remove generated file from repository

	svn path=/trunk/; revision=802

2009-03-22  José Alburquerque  <jaalburqu@src.gnome.org>

	Forgot bug numbers to recent ChangeLog entries.

	svn path=/trunk/; revision=799

2009-03-20  José Alburquerque  <jaalburqu@svn.gnome.org>

	Added _CUSTOM_CTOR_CAST to _CLASS_GOBJECT for classes that need to include

2009-03-19  José Alburquerque  <jaalburqu@svn.gnome.org>

	* tools/m4/class_gobject.m4: Added _CUSTOM_CTOR_CAST to _CLASS_GOBJECT
	for classes that need to include custom code in their cast and
	construct_params constructors as is done with _CLASS_GTKOBJECT.

	svn path=/trunk/; revision=798

2009-03-19  José Alburquerque  <jaalburqu@svn.gnome.org>

	Modified _GET_TYPE_FUNC() to properly work with types like GtkFOOBar

2009-03-18  José Alburquerque  <jaalburqu@svn.gnome.org>

	* tools/m4/base.m4: Modified _GET_TYPE_FUNC() to properly work with
	types like GtkFOOBar producing, for example, gtk_foo_bar_get_type()
	instead of gtk_fo_obar_get_type().

	svn path=/trunk/; revision=797

2009-03-16  Armin Burgmeier  <armin@openismus.com>

	Added emblem.[h|cc], emblemedicon.[h|cc] and memoryoutputstream.[h|cc] to

2009-03-16  Armin Burgmeier  <armin@openismus.com>

	* MSVC_Net2005/giomm/giomm.vcproj:
	* MSVC_Net2008/giomm/giomm.vcproj: Added emblem.[h|cc],
	emblemedicon.[h|cc] and memoryoutputstream.[h|cc] to the project.

	* tools/extra_defs_gen/generate_defs_gio.cc: #ifdef-out the unix types
	on Windows.

	svn path=/trunk/; revision=796

2009-03-16  Jonathon Jongsma  <jjongsma@src.gnome.org>

	bump version update for release

	svn path=/trunk/; revision=794

2009-03-09  Daniel Elstner  <daniel@src.gnome.org>

	Replace nested double quotes in the docs string by single quotes to ease

	* tools/extra_defs_gen/generate_extra_defs.cc (get_properties):
	Replace nested double quotes in the docs string by single quotes
	to ease the parsing pain of gmmproc.

	svn path=/trunk/; revision=792

2009-03-03  Murray Cumming  <murrayc@src.gnome.org>

	Increased version.

	svn path=/trunk/; revision=791

2009-02-23  Murray Cumming  <murrayc@murrayc.com>

	Regenerated, adding FILE_CREATE_REPLACE_DESTINATION and

2009-02-23  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_enums.defs: Regenerated, adding 
	FILE_CREATE_REPLACE_DESTINATION and Error::TOO_MANY_OPEN_FILES.
	* gio/src/gio_signals.defs: Regenerated.
	* go/src/mountoperation: Added the aborted signal.

	svn path=/trunk/; revision=790

2009-02-22  Murray Cumming  <murrayc@murrayc.com>

	Remove extra ;s on the new signalsl, to avoid compiler warnings.

2009-02-22  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/drive.hg: Remove extra ;s on the new signalsl, to avoid 
	compiler warnings.

	svn path=/trunk/; revision=789

2009-02-21  Jonathon Jongsma  <jjongsma@src.gnome.org>

	fix distcheck

	svn path=/trunk/; revision=787

2009-02-20  Jonathon Jongsma  <jjongsma@src.gnome.org>

	update for 2.19.3 release

	svn path=/trunk/; revision=786

2009-02-17  Daniel Elstner  <daniel@src.gnome.org>

	Remove mention of G_GNUC_PRETTY_FUNCTION in comment because a code

	* glib/glibmm/debug.h: Remove mention of G_GNUC_PRETTY_FUNCTION in
	comment because a code maintenance tool of André Klapper complained
	about it.
	* glib/glibmm/objectbase.cc: Likewise.

	svn path=/trunk/; revision=785

2009-02-06  Murray Cumming  <murrayc@murrayc.com>

	Regenerated.

2009-02-06  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_methods.defs: Regenerated.

	* gio/src/filterinputstream.hg: Added get/set_close_base_stream().
	* gio/src/filteroutputstream.hg: Added get/set_close_base_stream().
	* gio/src/unixinputstream.hg: Added get_fd() and get/set_close_fd().
	* gio/src/unixoutputstream.hg: Added get_fd() and get/set_close_fd().

	* gio/src/datainputstream.[hg|ccg]: Added read_until_async(), 
	read_until_finish(), read_line_async() and read_line_finish().
	Added documentation for read_until() and read_line().

	svn path=/trunk/; revision=784

2009-02-06  Murray Cumming  <murrayc@src.gnome.org>

	Corrected the ChangeLog

	svn path=/trunk/; revision=783

2009-02-06  Murray Cumming  <murrayc@murrayc.com>

	Added unix types. Regenerated. Added buffer_size property. Added

2009-02-06  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_defs_gio.cc: Added unix types.
	* gio/src/gio_signals.defs: Regenerated.
	* gio/src/bufferedinputstream.hg: Added buffer_size property.
	* gio/src/bufferedoutputstream.hg: Added buffer_size and auto_grow 
	properties.
	* gio/src/datainputstream.hg: Added byte_order and newline_type 
	properties.
	* gio/src/dataoutputstream.hg: Added byte_order property.
	* gio/src/filterinputstream.hg: Added close_base_ stream property.
	* gio/src/filteroutputstream.hg:
	* gio/src/unixinputstream.hg: Added fd and close_fd properties.
	* gio/src/unixoutputstream.hg: Added fd and close_fd properties.

	svn path=/trunk/; revision=782

2009-02-05  Theppitak Karoonboonyanan  <thep@linux.thai.net>

	Allow pangomm to build outside the source tree. Bug #570216

2009-02-05  Theppitak Karoonboonyanan  <thep@linux.thai.net>

	* docs/reference/Doxyfile.in:
	* docs/reference/Makefile.am: Allow pangomm to build outside the source 
	tree. Bug #570216

	svn path=/trunk/; revision=781

2009-02-05  Murray Cumming  <murrayc@murrayc.com>

	create(): For the version when GLIBMM_EXCEPTIONS_ENABLED is not defined,

2009-02-05  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/regex.hg: create(): For the version when 
	GLIBMM_EXCEPTIONS_ENABLED is not defined, do not specify default 
	parameter values because we have an extra error parameter.
	Bug #570648 (Bernd Buschinski)

	svn path=/trunk/; revision=780

2009-01-19  Deng Xiyue  <manphiz@gmail.com>

	Change license header to mention Lesser General Public License version 2.1

2009-01-20  Deng Xiyue  <manphiz@gmail.com>

	* Change license header to mention Lesser General Public License
	version 2.1 instead of Library General Public License, to be
	consistent with COPYING.

	svn path=/trunk/; revision=779

2009-01-19  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=778

2009-01-19  Tao Wang  <dancefire@gmail.com>

	Do not use a non-ASCII dash character, to avoid the MSVC++ warning C4819

2009-01-19  Tao Wang  <dancefire@gmail.com>

	* glib/src/nodetree.hg: Do not use a non-ASCII dash character, to 
	avoid the MSVC++ warning C4819 with Visual Studio 2008.
	Bug #568072

	svn path=/trunk/; revision=776

2009-01-09  Murray Cumming  <murrayc@murrayc.com>

	wrap_auto_interface<>(): Add a warning to give a clue when the

2009-01-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/wrap.h: wrap_auto_interface<>(): Add a warning to give a 
	clue when the dynamic_cast fails, for instance if you are doing some 
	incorrect multiple inheritance.

	svn path=/trunk/; revision=774

2009-01-08  Daniel Elstner  <daniel@src.gnome.org>

	:compose): Add an overload which takes only a format string and no

	* glib/glibmm/ustring.h (ustring::compose): Add an overload which
	takes only a format string and no arguments to be substituted.  It
	is essentially a null-operation as long as the format string does
	not contain any invalid argument references.  Bug #506394.

	svn path=/trunk/; revision=773

2009-01-07  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Bug 566845 – Leaks found in glibmm uriutils.cc

	svn path=/trunk/; revision=771

2009-01-03  Murray Cumming  <murrayc@murrayc.com>

	Added implementation of the make_directory_with_parents() method overload

2009-01-03  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg: Added implementation of the 
	make_directory_with_parents() method overload that takes no parameter.
	Bug #566003 (Philip Belemezov).

	svn path=/trunk/; revision=770

2008-12-24  Murray Cumming  <murrayc@murrayc.com>

	Added Glib::spawn_*() alternative API for when GLIBMM_EXCEPTIONS_ENABLED

2008-12-24  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/spawn.ccg:
	* glib/src/spawn.hg: Added Glib::spawn_*() alternative API for when 
	GLIBMM_EXCEPTIONS_ENABLED is not enabled (when compiling without 
	C++ exceptions.)
	Bug #565487
	(Jonathon Jongsma)

	svn path=/trunk/; revision=769

2008-12-14  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Update NEWS

	svn path=/trunk/; revision=766

2008-12-14  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Bump version to 2.19.1

	also update changelog forgotten in last commit

	svn path=/trunk/; revision=765

2008-12-14  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Fix ABI breakage caused by new signals in Gio::Drive

	Wrap the new signals in Gio::Drive with no_default_handler so that new virtual
	functions are not added.  This was an ABI breakage in 2.19.0

	svn path=/trunk/; revision=764

2008-12-13  Jonathon Jongsma  <jjongsma@src.gnome.org>

	update NEWS to prepare for release

	svn path=/trunk/; revision=762

2008-12-13  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Fix tests to use standard filenames

	svn path=/trunk/; revision=761

2008-12-13  Jonathon Jongsma  <jjongsma@src.gnome.org>

	MemoryOutputStream fix to inherit from correct GType

	* gio/src/memoryoutputstream.hg: Fix a copy-paste error where I accidentally
	left a FilterOutputStream type in

	svn path=/trunk/; revision=760

2008-12-12  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Add MemoryOutputStream

	svn path=/trunk/; revision=759

2008-12-12  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Add Emblem and EmblemedIcon classes

	svn path=/trunk/; revision=758

2008-12-12  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Add DesktopAppInfo::create_from_keyfile()

	svn path=/trunk/; revision=757

2008-12-12  Jonathon Jongsma  <jjongsma@src.gnome.org>

	rebuild docs when a giomm header file is changed

	svn path=/trunk/; revision=756

2008-12-12  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add content_type_from_mime_type()

	svn path=/trunk/; revision=755

2008-12-12  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Add a bunch of new / missed API

	svn path=/trunk/; revision=754

2008-12-12  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Re-generate .defs for 2.19.x

	Also bump the glib requirement

	svn path=/trunk/; revision=753

2008-12-12  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Add some convenience rules for generating .defs files

	At the moment the paths are tailored for my devel machine, hopefully we can
	generalize that in the future

	svn path=/trunk/; revision=752

2008-12-12  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Add convenience functions for one-shot timer/idle handlers

	* glib/glibmm/main.h:
	* glib/glibmm/main.cc: Added SignalIdle::connect_once,
	SignalTimeout::connect_once, and SignalTimeout::connect_seconds_once.

	svn path=/trunk/; revision=750

2008-12-10  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Clean up glib includes (Bug #563987)

	svn path=/trunk/; revision=749

2008-12-01  Hubert Figuiere  <hub@src.gnome.org>

	Change the way unused variables are marked. Bug #562716

	* glib/src/markup.ccg: Change the way unused variables
	are marked. Bug #562716

	svn path=/trunk/; revision=748

2008-11-29  Hubert Figuiere  <hub@src.gnome.org>

	Fix -Wshadow warnings. Bug #555743.

	* glib/src/nodetree.hg: Fix -Wshadow warnings. Bug #555743.

	svn path=/trunk/; revision=746

2008-10-21  Jonathon Jongsma  <jjongsma@src.gnome.org>

	bump version to 2.18.1, update NEWS

	svn path=/trunk/; revision=743

2008-10-21  Jonathon Jongsma  <jjongsma@src.gnome.org>

	updated the release-announce mail template

	svn path=/trunk/; revision=742

2008-10-20  Armin Burgmeier  <armin@openismus.com>

	Fixed the const char* specialization for Stringify<> by making the string_

2008-10-16  Armin Burgmeier  <armin@openismus.com>

	* glib/glibmm/ustring.h: Fixed the const char* specialization for
	Stringify<> by making the string_ member a const Glib::ustring instead
	of a const Glib::ustring&. Also enabled the char[N] specialization for
	string literals.

	* tests/glibmm_ustring_compose/main.cc: Enabled the test for the
	specialization for string literals.
	Bug #506410 (Szilárd Pfeiffer)

	svn path=/trunk/; revision=741

2008-10-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	Modify signal and props generation tool to generate interface signals.

2008-10-15  José Alburquerque  <jaalburqu@svn.gnome.org>

	* tools/extra_defs_gen/generate_extra_defs.cc: Modify signal and props
	generation tool to generate interface signals.

	svn path=/trunk/; revision=740

2008-10-15  Armin Burgmeier  <armin@openismus.com>

	Made FileEnumerator::next_file not add an additional reference to the

2008-10-15  Armin Burgmeier  <armin@openismus.com>

	* gio/src/fileenumerator.hg:
	* gio/src/fileenumerator.ccg: Made FileEnumerator::next_file not add
	an additional reference to the return value, because the C version
	creates a new object. Also, changed ownership of the list returned by
	FileEnumerator::next_files_finish to be deep instead of shallow. Bug
	#556387.

	svn path=/trunk/; revision=739

2008-10-10  Armin Burgmeier  <armin@openismus.com>

	Rename FILE_TYPE_UNKNOWN to FILE_TYPE_NOT_KNOWN because the former is a

2008-10-09  Armin Burgmeier  <armin@openismus.com>

	* gio/src/fileinfo.hg: Rename FILE_TYPE_UNKNOWN to FILE_TYPE_NOT_KNOWN
	because the former is a #define on Windows in winbase.h, included from
	windows.h. Keep FILE_TYPE_UNKNOWN for compatibility if it is not
	already defined.

	svn path=/trunk/; revision=738

2008-10-09  Armin Burgmeier  <armin@openismus.com>

	Removed README from EXTRA_DIST to fix `make dist'.

2008-10-09  Armin Burgmeier  <armin@openismus.com>

	* MSVC_Net2008/Makefile.am: Removed README from EXTRA_DIST to fix
	`make dist'.

	svn path=/trunk/; revision=737

2008-10-08  Armin Burgmeier  <armin@openismus.com>

	Adapt to the new MSVC++ DLL naming convention.

2008-10-08  Armin Burgmeier  <armin@openismus.com>

	* MSVC_Net2005/examples/dispatcher2/dispatcher2.vcproj:
	* MSVC_Net2005/examples/dispatcher/dispatcher.vcproj:
	* MSVC_Net2005/examples/options/options.vcproj:
	* MSVC_Net2005/examples/thread/thread.vcproj:
	* MSVC_Net2005/examples/thread_pool/thread_pool.vcproj:
	* MSVC_Net2005/giomm/giomm.vcproj:
	* MSVC_Net2005/glibmm/glibmm.vcproj: Adapt to the new MSVC++ DLL
	naming convention.

	* MSVC_Net2008/: Added MSVC 2008 project files.

	* configure.in:
	* Makefile.am: Add the new files to the build.

	svn path=/trunk/; revision=736

2008-10-05  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Add a workaround for the HOST_NOT_FOUND symbol conflicts

	As suggested by Szilárd Pfeiffer in Bug #529496
	* tests/giomm_ioerror/main.cc: add a test for this

	svn path=/trunk/; revision=735

2008-09-29  Armin Burgmeier  <armin@openismus.com>

	Keep @param and @throws intact, so these can be used in

2008-09-19  Armin Burgmeier  <armin@openismus.com>

	* tools/pm/DocsParser.pm (convert_tags_to_doxygen): Keep @param and
	@throws intact, so these can be used in *_docs_override_xml. Bug
	#539891.

	svn path=/trunk/; revision=734

2008-09-22  Armin Burgmeier  <armin@arbur.net>

	Added uriutils.cc and nodetree.cc to the project.

2008-09-22  Armin Burgmeier  <armin@arbur.net>

	* MSVC_Net2005/glibmm/glibmm.vcproj: Added uriutils.cc and nodetree.cc
	to the project.

	svn path=/trunk/; revision=733

2008-09-22  Armin Burgmeier  <armin@arbur.net>

	Fixed the MSVC build of the examples and tests if configure did not run

2008-09-22  Armin Burgmeier  <armin@arbur.net>

	* MSVC_Net2005/examples/dispatcher2/dispatcher2.vcproj:
	* MSVC_Net2005/examples/dispatcher/dispatcher.vcproj:
	* MSVC_Net2005/examples/markup/markup.vcproj:
	* MSVC_Net2005/examples/options/options.vcproj:
	* MSVC_Net2005/examples/thread/thread.vcproj:
	* MSVC_Net2005/examples/thread_pool/thread_pool.vcproj:
	* MSVC_Net2005/giomm/giomm.vcproj:
	* MSVC_Net2005/glibmm/glibmm.vcproj:
	* MSVC_Net2005/tests/giomm_simple/giomm_simple.vcproj:
	* MSVC_Net2005/tests/glibmm_value/glibmm_value.vcproj: Fixed the MSVC
	build of the examples and tests if configure did not run before.

	svn path=/trunk/; revision=732

2008-09-21  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Fix a minor issue in the Makefile's release target

	svn path=/trunk/; revision=730

2008-09-21  Jonathon Jongsma  <jjongsma@src.gnome.org>

	update to get ready for 2.18.0 release

	svn path=/trunk/; revision=729

2008-09-08  Murray Cumming  <murrayc@murrayc.com>

	Added COPYING.tools with the GPL because the tools/*.cc file is GPL. Bug

2008-09-08  Murray Cumming  <murrayc@murrayc.com>

	* COPYING.tools:
	* Makefile.am: Added COPYING.tools with the GPL because the tools/*.cc 
	file is GPL. Bug #550789.

	svn path=/trunk/; revision=728

2008-09-04  Jonathon Jongsma  <jjongsma@src.gnome.org>

	update version number, NEWS

	svn path=/trunk/; revision=726

2008-09-03  Murray Cumming  <murrayc@src.gnome.org>

	Tiny change

	svn path=/trunk/; revision=725

2008-09-03  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	Implemented clone function to merge the constructors into that and fixed

2008-08-26  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	* glib/src/nodetree.hg: Implemented clone function to merge the
	constructors into that and fixed clear function the operator=
	function.
	* tests/glibmm_nodetree/main.cc: Simplified the test case.
	Bug #547901.

	svn path=/trunk/; revision=724

2008-08-27  Armin Burgmeier  <armin@arbur.net>

	Replaced #include "afxres.h" by #include <windows.h> which does the job

2008-08-27  Armin Burgmeier  <armin@arbur.net>

	* MSVC_Net2005/glibmm/glibmm.rc.in:
	* MSVC_Net2005/giomm/giomm.rc.in: Replaced #include "afxres.h" by
	#include <windows.h> which does the job equally well, and allows
	compilation with the freely available Visual Studio Express compiler.

	svn path=/trunk/; revision=723

2008-08-27  Armin Burgmeier  <armin@arbur.net>

	Only include config.h when HAVE_CONFIG_H is defined, to allow building

2008-08-27  Armin Burgmeier  <armin@arbur.net>

	* glib/glibmm/ustring.cc: Only include config.h when HAVE_CONFIG_H is
	defined, to allow building glibmm with MSVC without having generated
	config.h before. The only thing config.h is used for is the
	SIZEOF_WCHAR_T define anyway, and this is not needed for a MSVC build.
	Bug #549343.

	svn path=/trunk/; revision=722

2008-08-26  Murray Cumming  <murrayc@murrayc.com>

	Actually use the copy constructor (or operator=), instead of just copying

2008-08-26  Murray Cumming  <murrayc@murrayc.com>

	* tests/glibmm_nodetree/main.cc: Actually use the copy constructor (or operator=), 
	instead of just copying the pointer.

	svn path=/trunk/; revision=721

2008-08-26  Murray Cumming  <murrayc@murrayc.com>

	Actually use the copy constructor (or operator=), instead of just copying

2008-08-26  Murray Cumming  <murrayc@murrayc.com>

	* tests/glibmm_nodetree/main.cc: Actually use the copy constructor (or operator=), 
	instead of just copying the pointer.

	svn path=/trunk/; revision=720

2008-08-26  Murray Cumming  <murrayc@murrayc.com>

	Added an operator=() because we have a copy constructor. Moved some code

2008-08-26  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/nodetree.hg: Added an operator=() because we have a copy constructor.
	Moved some code into a private clear() method so we can reuse it.

	svn path=/trunk/; revision=719

2008-08-26  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	Added a copy constructor. Therefore, take store the data by value instead

2008-08-26  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	* glib/src/nodetree.hg: Added a copy constructor. Therefore, take 
	store the data by value instead of reference, taking it by const reference.
	* tests/glibmm_nodetree/main.cc: Test the copy constructor.
	Bug #547909.

	svn path=/trunk/; revision=718

2008-08-18  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	Fixed pointer handling problem in find_child. Bug #547909.

2008-08-15  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	* glib/src/nodetree.hg: Fixed pointer handling problem in find_child.
	Bug #547909.

	svn path=/trunk/; revision=717

2008-08-18  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	Implement the C++ version of GNode test case. Bug #547889

2008-08-15  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	* tests/glibmm_nodetree/main.cc: Implement the C++ version of GNode test
	case.
	Bug #547889

	svn path=/trunk/; revision=716

2008-08-18  Murray Cumming  <murrayc@src.gnome.org>

	trying to commit

	svn path=/trunk/; revision=715

2008-08-08  Armin Burgmeier  <armin@arbur.net>

	Moved from MSVC_Net2003

2008-08-08  Armin Burgmeier  <armin@arbur.net>

	* MSVC_Net2005/: Moved from MSVC_Net2003

	* MSVC_Net2005/glibmm.sln:
	* MSVC_Net2005/glibmm/glibmm.vcproj:
	* MSVC_Net2005/examples/dispatcher/dispatcher.vcproj: Converted to
	project files for Visual Studio 2005.

	* MSVC_Net2005/glibmm/glibmm.rc.in: Removed the #include "resource.h"
	since there is no resource.h in the project, and the resource still
	seems to compile.

	* MSVC_Net2005/giomm/giomm.rc.in:
	* MSVC_Net2005/giomm/giomm.vcproj:
	* MSVC_Net2005/giomm/Makefile.am: Added giomm to the MSVC project.

	* MSVC_Net2005/tests/giomm_simple/giomm_simple.vcproj:
	* MSVC_Net2005/tests/giomm_simple/Makefile.am: Added giomm_simple to
	the MSVC project.

	* MSVC_Net2005/tests/Makefile.am:
	* MSVC_Net2005/Makefile.am:
	* Makefile.am:
	* configure.in: Adapted build files.

	svn path=/trunk/; revision=714

2008-08-06  Jonathon Jongsma  <jjongsma@src.gnome.org>

	prepare for 2.17.2 release

	svn path=/trunk/; revision=712

2008-08-06  Murray Cumming  <murrayc@murrayc.com>

	Added a test case. Added a ustring::Stringify<> template specialization so

2008-08-06  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* tests/Makefile.am:
	* tests/glibmm_ustring_compose/main.cc: Added a test case.
	* glib/glibmm/ustring.h: Added a ustring::Stringify<> 
	template specialization so that ustring::compose() works with 
	const char* arguments, though it still needs to be fixed to 
	work for string literals.
	Bug #506410 (Szilárd Pfeiffer).

	svn path=/trunk/; revision=711

2008-08-06  Murray Cumming  <murrayc@src.gnome.org>

	Whitespace corrections

	svn path=/trunk/; revision=710

2008-08-06  Murray Cumming  <murrayc@src.gnome.org>

	Whitespace corrections

	svn path=/trunk/; revision=709

2008-08-06  Murray Cumming  <murrayc@murrayc.com>

	Make gobject_ and data_ private, to remove them from protected API. Patch

2008-08-06  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/nodetree.hg: Make gobject_ and data_ private, 
	to remove them from protected API. Patch from Szilárd Pfeiffer.
	Bug #546485.
	Make gobj() inline.

	svn path=/trunk/; revision=708

2008-08-04  Murray Cumming  <murrayc@murrayc.com>

	Added some API documentation about the need to register a new GType when

2008-08-04  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/propertyproxy.h: Added some API documentation 
	about the need to register a new GType when adding properties.
	Bug #523043 (Moritz Ulrich).

	svn path=/trunk/; revision=707

2008-08-02  Murray Cumming  <murrayc@murrayc.com>

	Change the Main Page link to link to gtkmm.org/documentation.shtml

2008-08-02  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/glibmm_header.html_fragment: Change the Main 
	Page link to link to gtkmm.org/documentation.shtml

	svn path=/trunk/; revision=706

2008-08-02  Murray Cumming  <murrayc@murrayc.com>

	Change the Main Page link to link to gtkmm.org/documentation.shtml

2008-08-02  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/glibmm_header.html_fragment: Change the Main 
	Page link to link to gtkmm.org/documentation.shtml

	svn path=/trunk/; revision=705

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	Remove the mention of tree.cc here to fix the build. Generated files

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/Makefile.am: Remove the mention of tree.cc here to 
	fix the build. Generated files should never be menioned there.

	svn path=/trunk/; revision=704

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	Hand-code the TraverseType enum, to add a prefix to the values. Adapted.

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/nodetree.hg: Hand-code the TraverseType enum, to add 
	a prefix to the values.
	* tests/glibmm_nodetree/main.cc: Adapted.

	svn path=/trunk/; revision=703

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	find(), find_child(), traverse(), foreach(): Rearrange the parameters so

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/nodetree.hg: find(), find_child(), traverse(), foreach():
	Rearrange the parameters so we can have default values.
	* tests/glibmm_nodetree/main.cc: Adapted.

	svn path=/trunk/; revision=702

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	Move the TraverseFlags enum into the class, and hand-code it to avoid

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/nodetree.hg: Move the TraverseFlags enum into 
	the class, and hand-code it to avoid problems with _WRAP_ENUM(). 
	* tests/glibmm_nodetree/main.cc: Adapted.
	Bug #545050 (Szilárd Pfeiffer).

	svn path=/trunk/; revision=701

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	Renamed to nodetree.hg

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* glib/glibmm.h:
	* glib/src/Makefile_list_of_hg.am_fragment:
	* glib/src/nodetree.hg:
	* glib/src/tree.hg: Renamed to nodetree.hg
	* tests/Makefile.am:
	* tests/glibmm_tree/Makefile.am:
	* tests/glibmm_tree/main.cc: Renamed to glibmm_nodetree/

	svn path=/trunk/; revision=700

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	Renamed Glib::Tree to Glib::NodeTree to avoid confusion with GTree,

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/tree.hg: Renamed Glib::Tree to Glib::NodeTree to avoid 
	confusion with GTree, because we actually wrap GNode, but do not like 
	that name. As discussed in bug #520778.
	* tests/glibmm_tree/main.cc: Adapted.

	svn path=/trunk/; revision=699

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	Build the docs at the end, after the tests, to save time when testing API

2008-07-29  Murray Cumming  <murrayc@murrayc.com>

	* Makefile.am: Build the docs at the end, after the tests, to 
	save time when testing API changes.

	* glib/src/tree.hg: Const corrections: Add const and non-const versions 
	of many methods, instead of returning non-const objects from const methods.
	find().
	Changed max_height() to get_max_height() for consistency.
	* tests/glibmm_tree/main.cc: Adapted to changed API.

	svn path=/trunk/; revision=698

2008-07-29  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	Make the callbacks take a Tree<> instead of just the data, so they can use

2008-07-29  Szilárd Pfeiffer  <szilard.pfeiffer@gmail.com>

	* glib/src/tree.hg: Make the callbacks take a Tree<> instead of just 
	the data, so they can use methods on the tree (which can be a node 
	in the tree).
	gobject_: Make this protected.
	Provide the this pointer as data to g_node_new() so we can retrieve 
	it later.
	Removed children_ and parent_ because we don't need a separate store now that 
	we can get the C++ instance from the gobject instance.
	owns_gobject_: Removed because it is was always true, so the gobject was 
	always destroyed (and still is).
	* tests/glibmm_tree/main.cc: Updated for the changed API.
	Bug #520778.

	svn path=/trunk/; revision=697

2008-07-27  Murray Cumming  <murrayc@src.gnome.org>

	Added a little TODO

	svn path=/trunk/; revision=696

2008-07-25  Murray Cumming  <murrayc@murrayc.com>

	Added the drive_eject_button signal.

2008-07-25  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/volumemonitor.hg: Added the drive_eject_button signal.

2008-07-25  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_enums.defs: Hacked in a replacement 
	enum for Gio::Error::HOST_NOT_FOUND as 
	Gio::Error::HOST_WAS_NOT_FOUND, to avoid a clash with 
	a netdb.h define.
	Bug #529496.
	* configure.in:
	* tests/Makefile.am:
	* tests/giomm_ioerror/Makefile.am:
	* tests/giomm_ioerror/main.cc: Added a test to make sure 
	that our hacked-in enum value stays hacked in.

	svn path=/trunk/; revision=695

2008-07-25  Murray Cumming  <murrayc@murrayc.com>

	Regenerated. Corrected an _IGNORE().

2008-07-25  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_enums.defs:
	* gio/src/gio_methods.defs:
	* gio/src/gio_signals.defs: Regenerated.
	* gio/src/mount.hg: Corrected an _IGNORE().
	* gio/giomm/contenttype.cc:
	* gio/giomm/contenttype.h: Added content_type_guess_for_tree(

	svn path=/trunk/; revision=694

2008-07-23  Damien Carbery  <damien.carbery@sun.com>

	Change grep to use -i when checking for GNU m4. This fixes the test on

	2008-07-23  Damien Carbery <damien.carbery@sun.com>

	* scripts/macros.m4: Change grep to use -i when checking for GNU m4.
	This fixes the test on Solaris. Bug #423990.

	svn path=/trunk/; revision=693

2008-07-16  Jonathon Jongsma  <jjongsma@src.gnome.org>

	update for new release

	* NEWS: update for new release

	svn path=/trunk/; revision=691

2008-07-16  Jonathon Jongsma  <jjongsma@src.gnome.org>

	bump version and min required glib version

	svn path=/trunk/; revision=690

2008-07-16  Jens Georg  <mail@jensge.org>

	Mention new source files for regex and keyfile. Bug #543292.

2008-07-16  Jens Georg  <mail@jensge.org>

	* MSVC_Net2003/glibmm/glibmm.vcproj: Mention new source files 
	for regex and keyfile.
	Bug #543292.

	svn path=/trunk/; revision=689

2008-07-16  Murray Cumming  <murrayc@murrayc.com>

	Added make_directory_with_parents(), query_file_type(), monitor().

2008-07-16  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added make_directory_with_parents(), 
	query_file_type(), monitor().
	* gio/src/fileenumerator.ccg:
	* gio/src/fileenumerator.hg: Added get_container().
	* gio/src/mount.hg: Added guess_content_type() and 
	guess_content_type_finish().
	* gio/src/themedicon.hg: Added prepend_name().
	* gio/src/volume.hg: Added get_activation_root().
	* tools/m4/convert_gio.m4: Added a necessary conversion.

	svn path=/trunk/; revision=688

2008-07-15  Murray Cumming  <murrayc@murrayc.com>

	Regenerated with h2def.py Added reset().

2008-07-15  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_methods.defs:
	* glib/src/glib_functions.defs: Regenerated with h2def.py
	* glib/src/checksum.hg: Added reset().

	svn path=/trunk/; revision=687

2008-07-15  Murray Cumming  <murrayc@murrayc.com>

	Avoid a circular include to fix the build.

2008-07-15  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.ccg:
	* gio/src/appinfo.hg: Avoid a circular include to fix the build.

	svn path=/trunk/; revision=686

2008-07-15  Benjamin Herr  <ben@0x539.de>

	Removed some unnecessary ; characters, to avoid warnings. Bug #542929.

2008-07-15  Benjamin Herr  <ben@0x539.de>

	* gio/src/volumemonitor.hg: Removed some unnecessary ; characters, 
	to avoid warnings.
	Bug #542929.

	svn path=/trunk/; revision=685

2008-07-15  Murray Cumming  <murrayc@murrayc.com>

	get_display(), get_startup_notify_id(): Take a list of Gio::File, not

2008-07-14  Murray Cumming,  <murrayc@murrayc.com>

	* tools/m4/convert_gio.m4:
	* gio/src/appinfo.hg: get_display(), get_startup_notify_id():
	Take a list of Gio::File, not filepath string. Now that the C API is 
	properly documented we know that this is correct. It's an API break 
	but this function could nothave worked before.

	* glib/src/glib_docs.xml: Regenerate.
	* glib/src/glib_docs_override.xml: Add overrides for 
	g_key_file_load_from_file() and g_key_file_get_value() to mention 
	exceptions.

	svn path=/trunk/; revision=684

2008-07-02  Johannes Schmid  <jhs@gnome.org>

	Improve documentation of Glib::OwnershipType (#540875)

2008-06-30  Johannes Schmid  <jhs@gnome.org>

	* glib/glibmm/containerhandle_shared.h:
	Improve documentation of Glib::OwnershipType (#540875)

	svn path=/trunk/; revision=681

2008-07-02  Armin Burgmeier  <armin@arbur.net>

	Pass NULL to the underlying C function for the etags parameter in the

2008-07-02  Armin Burgmeier  <armin@arbur.net>

	* gio/src/file.ccg: Pass NULL to the underlying C function for the 
	etags parameter in the various replace_contents functions. Also bug
	#540656.

	svn path=/trunk/; revision=679

2008-06-29  Armin Burgmeier  <armin@arbur.net>

	Pass NULL to the underlying C function for the etags parameter in various

2008-06-28  Armin Burgmeier  <armin@arbur.net>

	* gio/src/file.ccg: Pass NULL to the underlying C function for the
	etags parameter in various *_replace functions. Otherwise, existing
	files are not overwritten.

	svn path=/trunk/; revision=678

2008-06-23  Murray Cumming  <murrayc@murrayc.com>

	Added a little KeyFile example. I am surprised that we do not seem to have

2008-06-23  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* examples/Makefile.am:
	* examples/keyfile/Makefile.am:
	* examples/keyfile/example.ini:
	* examples/keyfile/main.cc: Added a little KeyFile example. I am 
	surprised that we do not seem to have one somewhere already.
	I need to move all these glibmm examples into gtkmm-documentation some 
	time.

	svn path=/trunk/; revision=676

2008-06-19  Murray Cumming  <murrayc@murrayc.com>

	Some whitespace changes. And more use of typedefs to simplify the code.

2008-06-19  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/tree.hg: Some whitespace changes. And more use of typedefs 
	to simplify the code.

	svn path=/trunk/; revision=675

2008-06-19  Levi Bard  <taktaktaktaktaktaktaktaktaktak@gmail.com>

	Some minor changes to deal with TODOs. Bug #538803.

2008-06-19  Levi Bard  <taktaktaktaktaktaktaktaktaktak@gmail.com>

	* glib/src/tree.hg: Some minor changes to deal with TODOs.
	Bug #538803.

	svn path=/trunk/; revision=674

2008-06-18  Chris Vine  <chris@cvine.freeserve.co.uk>

	document that the slot object passed to Glib::Thread::create() should not

	2008-06-17  Chris Vine <chris@cvine.freeserve.co.uk>

	* glib/src/thread.hg: document that the slot object passed to
	Glib::Thread::create() should not represent a non-static method of
	a class derived from sigc::trackable.
	See bug #512348.

	svn path=/trunk/; revision=673

2008-06-16  Jonathon Jongsma  <jjongsma@src.gnome.org>

	update NEWS and version for new release

	svn path=/trunk/; revision=669

2008-06-14  Murray Cumming  <murrayc@src.gnome.org>

	Added missing files

	svn path=/trunk/; revision=668

2008-06-13  Levi Bard  <taktaktaktaktaktaktaktaktaktak@gmail.com>

	Added Glib::Tree, a wrapper for GNode, providing an N-ary tree container,

2008-06-13  Levi Bard  <taktaktaktaktaktaktaktaktaktak@gmail.com>

	* glib/glibmm.h:
	* glib/glibmm/Makefile.am:
	* glib/src/Makefile_list_of_hg.am_fragment:
	* glib/src/tree.ccg:
	* glib/src/tree.hg: Added Glib::Tree, a wrapper for GNode, providing 
	an N-ary tree container, more or less like a standard C++ container.
	* configure.in:
	* tests/Makefile.am: Added some test code for this new API.
	Bug #520778

	svn path=/trunk/; revision=667

2008-06-13  Murray Cumming  <murrayc@murrayc.com>

	Used @newin2p18 on the new API and made some slight corrections to the new

2008-06-13  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/date.hg: Used @newin2p18 on the new API and made some 
	slight corrections to the new reference documentation comments.

	svn path=/trunk/; revision=666

2008-06-13  Murray Cumming  <murrayc@src.gnome.org>

	Marked the branch in the ChangeLog

	svn path=/trunk/; revision=665

2008-06-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	Contents of files in tests/glibmm_date/ (main.cc and Makefile.am) were

2008-06-11  José Alburquerque  <jaalburqu@svn.gnome.org>

	* tests/glibmm_date/Makefile.am: Contents of files in
	tests/glibmm_date/ (main.cc and Makefile.am) were duplicated when I
	applied patch in bug #536721 to already existing files before 6/9
	commit. Fixed main.cc already, so now repaired Makefile.am.

	svn path=/trunk/; revision=663

2008-06-10  José Alburquerque  <jaalburqu@svn.gnome.org>

	Removed duplicate code so test can compile.

2008-06-10  José Alburquerque  <jaalburqu@svn.gnome.org>

	* tests/glibmm_date/main.cc: Removed duplicate code so test can
	compile.

	svn path=/trunk/; revision=662

2008-06-10  José Alburquerque  <jaalburqu@svn.gnome.org>

	Added copy constructor and assignment operator; Made GDate constructor

2008-06-09  José Alburquerque  <jaalburqu@svn.gnome.org>

	* glib/src/date.ccg:
	* glib/src/date.hg: Added copy constructor and assignment operator;
	Made GDate constructor visible.

	* configure.in:
	* tests/Makefile.am:
	* tests/glibmm_date/Makefile.am:
	* tests/glibmm_date/main.cc: Added simple test to test Glib::Date.

	svn path=/trunk/; revision=661

2008-04-26  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Add TypeTraits implementations for Drive and Volume similar to the one added for Mount.

	svn path=/trunk/; revision=660

2008-04-26  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Add a TypeTraits implementation for Glib::RefPtr<Gio::Mount> so that we

	* gio/src/mount.hg: Add a TypeTraits implementation for
	Glib::RefPtr<Gio::Mount> so that we can wrap implementor types that don't
	have a wrapper (e.g. GHalMount in gvfs).  Fixes bug #529533

	svn path=/trunk/; revision=659

2008-04-24  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Improve the error message when failing to wrap a particular type of object

	* glib/glibmm/wrap.cc: Improve the error message when failing to wrap a
	particular type of object to give a hint about initializing the library
	since we get so many questions about this (bug #529648)

	svn path=/trunk/; revision=658

2008-04-19  Jonathon Jongsma  <jjongsma@src.gnome.org>

	bump to 2.16.2 for release

	svn path=/trunk/; revision=656

2008-04-16  Murray Cumming  <murrayc@murrayc.com>

	Moved the enum back out of the doxygen group, because that results in the

2008-04-16  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/spawn.hg: Moved the enum back out of the doxygen group, 
	because that results in the enums group being inside the spawn group.

	svn path=/trunk/; revision=655

2008-04-16  Murray Cumming  <murrayc@murrayc.com>

	Addded doxygen documentation based on the C documentation. Bug #528271

2008-04-16  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/spawn.hg: Addded doxygen documentation based on the 
	C documentation.
	Bug #528271 (Jonathon Jongsma)

	svn path=/trunk/; revision=654

2008-04-13  Murray Cumming  <murrayc@murrayc.com>

	set_long_name(): Do not use NULL for an empty string, because has a

2008-04-13  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.ccg: set_long_name(): Do not use NULL for an 
	empty string, because  has a special meaning to GOptionEntry - it 
	is the definition of G_OPTION_REMANING.
	* examples/options/main.cc: Add an entry with the long name 
	G_OPTION_REMAINING, to list additional non-named arguments. More 
	explicit API should be added for this.
	Bug #526831 (Christian Lundgren).

	svn path=/trunk/; revision=653

2008-04-13  Murray Cumming  <murrayc@murrayc.com>

	Create an end iterator and use it, instead of just using the

2008-04-13  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/ustring.cc erase(): Create an end iterator and use it, 
	instead of just using the std::string(iterator) erase implementation, 
	because that only removes one byte, which can make the whole string 
	invalid UTF-8.
	Bug #527687 (Jarro).

	svn path=/trunk/; revision=652

2008-04-11  Murray Cumming  <murrayc@murrayc.com>

	Hand-code set_description(), set_arg_description() and set_long_name(), to

2008-04-11  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.ccg:
	* glib/src/optionentry.hg: Hand-code set_description(), 
	set_arg_description() and set_long_name(), to free any existing string, 
	to maybe fix a (possible) leak found by valgrind.

	svn path=/trunk/; revision=651

2008-03-30  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add some more convenience targets for making releases 2.16.1:

	* Makefile.am: add some more convenience targets for making releases
	2.16.1:

	svn path=/trunk/; revision=650

2008-03-29  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Fix g++ 4.3 warning

	svn path=/trunk/; revision=648

2008-03-29  Jonathon Jongsma  <jjongsma@src.gnome.org>

	update for 2.16.1 release

	svn path=/trunk/; revision=647

2008-03-29  Murray Cumming  <murrayc@murrayc.com>

	query_default_handler(), set_display_name(), query_info(),

2008-03-29  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg:
	* gio/src/file.ccg: query_default_handler(), set_display_name(), 
	query_info(), query_filesystem_info(): Do not take an extre reference, 
	because the C functions all provide new objects with an initial 
	reference. I checked.

	svn path=/trunk/; revision=646

2008-03-28  Murray Cumming  <murrayc@murrayc.com>

	create(), replace(): Do not take an extra reference, because the C

2008-03-28  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg: create(), replace(): Do not take an extra reference, 
	because the C function has given us a new instance with an initial 
	reference. The leak stopped the stream from really replacing the file, 
	because that only happens when it is closed.

	svn path=/trunk/; revision=645

2008-03-28  Murray Cumming  <murrayc@murrayc.com>

	Documentation: Remove/fix mentions of 0 when we mean something else.

2008-03-28  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg:
	* gio/src/outputstream.hg: Documentation: Remove/fix mentions of 0 when 
	we mean something else.

	svn path=/trunk/; revision=644

2008-03-25  Jonathon Jongsma  <jjongsma@src.gnome.org>

	don't wrap these unix-specific types when building on MS Windows (bug

	* gio/src/desktopappinfo.hg:
	* gio/src/unixinputstream.hg:
	* gio/src/unixmount.hg:
	* gio/src/unixoutputstream.hg: don't wrap these unix-specific types when
	building on MS Windows (bug #524126)

	svn path=/trunk/; revision=643

2008-03-18  Murray Cumming  <murrayc@murrayc.com>

	Include giomm/error.h Because Gio::Error is thrown by some of these

2008-03-18  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg: Include giomm/error.h Because Gio::Error is thrown 
	by some of these methods and it is annoying to have to include it 
	separately just to catch that.

	svn path=/trunk/; revision=642

2008-03-10  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=640

2008-03-10  Tim Mooney  <murrayc@murrayc.com>

	Include string.h to fix the build with SUN CC. Bug #498438.

2008-03-10  Tim Mooney  <murrayc@murrayc.com>

	* glib/glibmm/object.cc: Include string.h to fix the build with 
	SUN CC.
	Bug #498438.

	svn path=/trunk/; revision=639

2008-03-07  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add an include for checksum.h which was added in the 2.15.x series.

	* glib/glibmm.h: add an include for checksum.h which was added in the 2.15.x
	series.

	svn path=/trunk/; revision=638

2008-03-05  Murray Cumming  <murrayc@murrayc.com>

	Added Jonathon Jongsma as co-maintainer.

2008-03-05  Murray Cumming  <murrayc@murrayc.com>

	* MAINTAINERS: Added Jonathon Jongsma as co-maintainer.

	svn path=/trunk/; revision=637

2008-03-05  Murray Cumming  <murrayc@murayc.com>

	Use __CONVERT_CONST_REFPTR_TO_P_SUN() instead of __CONVERT_REFPTR_TO_P()

2008-03-05  Murray Cumming  <murrayc@murayc.com>

	* tools/m4/convert_gio.m4: Use __CONVERT_CONST_REFPTR_TO_P_SUN() instead 
	of __CONVERT_REFPTR_TO_P() to maybe fix the build with Sun CC.
	(Simon Zheng)

	svn path=/trunk/; revision=636

2008-03-04  Jonathon Jongsma  <jjongsma@src.gnome.org>

	updated the 'release' target to give a bit more helpful error messages

	* Makefile.am: updated the 'release' target to give a bit more helpful error
	messages

	svn path=/trunk/; revision=635

2008-03-04  Murray Cumming  <murrayc@src.gnome.org>

	Correct version number in ChangeLog

	svn path=/trunk/; revision=633

2008-03-04  Murray Cumming  <murrayc@murrayc.com>

	Regenerated with docextract_to_xml.py. Overrode g_file_query_exists() to

2008-03-04  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_docs.xml: Regenerated with docextract_to_xml.py.
	* gio/src/gio_docs_override.xml: Overrode g_file_query_exists() to 
	mention an exception instead of an error. G_IO_ERROR_* now does not 
	appear in any of our documentation.

	svn path=/trunk/; revision=632

2008-03-04  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=631

2008-03-03  Murray Cumming  <murrayc@murrayc.com>

	Put these in a Streams doxygen group. We should think of some more groups,

2008-03-03  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/bufferedinputstream.hg:
	* gio/src/bufferedoutputstream.hg:
	* gio/src/datainputstream.hg:
	* gio/src/dataoutputstream.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/filterinputstream.hg:
	* gio/src/filteroutputstream.hg:
	* gio/src/inputstream.hg:
	* gio/src/memoryinputstream.hg:
	* gio/src/mount.hg:
	* gio/src/outputstream.hg:
	* gio/src/seekable.hg:
	* gio/src/unixinputstream.hg:
	* gio/src/unixoutputstream.hg: Put these in a Streams doxygen group. 
	We should think of some more groups, maybe by looking at the C 
	documentation.

	svn path=/trunk/; revision=630

2008-03-03  Murray Cumming  <murrayc@murrayc.com>

	load_contents(), load_contents_finish(), load_partial_contents_finish():

2008-03-03  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: load_contents(), load_contents_finish(), 
	load_partial_contents_finish(): Use char*& instead of char** for contents, 
	though that is not that great either. Use std::string& instead of char** 
	for etag_out. Added method overloads without cancellable.
	We might want other method overloads in future. 

	svn path=/trunk/; revision=629

2008-02-29  Jonathon Jongsma  <jjongsma@src.gnome.org>

	added 'release' target which will run distcheck, tag the repository with

	* Makefile.am: added 'release' target which will run distcheck, tag the
	repository with the current version and upload the tarball to
	master.gnome.org

	svn path=/trunk/; revision=628

2008-02-27  Murray Cumming  <murrayc@murrayc.com>

	Correct hand-coded documentation, to talk about throwing exceptions rather

2008-02-27  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/asyncresult.hg:
	* gio/src/file.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/gio_docs_override.xml:
	* gio/src/inputstream.hg:
	* gio/src/outputstream.hg: Correct hand-coded documentation, 
	to talk about throwing exceptions rather than setting or returning 
	errors.
	* gio/src/mount.hg: Add class documentation based on the C documentation.

	svn path=/trunk/; revision=627

2008-02-27  Murray Cumming  <murrayc@murrayc.com>

	Regenerated with docextract_to_xml.py. Override some documentation that

2008-02-27  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_docs.xml: Regenerated with docextract_to_xml.py.
	* gio/src/gio_docs_override.xml: Override some documentation that 
	mentions the GCancellable being optional, or that talks about setting 
	errors instead of throwing them.

	svn path=/trunk/; revision=626

2008-02-26  Murray Cumming  <murrayc@murrayc.com>

	2.15.7:

2008-02-26  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_methods.defs: Regenerated.
	* gio/src/file.ccg:
	* gio/src/file.hg: Added query_filesystem_info_async() and 
	query_filesystem_info_finish() because these were added to the C API.
	* gio/src/themedicon.hg: Added append_name() because this was added to 
	the C API.

	svn path=/trunk/; revision=625

2008-02-26  Jonathon Jongsma  <jjongsma@src.gnome.org>

	'upgraded' the doxygen config file since doxygen was complaining about

	* docs/reference/Doxyfile.in: 'upgraded' the doxygen config file since
	doxygen was complaining about obsolete options
	* gio/giomm/contenttype.h:
	* gio/src/bufferedinputstream.hg:
	* gio/src/file.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/outputstream.hg:
	* glib/src/checksum.hg:
	* glib/src/keyfile.hg: fixed a bunch of minor doxygen warnings

	svn path=/trunk/; revision=624

2008-02-26  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add path separators between the reference prefix and the link filenames

	* docs/reference/doxygen_to_devhelp.xsl: add path separators between the
	reference prefix and the link filenames
	* docs/reference/Makefile.am: remove trailing slash from the reference
	prefix (fixes bug #518673)

	svn path=/trunk/; revision=623

2008-02-25  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	Initial work for another API change: g_file_contains_file() has been

2008-02-25  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	* gio/src/file.hg:
	* gio/src/gio_docs.xml:
	* gio/src/gio_methods.defs:
	* gio/src/gio_vfuncs.defs:

	Initial work for another API change:
	g_file_contains_file() has been renamed to
	g_file_has_prefix() (with the parameter order swapped!)

	svn path=/trunk/; revision=622

2008-02-25  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	g_uri_get_scheme has been renamed to g_uri_parse_scheme in GLib trunk.

2008-02-25  Wouter Bolsterlee  <wbolster@svn.gnome.org>

	* glib/src/uriutils.ccg:
	* glib/src/uriutils.hg:

	g_uri_get_scheme has been renamed to g_uri_parse_scheme
	in GLib trunk. Updated accordingly.

	svn path=/trunk/; revision=621

2008-02-25  Murray Cumming  <murrayc@src.gnome.org>

	Corrected the ChangeLog

	svn path=/trunk/; revision=620

2008-02-24  Jonathon Jongsma  <jjongsma@src.gnome.org>

	dist xml/index.xml to satisfy build-deps for building the devhelp book

	* docs/reference/Makefile.am: dist xml/index.xml to satisfy build-deps for
	building the devhelp book from the tarball.  Fixes distcheck.

	svn path=/trunk/; revision=619

2008-02-24  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=618

2008-02-24  Marko Anastasov  <marko.anastasov@gmail.com>

	Updated the todo regarding read().

2008-02-24  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/inputstream.hg: Updated the todo regarding read().

	svn path=/trunk/; revision=617

2008-02-22  Murray Cumming  <murrayc@murrayc.com>

	Added dup(). Added signals for GMount and GVolume. This deals with the

2008-02-22  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/fileattributeinfolist.hg: Added dup().
	* gio/src/gio_others.defs: Added signals for GMount and GVolume.
	This deals with the gmmproc warnings.

	svn path=/trunk/; revision=616

2008-02-21  Murray Cumming  <murrayc@src.gnome.org>

	Added a TODO

	svn path=/trunk/; revision=615

2008-02-21  Murray Cumming  <murrayc@murrayc.com>

	Revert the change from José which removed use of _WRAP_CTOR() and

2008-02-21  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/desktopappinfo.hg: Revert the change from José which removed 
	use of _WRAP_CTOR() and _WRAP_CREATE(). We really do want to use these 
	so we instantiate derived GTypes.

	svn path=/trunk/; revision=614

2008-02-21  Marko Anastasov  <marko.anastasov@gmail.com>

	Made is_hidden() const.

2008-02-21  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/desktopappinfo.hg: Made is_hidden() const.

	svn path=/trunk/; revision=613

2008-02-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	Used _WRAP_METHOD instead of _WRAP_CREATE for create() to allow docs from

2008-02-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/desktopappinfo.hg: Used _WRAP_METHOD instead of _WRAP_CREATE
	for create() to allow docs from C API to be used

	svn path=/trunk/; revision=612

2008-02-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	Renamed new_from_file() to create_from_file()

2008-02-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/desktopappinfo.hg: Renamed new_from_file() to
	create_from_file()

	svn path=/trunk/; revision=611

2008-02-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	Added create(), create_from_file() is_hidden() and set_desktop_env() Added

2008-02-21  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/desktopappinfo.hg: Added create(), create_from_file()
	is_hidden() and set_desktop_env()
	* tools/m4/convert_gio.m4: Added DesktopAppInfo conversion

	svn path=/trunk/; revision=610

2008-02-20  Murray Cumming  <murrayc@murrayc.com>

	Regenerated with h2defs.py

2008-02-21  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_methods.defs: Regenerated with h2defs.py

	* gio/src/gio_signals.defs: Corrected the GMountOperation::ask-question 
	definition.
	* gio/src/mountoperation.hg: Wrapped the ask-question signal, though 
	I wonder if it really works.

	* gio/src/memoryinputstream.ccg:
	* gio/src/memoryinputstream.hg:
	Added add_data(const void* data, gssize len).

	* gio/src/gio_others.defs: Added g_themed_icon_get_names() 
	because h2defs.py cannot seem to parse it.
	* gio/src/Makefile.am: Mention gio_methods.defs.
	* gio/src/themedicon.hg: Attempted to wrap get_names(), but I get a 
	gmmproc error.

	svn path=/trunk/; revision=609

2008-02-20  Marko Anastasov  <marko.anastasov@gmail.com>

	Removed a todo regarding DesktopAppInfoLookup. We will not wrap it as it

2008-02-20  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/desktopappinfo.hg: Removed a todo regarding
	DesktopAppInfoLookup. We will not wrap it as it is an interface
	that is used by backends.

	svn path=/trunk/; revision=608

2008-02-20  Jonathon Jongsma  <jjongsma@src.gnome.org>

	updated some build dependencies that were causing issues after adding the

	* docs/reference/Makefile.am: updated some build dependencies that were
	causing issues after adding the xml/devhelp build rules.  Also removed some
	cruft that was supposedly setting the doxygen image path for gtk stock icons
	(presumably copied from the gtkmm build rules).  Should Fix Bug #517423

	svn path=/trunk/; revision=607

2008-02-20  Murray Cumming  <murrayc@murrayc.com>

	Comment out _WRAP_VFUNC() lines because we decided that they are not

2008-02-20  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.hg:
	* gio/src/bufferedinputstream.hg:
	* gio/src/drive.hg:
	* gio/src/file.hg:
	* gio/src/filemonitor.hg:
	* gio/src/icon.hg:
	* gio/src/seekable.hg:
	* gio/src/volume.hg:
	* gio/src/volumemonitor.hg: Comment out _WRAP_VFUNC() lines because 
	we decided that they are not useful (people will not create new 
	implementations with giomm) and are a potential source of errors.

	svn path=/trunk/; revision=606

2008-02-20  Murray Cumming  <murrayc@murrayc.com>

	equal(), get_relative_file(), contains_file(): Take const File parameters.

2008-02-20  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/convert_gio.m4:
	* gio/src/file.hg: equal(), get_relative_file(), contains_file(): Take 
	const File parameters.

	svn path=/trunk/; revision=605

2008-02-16  Jonathon Jongsma  <jjongsma@src.gnome.org>

	I should have tested this more thoroughly -- we apparently need to use

	* docs/reference/Makefile.am: I should have tested this more thoroughly --
	we apparently need to use relative paths in the reference_prefix variable.
	Also add the devhelp file to the all-local target so it gets built by
	default on a simple 'make' and not just on 'make install'

	svn path=/trunk/; revision=604

2008-02-16  Jonathon Jongsma  <jjongsma@src.gnome.org>

	install the stylesheet in the gmmproc dir instead of the documentation

	* docs/reference/Makefile.am: install the stylesheet in the gmmproc dir
	instead of the documentation directory.  This allows other libraries to get
	a path to the stylesheet by querying the just-added gmmprocdir variable.
	Also, it doesn't really belong in the documentation directory since it's not
	technically documentation.

	svn path=/trunk/; revision=603

2008-02-16  Jonathon Jongsma  <jjongsma@src.gnome.org>

	make this more general instead of hard-coding the name and title and

	* docs/reference/doxygen_to_devhelp.xsl: make this more general instead of
	hard-coding the name and title and reference path into the stylesheet --
	instead pass them as parameters on the commandline
	* docs/reference/Makefile.am: use new GMMPROC_DIR variable.  Also install
	the doxygen_to_devhelp.xsl stylesheet so that other libraries can use the
	installed version instead of having everybody copy the file into their own
	library if they want to generate a devhelp book

	svn path=/trunk/; revision=602

2008-02-16  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add a GMMPROC_DIR variable so the individual Makefile.am files don't need

	* configure.in: add a GMMPROC_DIR variable so the individual
	Makefile.am files don't need to duplicate the information about where
	gmmproc is to be installed
	* glib/glibmm-2.4.pc.in: add new gmmprocdir variable so that interested
	libraries can query it with `pkg-config --variable gmmprocdir glibmm-2.4`
	* tools/Makefile.am:
	* tools/m4/Makefile.am:
	* tools/pm/Makefile.am: use the new GMMPROC_DIR variable

	svn path=/trunk/; revision=601

2008-02-14  Marko Anastasov  <marko.anastasov@gmail.com>

	Removed get/set_newline_type(), which doesn't exist in the C API.

2008-02-14  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/dataoutputstream.hg: Removed get/set_newline_type(),
	which doesn't exist in the C API.

	svn path=/trunk/; revision=600

2008-02-14  Jonathon Jongsma  <jjongsma@src.gnome.org>

	generate and install a devhelp book for glibmm like we do for gtkmm. It

	* docs/reference/Doxyfile.in:
	* docs/reference/Makefile.am:
	* docs/reference/doxygen_to_devhelp.xsl: generate and install a devhelp book
	for glibmm like we do for gtkmm.  It would be nice to make the xsl
	stylesheet general and shared between gtkmm and glibmm (and eventually other
	libraries as well), but for now I just duplicated it here

	svn path=/trunk/; revision=599

2008-02-12  Marko Anastasov  <marko.anastasov@gmail.com>

	Regenerated with h2defs.py.

2008-02-12  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/gio_methods.defs: Regenerated with h2defs.py.

	* gio/src/unixinputstream.hg:
	* gio/src/unixoutputstream.hg: Made wrapped constructors protected.

	* gio/src/bufferedinputstream.hg:
	* gio/src/datainputstream.hg:
	* gio/src/dataoutputstream.hg: Ditto for Data*Streams,
	and marked some hand-wrapped functions to ignore.

	* gio/src/mountoperation.hg: Wrote a note about ask_question signal,
	still to be wrapped.

	* gio/src/volume.hg: Added should_automount().

	* gio/giomm: Updated svn:ignore properties.

	svn path=/trunk/; revision=598

2008-02-12  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=597

2008-02-12  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=596

2008-02-12  Jonathon Jongsma  <jjongsma@src.gnome.org>

	update to match new gio API which adds a GMountMountFlags argument to all

	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/gio_enums.defs:
	* gio/src/gio_vfuncs.defs:
	* gio/src/mount.ccg:
	* gio/src/mount.hg:
	* gio/src/volume.ccg:
	* gio/src/volume.hg:
	* tools/m4/convert_gio.m4: update to match new gio API which adds a
	GMountMountFlags argument to all mount operations

	svn path=/trunk/; revision=595

2008-02-11  Jonathon Jongsma  <jjongsma@src.gnome.org>

	bump glib requirement to 2.15.5 (bug #515727)

	* configure.in: bump glib requirement to 2.15.5 (bug #515727)

	svn path=/trunk/; revision=594

2008-02-09  Murray Cumming  <murrayc@murrayc.com>

	Added hand-written vfunc .defs for GVolume and GVolumeMonitor.

2008-02-09  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_vfuncs.defs: Added hand-written vfunc .defs for 
	GVolume and GVolumeMonitor.
	* gio/src/volume.hg:
	* gio/src/volumemonitor.hg: Added vfuncs, though not using all C++ types 
	yet. I am not really sure that these will ever be useful (if anyone will 
	ever want to implement them in C++).

	svn path=/trunk/; revision=593

2008-02-09  Murray Cumming  <murrayc@murrayc.com>

	removed SimpleAsyncResult because I do not believe it is really public

	2008-02-09  Murray Cumming, <murrayc@murrayc.com>

	* gio/giomm.h:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/simpleasyncresult.ccg:
	* gio/src/simpleasyncresult.hg: removed SimpleAsyncResult because I 
	do not believe it is really public API. If we are wrong then we 
	can resurrect it from svn later.

	svn path=/trunk/; revision=592

2008-02-09  Takao Fujiwara  <Takao.Fujiwara@Sun.COM>

	Actually install this header, and make the header guards unique. Bug

2008-02-09  Takao Fujiwara  <Takao.Fujiwara@Sun.COM>

	* glib/glibmm/Makefile.am:
	* glib/glibmm/i18n-lib.h: Actually install this header, 
	and make the header guards unique.
	Bug #515133

	svn path=/trunk/; revision=591

2008-02-08  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=590

2008-02-07  Murray Cumming  <murrayc@murrayc.com>

	Moved the Priorities enum into Though all the giomm stuff seems to already

2008-02-07  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/Makefile.am:
	* glib/glibmm/main.h: Moved the Priorities enum into
	* glib/glibmm/priorities.h:
	Though all the giomm stuff seems to already include main.h anyway. 
	It probably shouldn't, and then we can include priorities.h only.

	* gio/src/bufferedinputstream.hg:
	* gio/src/file.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/gio_methods.defs:
	* gio/src/inputstream.hg:
	* gio/src/outputstream.hg: Use Glib::PRIORITY_DEFAULT instead of 
	G_PRIORITY_DEFAULT.

	* glib/src/iochannel.ccg: Add some ifdefs to avoid unused parameter 
	warnings when exceptions are disabled, because our current trick for 
	that is now causing another warning instead.

	svn path=/trunk/; revision=589

2008-02-07  Jonathon Jongsma  <jjongsma@src.gnome.org>

	change the read_line() and read_until() APIs so that they are actually

	* gio/src/datainputstream.ccg:
	* gio/src/datainputstream.hg: change the read_line() and read_until() APIs
	so that they are actually useable.  These functions now return a boolean
	value to indicate that the end of the stream was reached and return the
	string data via reference argument.  See bug #514097 for more information

	svn path=/trunk/; revision=587

2008-02-06  Murray Cumming  <murrayc@murrayc.com>

	Regenerated with h2defs.py

	2008-02-06  Murray Cumming <murrayc@murrayc.com>

	* gio/src/gio_methods.defs: Regenerated with h2defs.py

	* configure.in: Depend on gio-unix-2.0 when not on win32.
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/unixinputstream.ccg:
	* gio/src/unixinputstream.hg:
	* gio/src/unixoutputstream.ccg: Mentioned this as unix-specific files 
	so they are built.

	* gio/src/bufferedoutputstream.hg: Fixed a parameter type to fix the 
	build, after a change in gio.

	svn path=/trunk/; revision=586

2008-02-05  Murray Cumming  <murrayc@murrayc.com>

	Added an overload of query_default_handler() without the cancellable.

2008-02-05  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added an overload of query_default_handler() 
	without the cancellable.

	svn path=/trunk/; revision=585

2008-02-05  Murray Cumming  <murrayc@murrayc.com>

	Remove these because they are not API - they are declarations of entry

2008-02-05  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/vfs.ccg:
	* gio/src/vfs.hg: Remove these because they are not API - they 
	are declarations of entry points for dynamically-loadable modules.

	svn path=/trunk/; revision=584

2008-02-04  Marko Anastasov  <marko.anastasov@gmail.com>

	Added copy_async(), with overloads without slot_progress (which is

2008-02-04  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added copy_async(), with overloads without
	slot_progress (which is optional and would run in the main loop),
	with documentation. Wrapped copy_finish(), query_default_handler().

	svn path=/trunk/; revision=583

2008-02-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	Added DesktopAppInfo but not to Makefile_list_of_hg.am_fragment yet (need

2008-02-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/desktopappinfo.ccg:
	* gio/src/desktopappinfo.hg: Added DesktopAppInfo but not to
	Makefile_list_of_hg.am_fragment yet (need to use gio-unix-2.0.pc to
	compile correctly)

	svn path=/trunk/; revision=582

2008-02-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	Changed size param of create_sized() to type gsize (in agreement with

2008-02-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/bufferedoutputstream.ccg: Changed size param of
	create_sized() to type gsize (in agreement with declaration) to fix
	compilation

	svn path=/trunk/; revision=581

2008-02-04  Murray Cumming  <murrayc@murrayc.com>

	Allow _CLASS_INTERFACE() to take two extra optional paremeters to specify

2008-02-04  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_interface.m4: Allow _CLASS_INTERFACE() to take two 
	extra optional paremeters to specify the base class, so that appropriate 
	code is generated when we derive from another Interface - which seems 
	appropriate when the GInterface has a prerequisite.
	* gio/src/loadableicon.ccg:
	* gio/src/loadableicon.hg: Derive from Icon, because it is a prerequisite 
	of this interface. Use the extra _CLASS_INTERFACE() parameters.
	* gio/src/fileicon.hg: Do not derive from Icon because that happens 
	through LoadableIcon now. But do use _IMPLEMENTS_INTERFACE(Icon) here, 
	because only a Glib::Object can actually implement an interface.

	svn path=/trunk/; revision=580

2008-02-04  Jonathon Jongsma  <jjongsma@src.gnome.org>

	remove an obsolete TODO add LoadableIcon vfunc definitions

	* gio/src/file.hg: remove an obsolete TODO
	* gio/src/gio_vfuncs.defs: add LoadableIcon vfunc definitions
	* gio/src/loadableicon.ccg:
	* gio/src/loadableicon.hg: wrap some methods of LoadableIcon.  Some vfuncs
	need to be wrapped yet

	svn path=/trunk/; revision=579

2008-02-04  Jonathon Jongsma  <jjongsma@src.gnome.org>

	switch back create_sized() size parameter to gsize since glib switched

	* gio/src/bufferedoutputstream.hg: switch back create_sized() size parameter
	to gsize since glib switched their declaration due to bug #514013.

	svn path=/trunk/; revision=578

2008-02-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	Added these, but not to Makefile_list_of_hg.am_fragment to avoid compile

2008-02-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/unixinputstream.ccg:
	* gio/src/unixinputstream.hg:
	* gio/src/unixmount.ccg:
	* gio/src/unixmount.hg:
	* gio/src/unixoutputstream.ccg:
	* gio/src/unixoutputstream.hg: Added these, but not to
	Makefile_list_of_hg.am_fragment to avoid compile errors (need
	gio-unix-2.0.pc to compile correctly)
	* gio/src/vfs.hg: Moved forward decs to top (was between class doc and
	declaration)

	svn path=/trunk/; revision=577

2008-02-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	Added Vfs

2008-02-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/vfs.ccg:
	* gio/src/vfs.hg:
	* tools/m4/convert_gio.m4: Added Vfs

	svn path=/trunk/; revision=576

2008-02-04  Murray Cumming  <murrayc@murrayc.com>

	Added types. Regenerated.

2008-02-04  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_defs_gio.cc: Added types.
	* gio/src/gio_signals.defs: Regenerated.
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/filenamecompleter.hg:
	* gio/src/themedicon.hg: Added FilenameCompleter and ThemedIcon.

	svn path=/trunk/; revision=575

2008-02-04  José Alburquerque  <jaalburqu@svn.gnome.org>

	changed size param of create_sized() to type guint (in agreement with

2008-02-03  José Alburquerque  <jaalburqu@svn.gnome.org>

	* gio/src/bufferedoutputstream.ccg: changed size param of
	create_sized() to type guint (in agreement with declaration)
	* gio/src/file.ccg:
	* gio/src/file.hg: added non-cancellable set_attribute_string(),
	set_attribute_byte_string(), set_attribute_{uint32, int32, uint64,
	int64}

	svn path=/trunk/; revision=574

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	Added types. Regenerated.

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_defs_gio.cc: Added types.
	* gio/src/gio_signals.defs: Regenerated.

	* tools/m4/convert_gio.m4:
	* gio/src/drive.hg:
	* gio/src/filterinputstream.hg:
	* gio/src/filteroutputstream.hg:
	* gio/src/mount.hg:
	* gio/src/mountoperation.hg:
	* gio/src/volume.hg:
	* gio/src/volumemonitor.hg: Added signals and properties.

	* gio/src/file.ccg:
	* gio/src/file.hg: Added query_filesystem_info() without a cancellable.

	svn path=/trunk/; revision=573

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	Add class documentation, now that there is some in gio. Add class

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/filemonitor.hg: Add class documentation, now that there is 
	some in gio.
	* gio/src/volumemonitor.hg: Add class documentation.
	Remove _DO_NOT_DERIVE_GTYPE because gio no longer abuses the type 
	system - see bug #511814.

	svn path=/trunk/; revision=572

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	Add class documentation, now that there is some in gio. Add class

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/filemonitor.hg: Add class documentation, now that there is 
	some in gio.
	* gio/src/volumemonitor.hg: Add class documentation.
	Remove _DO_NOT_DERIVE_GTYPE because gio no longer abuses the type 
	system - see bug #511814.

	svn path=/trunk/; revision=571

2008-02-03  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add MemoryInputStream class

	* gio/giomm.h:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/memoryinputstream.ccg:
	* gio/src/memoryinputstream.hg: add MemoryInputStream class

	svn path=/trunk/; revision=570

2008-02-03  Jonathon Jongsma  <jjongsma@src.gnome.org>

	fix copy/paste error

	* gio/src/dataoutputstream.ccg: fix copy/paste error

	svn path=/trunk/; revision=569

2008-02-03  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add DataOutputStream class

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/datainputstream.hg:
	* gio/src/dataoutputstream.hg: add DataOutputStream class
	* gio/src/dataoutputstream.ccg:
	* gio/src/enums.ccg:
	* gio/src/enums.hg: moved the DataStream enums to a common enums header
	since they're needed by both the input and output data streams.
	* gio/giomm.h: add new headers

	svn path=/trunk/; revision=568

2008-02-03  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add BufferedOutputStream class

	* gio/src/bufferedoutputstream.ccg:
	* gio/src/bufferedoutputstream.hg: add BufferedOutputStream class

	svn path=/trunk/; revision=567

2008-02-03  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add FilterOutputStream class

	* gio/giomm.h:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/filteroutputstream.ccg:
	* gio/src/filteroutputstream.hg:
	* tools/m4/convert_gio.m4: add FilterOutputStream class

	svn path=/trunk/; revision=566

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	find_enclosing_mout(), append_to(): Reordered parameters and added

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: find_enclosing_mout(), append_to(): Reordered 
	parameters and added overload without cancellable. Removed superfluous 
	monitor_file() overload.

	svn path=/trunk/; revision=565

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	Move a signal-specific conversion here, because these conversions are

2008-02-03  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/convert_gio.m4:
	* gio/src/bufferedinputstream.hg: Move a signal-specific conversion 
	here, because these conversions are unusual and shouldn't be used by 
	mistake elsewhere, and when they are next to the signal then it is 
	more obvious why they take a reference (also fixed).

	svn path=/trunk/; revision=564

2008-02-02  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add new header files to the main include add FIXME note about not being

	* gio/giomm.h: add new header files to the main include
	* gio/src/datainputstream.hg: add FIXME note about not being able to tell
	error conditions from empty strings on read_line() / read_until()

	svn path=/trunk/; revision=563

2008-02-02  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add slot_async.h private header to EXTRA_DIST so that it gets distributed.

	* gio/giomm/Makefile.am: add slot_async.h private header to EXTRA_DIST so
	that it gets distributed.  I didn't add it to the
	sublib_files_extra_general_h variable, since then it would get installed

	svn path=/trunk/; revision=562

2008-02-02  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add DataInputStream class

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/datainputstream.ccg:
	* gio/src/datainputstream.hg:
	* tools/m4/convert_gio.m4: add DataInputStream class

	svn path=/trunk/; revision=561

2008-02-02  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add BufferedInputStream class

	* gio/src/gio_vfuncs.defs:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/bufferedinputstream.ccg:
	* gio/src/bufferedinputstream.hg: add BufferedInputStream class
	* gio/giomm/slot_async.cc:
	* gio/giomm/slot_async.h: split out the SlotProxy_async_callback so it
	doesn't have to be implemented in every file
	* gio/src/drive.ccg:
	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/fileenumerator.ccg:
	* gio/src/fileinputstream.ccg:
	* gio/src/fileoutputstream.ccg:
	* gio/src/inputstream.ccg:
	* gio/src/mount.ccg:
	* gio/src/outputstream.ccg:
	* gio/src/volume.ccg: use the common SlotProxy_async_callback function in
	all of these files
	* tools/m4/convert_gio.m4: add conversion for Cancellable
	* gio/giomm/Makefile.am: indenting changes

	svn path=/trunk/; revision=560

2008-02-02  Marko Anastasov  <marko.anastasov@gmail.com>

	Removed VolumeMonitorEvent enum def, which does not exist any more in the

2008-02-02  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/volumemonitor.hg: Removed VolumeMonitorEvent enum def,
	which does not exist any more in the C API.
	* gio/src/volume.hg: Added get_identifier(), enumerate_identifiers().

	svn path=/trunk/; revision=559

2008-02-02  Marko Anastasov  <marko@marko.anastasov.name>

	Added get_mount(). Regenerated with enums.pl. Regenerated with h2defs.py.

2008-02-02  Marko Anastasov  <marko@marko.anastasov.name>

	* gio/src/volume.hg: Added get_mount().
	* gio/src/gio_enums.defs: Regenerated with enums.pl.
	* gio/src/gio_methods.defs: Regenerated with h2defs.py.

	svn path=/trunk/; revision=558

2008-02-02  Kjartan Maraas  <kmaraas@gnome.org>

	Fix compile with GCC 4.3.

2008-02-02  Kjartan Maraas  <kmaraas@gnome.org>

	* tests/giomm_simple/main.cc: Fix compile with GCC 4.3.

	svn path=/trunk/; revision=557

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	Use the local .pm files for gmmproc instead of installed ones. This was a

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	* build_shared/Makefile_gensrc.am_fragment: Use the local .pm files 
	for gmmproc instead of installed ones. This was a regression that I 
	introduced when I added gio to the build.
	* tools/pm/DocsParser.pm: append_parameter_docs(): Ignore error 
	parameters because they are almost always wrapped as exceptions.

	svn path=/trunk/; revision=556

2008-02-02  Jonathon Jongsma  <jjongsma@src.gnome.org>

	Add Gio::AppInfo vfuncs

	* gio/src/Makefile.am:
	* gio/src/appinfo.hg:
	* gio/src/gio_vfuncs.defs:
	* tools/m4/convert_gio.m4:
	* tools/m4/convert_glib.m4: Add Gio::AppInfo vfuncs

	svn path=/trunk/; revision=555

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	Added overloads of create_file(), remove(), trash(), make_directory(),

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added overloads of create_file(), remove(), trash(), 
	make_directory(), make_symbolic_link(), query_settable_attributes(), 
	and query_writable_namespaces() without cancellable parameters.
	The set_attribute_*() methods still need this to be done. 

	svn path=/trunk/; revision=554

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	Added the signal.

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/cancellable.hg: Added the signal.
	* gio/src/file.ccg:
	* gio/src/file.hg: Added copy_attributes(), added mount_enclosing_volume() 
	mount_enclosing_volume_finish(), find_enclosing_mount(), and 
	find_enclosing_mount_finish(). 
	Added a mount_mountable() overload with no parameters.
	set_attributes_from_info(): Reordered parameters so we can have default 
	values.

	svn path=/trunk/; revision=553

2008-02-01  Murray Cumming  <murrayc@murrayc.com>

	Use convert_return_gchar_ptr_to_ustring() because it releases the gchar*

2008-02-02  Murray Cumming  <murrayc@murrayc.com>

	* gio/giomm/contenttype.cc:
	* gio/giomm/contenttype.h: Use convert_return_gchar_ptr_to_ustring() 
	because it releases the gchar* and checks for NULL.
	Removed the ontent_type_guess() that takes a basic_string<guchar> 
	because I doubt anybody would use that. Added one that takes a 
	gchar* and size, and one that takes a std::string (for when the data is 
	a string).

	svn path=/trunk/; revision=552

2008-02-01  Jonathon Jongsma  <jjongsma@src.gnome.org>

	put content_type functions in the Gio namespace which was accidentally

	* gio/giomm/contenttype.cc: put content_type functions in the Gio namespace
	which was accidentally omitted.

	svn path=/trunk/; revision=550

2008-01-31  Jonathon Jongsma  <jjongsma@src.gnome.org>

	forgot to add new contenttype.h header forgot to install contenttype.h

	* gio/giomm.h: forgot to add new contenttype.h header
	* gio/giomm/Makefile.am: forgot to install contenttype.h header

	svn path=/trunk/; revision=549

2008-01-31  Jonathon Jongsma  <jjongsma@src.gnome.org>

	wrap content_type_* functions

	* gio/giomm/Makefile.am:
	* gio/giomm/contenttype.cc:
	* gio/giomm/contenttype.h: wrap content_type_* functions

	svn path=/trunk/; revision=548

2008-01-29  Murray Cumming  <murrayc@murrayc.com>

	get_child_for_display_name(): Change the display_name parameter to a

2008-01-29  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg: get_child_for_display_name(): 
	Change the display_name parameter to a ustring because 
	the C documentation says it should be UTF-8.
	* gio/src/fileinfo.hg: Add get_attribute_as_string(), which
	returns a UTF-8 string.
	(Note that no other gio documentation mentions UTF-8.)
	Thanks to Iain Nicol.

	svn path=/trunk/; revision=547

2008-01-28  Murray Cumming  <murrayc@src.gnome.org>

	Increase version

	svn path=/trunk/; revision=546

2008-01-27  Murray Cumming  <murrayc@murrayc.com>

	Split into

2008-01-27  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/fileattribute.ccg:
	* gio/src/fileattribute.hg: Split into 
	* gio/src/fileattributeinfo.ccg:
	* gio/src/fileattributeinfo.hg: and 
	* gio/src/fileattributeinfolist.ccg:
	* gio/src/fileattributeinfolist.hg

	* gio/giomm.h:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/file.hg:
	* gio/src/fileinfo.hg:
	* gio/src/outputstream.hg:
	* gio/src/seekable.hg:
	* glib/src/optionentry.hg: Adapted.

	* tools/pm/DocsParser.pm: substitute_identifiers(): 
	Tried (unsuccessfully) to remove G:: prefixes in generated documentation.

	svn path=/trunk/; revision=545

2008-01-27  Murray Cumming  <murrayc@murrayc.com>

	Do not include gio.h from our public headers, to avoid polluting the

2008-01-27  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.hg:
	* gio/src/asyncresult.hg:
	* gio/src/cancellable.hg:
	* gio/src/drive.hg:
	* gio/src/error.hg:
	* gio/src/file.hg:
	* gio/src/fileattribute.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileicon.hg:
	* gio/src/fileinfo.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/filterinputstream.hg:
	* gio/src/icon.hg:
	* gio/src/inputstream.hg:
	* gio/src/loadableicon.hg:
	* gio/src/mount.hg:
	* gio/src/mountoperation.hg:
	* gio/src/outputstream.hg:
	* gio/src/seekable.hg:
	* gio/src/simpleasyncresult.hg:
	* gio/src/volume.hg: Do not include gio.h from our public headers, to 
	avoid polluting the namespace.

	svn path=/trunk/; revision=544

2008-01-27  Murray Cumming  <murrayc@src.gnome.org>

	Removed outdated CHANGES file

	svn path=/trunk/; revision=543

2008-01-27  Murray Cumming  <murrayc@murrayc.com>

	Make equal() non virtual - equal_vfunc() is instead.

2008-01-27  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.ccg:
	* gio/src/appinfo.hg: Make equal() non virtual - equal_vfunc() is instead.
	* gio/src/file.ccg:
	* gio/src/file.hg: Make equal() non virtual - equal_vfunc() is instead.
	replace_contents(), replace_contents_async(), replace_contents_finish():
	Reordered parameters to allow default values, and added method overloads.

	svn path=/trunk/; revision=542

2008-01-25  Murray Cumming  <murrayc@murrayc.com>

	Added the _CLASS_* macro so this type is really wrapped.

2008-01-25  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/convert_gio.m4:
	* gio/src/filterinputstream.hg: Added the _CLASS_* macro so this type  
	is really wrapped.

	svn path=/trunk/; revision=541

2008-01-25  Murray Cumming  <murrayc@murrayc.com>

	Added _DO_NOT_DERIVE_GTYPE for use in .hg files when we do not want to

2008-01-25  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_shared.m4: Added _DO_NOT_DERIVE_GTYPE for use in .hg 
	files when we do not want to derive a new GType, meaning of course that 
	we cannot have default signal handlers or vfuncs.
	* gio/src/volumemonitor.hg: Use _DO_NOT_DERIVE_GTYPE, because 
	gio tries to call every type that derives from G_TYPE_VOLUME_MONITOR, 
	which seems unwise to me - bug #511814.
	This makes gtkmm-documentation/examples/book/volumes not crash.

	svn path=/trunk/; revision=540

2008-01-25  Jonathon Jongsma  <jjongsma@src.gnome.org>

	add missing headers to the main include header

	* gio/giomm.h: add missing headers to the main include header

	svn path=/trunk/; revision=539

2008-01-23  Murray Cumming  <murrayc@murrayc.com>

	Renamed Gio::IOError to Gio::Error.

2008-01-23  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/error.hg: Renamed Gio::IOError to 
	Gio::Error.
	* gio/src/fileenumerator.ccg:
	* gio/src/fileenumerator.hg: Added method overloads of close() and 
	next_file() without the cancellable parameter.

	svn path=/trunk/; revision=538

2008-01-23  Murray Cumming  <murrayc@murrayc.com>

	Wrapped GIOErrorEnum as Gio::Error exception. (This is registered in

2008-01-23  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/error.ccg:
	* gio/src/error.hg: Wrapped GIOErrorEnum as Gio::Error exception.
	(This is registered in wrap_init()), so that the correct exception 
	is thrown.
	* gio/giomm.h: Include error.h

	svn path=/trunk/; revision=537

2008-01-23  Murray Cumming  <murrayc@murrayc.com>

	Added a read() method overload with no cancellable parameter. Try loading

2008-01-23  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added a read() method overload with no 
	cancellable parameter.
	* tests/giomm_simple/main.cc: Try loading the contents of a file.
	Seems to work, though there is an unknown GError domain when the file 
	does not exist.

	svn path=/trunk/; revision=536

2008-01-21  Murray Cumming  <murrayc@src.gnome.org>

	Increased version.

	svn path=/trunk/; revision=535

2008-01-21  Murray Cumming  <murrayc@src.gnome.org>

	Removed some unnecessary TODOs

	svn path=/trunk/; revision=534

2008-01-21  Murray Cumming  <murrayc@murrayc.com>

	Regenerated.

2008-01-21  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/gio_methods.defs: Regenerated.
	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/fileinputstream.ccg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.ccg:
	* gio/src/fileoutputstream.hg: More overloads, parameter reordering, 
	and documentation.

	svn path=/trunk/; revision=533

2008-01-21  Murray Cumming  <murrayc@murrayc.com>

	Added method overloads and documentation.

2008-01-21  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/inputstream.ccg:
	* gio/src/inputstream.hg: Added method overloads and documentation.

	svn path=/trunk/; revision=532

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	Ignore functions that are just duplicates of the ones in Seekable, and

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/fileinputstream.ccg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.ccg:
	* gio/src/fileoutputstream.hg: Ignore functions that are just 
	duplicates of the ones in Seekable, and mention Seekable more in 
	the documentation.
	* gio/src/seekable.hg: Expand the class documentation.
	* gio/src/outputstream.ccg:
	* gio/src/outputstream.hg: Added method overloads and documentation.

	svn path=/trunk/; revision=531

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	Added connect_property_changed_with_return() because

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/objectbase.cc:
	* glib/glibmm/objectbase.h: Added connect_property_changed_with_return() 
	because onnect_property_changed() doesn not return a sigc::connection.
	Bug #433984 (Philip Langdale, Kalle Vahlman).

	svn path=/trunk/; revision=530

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	Added class documentation. Corrected constructor documentation and added

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/checksum.ccg:
	* glib/src/checksum.hg: Added class documentation. Corrected constructor 
	documentation and added operator bool() to check for a failure in the 
	constructor.

	svn path=/trunk/; revision=529

2008-01-20  Marko Anastasov  <marko@marko.anastasov.name>

	Handle possible parenthesis when matching enum values declared as shifted

2008-01-20  Marko Anastasov  <marko@marko.anastasov.name>

	* tools/enum.pl: Handle possible parenthesis when matching enum
	values declared as shifted ones. Bug #498621.

	svn path=/trunk/; revision=528

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	Ignore g_input_stream_clear_pending() as well as the other implementation

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/inputstream.hg: Ignore g_input_stream_clear_pending() as well as 
	the other implementation functions.
	* gio/src/outputstream.hg: Ignore the equivalent functions here, 
	assuming that they are also only for implementations.

	svn path=/trunk/; revision=527

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	Ignore g_input_stream_clear_pending() as well as the other implementation

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/inputstream.hg: Ignore g_input_stream_clear_pending() as well as 
	the other implementation functions.
	* gio/src/outputstream.hg: Ignore the equivalent functions here, 
	assuming that they are also only for implementations.

	svn path=/trunk/; revision=526

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	FileAttributeMatcher::create(): Add a default value and documentation.

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/fileinfo.hg: FileAttributeMatcher::create(): Add a default 
	value and documentation.
	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/mount.ccg:
	* gio/src/mount.hg: const corrections for Slot* and Cancellable 
	parameters.

	svn path=/trunk/; revision=525

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	enumerate_children(), enumerate_children_async(), query_info(),

2008-01-20  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg:
	* gio/src/file.ccg: enumerate_children(), enumerate_children_async(), 
	query_info(), query_info_async(), query_exists(): Reorder parameters to 
	add default values, add documentation, make const.

	svn path=/trunk/; revision=524

2008-01-18  Murray Cumming  <murrayc@murrayc.com>

	Added unmount(), remount(), and eject(), based on code from José

2008-01-18  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/mount.ccg:
	* gio/src/mount.hg: Added unmount(), remount(), and 
	eject(), based on code from José Alburquerque in bug #510080.
	* gio/src/volume.hg: Added documentation.

	svn path=/trunk/; revision=523

2008-01-18  Murray Cumming  <murrayc@murrayc.com>

	poll_for_media(): Added documentation. Wrapped 2 vfuncs (though the .defs

2008-01-18  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/drive.ccg:
	* gio/src/drive.hg: poll_for_media(): Added documentation.
	Wrapped 2 vfuncs (though the .defs still need to be written).
	* gio/src/file.ccg:
	* gio/src/file.hg: move(), copy(), replace(): Rearranged the parameters so we 
	can have default values, and added some documentation.
	set_display_name(), set_display_name_async(): Take a ustring instead 
	of a std::string. Added documentation.

	* gio/src/fileattribute.ccg:
	* gio/src/fileattribute.hg: Added FileAttributeInfoList::add().
	Added FileAttributeInfoList::empty().

	* tools/m4/convert_gio.m4: 
	* gio/src/appinfo.hg:
	* gio/src/fileenumerator.hg: Move the ListHandle conversions to the 
	.hg files because the ownership is specific to each use.

	svn path=/trunk/; revision=522

2008-01-17  Murray Cumming  <murrayc@murrayc.com>

	Wrapped functions that reurn GLists.

2008-01-18  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/drive.hg:
	* gio/src/volumemonitor.hg: Wrapped functions that reurn GLists.

	svn path=/trunk/; revision=521

2008-01-17  Murray Cumming  <murrayc@murrayc.com>

	Removed operator= and operator!= for these RefPtr<> specializations,

2008-01-18  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.hg:
	* gio/src/icon.hg: Removed operator= and operator!= for these RefPtr<> 
	specializations, because they are unobvious and conflict with the generic 
	ones.

	svn path=/trunk/; revision=520

2008-01-17  Marko Anastasov  <marko.anastasov@gmail.com>

	Fixed const-ness of Cancellables.

2008-01-17  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/inputstream.ccg:
	* gio/src/inputstream.hg: Fixed const-ness of Cancellables.
	* gio/src/fileinputstream.ccg:
	* gio/src/fileinputstream.ccg:
	* gio/src/fileoutputstream.ccg:
	* gio/src/fileoutputstream.hg: Added an overload of query_info_async(),
	* gio/src/outputstream.ccg:
	* gio/src/outputstream.hg: write_async(), splice_async() without
	the Cancellable.

	Patch from José Alburquerque, bug #510080.

	svn path=/trunk/; revision=519

2008-01-17  Murray Cumming  <murrayc@murrayc.com>

	eject(),

2008-01-17  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg:
	* gio/src/drive.ccg:
	* gio/src/drive.hg: eject(),
	* gio/src/volume.ccg:
	* gio/src/volume.hg: eject(),
	* tools/m4/convert_gio.m4: Wrapped GMountUnmountFlags enum as 
	MountUnmountFlags, and used it. 

	* gio/src/file.ccg:
	* gio/src/file.hg: unmount_mountable(), eject(): Reorder the 
	parameters and add a default flag value.

	svn path=/trunk/; revision=518

2008-01-16  Marko Anastasov  <marko.anastasov@gmail.com>

	Added FilterInputStream.

2008-01-17  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/filterinputstream.ccg:
	* gio/src/filterinputstream.hg:
	* gio/src/Makefile_list_of_hg.am_fragment: Added FilterInputStream.

	Updated svn:ignore properties.

	svn path=/trunk/; revision=517

2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	Added Mount and VolumeMonitor. Regenerated.

2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_defs_gio.cc: Added Mount and 
	VolumeMonitor.
	* gio/src/gio_signals.defs: Regenerated.

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/mount.ccg:
	* gio/src/mount.hg: Added Mount
	* gio/src/volumemonitor.hg:
	* gio/src/volumemonitor.ccg: Added VolumeMonitor.

	* tools/m4/convert_gio.m4: Added necessary conversions.

	svn path=/trunk/; revision=516

2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	murrayc@murrayc-desktop:~/svn/gnome220/glibmm$ more ChangeLog 2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* tools/m4/convert_gio.m4:
	* gio/src/filemonitor.hg:
	* gio/src/filemonitor.hg: Added FileMonitor.
	* gio/src/file.hg: Tried to wrap monitor_file() and 
	monitor_directory but there is a problem with the GError in 
	the generated code.

	* tools/extra_defs_gen/generate_defs_gio.cc: Added GFileMonitor.

	svn path=/trunk/; revision=515

2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	Added methods and vfuncs (though the .defs do not exist for the vfuncs

2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/seekable.ccg:
	* gio/src/seekable.hg: Added methods and vfuncs (though the .defs 
	do not exist for the vfuncs yet.)

	svn path=/trunk/; revision=514

2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	Added query_file_exists(). uri_unescape_string(), uri_escape_string():

2008-01-16  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.hg: Added query_file_exists().
	* glib/src/uriutils.hg:uri_unescape_string(), uri_escape_string():
	Change the illegal_characters and reserved_chars_allowed parameters 
	to std::string, because they may not be UTF-8 
	See bug #508773.

	svn path=/trunk/; revision=513

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	eject(), poll_for_media()

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/drive.ccg:
	* gio/src/drive.hg:  eject(), poll_for_media()
	* gio/src/volume.ccg:
	* gio/src/volume.hg: mount(), eject():
	Add method overloads that take no slot.

	svn path=/trunk/; revision=512

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	Improved the documentation for uri_unescape_string(), based on the

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/uriutils.hg: Improved the documentation for uri_unescape_string(), 
	based on the improved C documentation.

	svn path=/trunk/; revision=511

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	*_async() functions: Rearrange the parameters, so the (optional)

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/drive.ccg:
	* gio/src/drive.hg:
	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/fileenumerator.ccg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileinputstream.ccg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.ccg:
	* gio/src/fileoutputstream.hg:
	* gio/src/inputstream.ccg:
	* gio/src/inputstream.hg:
	* gio/src/outputstream.ccg:
	* gio/src/outputstream.hg:
	* gio/src/volume.ccg:
	* gio/src/volume.hg: *_async() functions: Rearrange the parameters, 
	so the (optional) cancellable is always after the slot, 
	and so flags and io_priority are always at the end, so they can have 
	default values. 

	svn path=/trunk/; revision=510

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	Moved the gio conversions into their own .m4 file, to make it easier to

2008-01-15  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/Makefile_list_of_sources.am_fragment:
	* tools/m4/convert_gio.m4:
	* tools/m4/convert_glib.m4:
	* tools/m4/convert_gtkmm.m4: Moved the gio conversions into 
	their own .m4 file, to make it easier to find them.

	* gio/src/cancellable.ccg:
	* gio/src/cancellable.hg: Use _WRAP_METHOD() for get_current(), 
	which also fixes the refcounting.
	* glib/src/uriutils.hg: Added documentation and default parameter 
	values.

	svn path=/trunk/; revision=509

2008-01-12  Murray Cumming  <murrayc@murrayc.com>

	1.5.1:

2008-01-12  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm.h: Added uriutils.h
	* glib/glibmm/private/Makefile.am: Renamed some variables to 
	avoid clashes with the build_shared/ variables, which caused 
	a dist failure involving wrap_init.h

	svn path=/trunk/; revision=508

2008-01-12  Murray Cumming  <murrayc@src.gnome.org>

	Added missing file (but empty, as it is in gtkmm. We should look at that.)

	svn path=/trunk/; revision=507

2008-01-11  Murray Cumming  <murrayc@murrayc.com>

	Added class documentation.

2008-01-11  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/appinfo.hg: Added class documentation.
	* gio/src/asyncresult.hg:
	* gio/src/cancellable.hg:
	* gio/src/drive.hg:
	* gio/src/file.hg:
	* gio/src/fileattribute.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileicon.hg:
	* gio/src/fileinfo.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/icon.hg:
	* gio/src/inputstream.hg:
	* gio/src/loadableicon.hg:
	* gio/src/mountoperation.hg:
	* gio/src/outputstream.hg:
	* gio/src/seekable.hg:
	* gio/src/simpleasyncresult.hg:
	* gio/src/volume.hg: Added @newin2p16 to 
	the documentation.

	* glib/src/Makefile_list_of_hg.am_fragment:
	* glib/src/uriutils.ccg:
	* glib/src/uriutils.hg: Added wrappers of (some) of 
	these new g_uri_* functions. Not yet documented.

	svn path=/trunk/; revision=506

2008-01-11  Murray Cumming  <murrayc@murrayc.com>

	Rename create() to create_file(), create_async() to create_file_async()

2008-01-11  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Rename create() to create_file(), 
	create_async() to create_file_async() and 
	create_finish() to create_file_finish() to slightly 
	reduce confusion with the static create*() methods.

	svn path=/trunk/; revision=505

2008-01-11  Murray Cumming  <murrayc@murrayc.com>

	Added the Seekable interface, though it has not methods yet.

2008-01-11  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/seekable.ccg:
	* gio/src/seekable.hg: Added the Seekable interface, though it 
	has not methods yet.
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg: Derive/implement Seekable.
	* gio/src/icon.hg:
	* gio/src/inputstream.hg:
	* gio/src/loadableicon.hg:
	* gio/src/mountoperation.hg:
	* gio/src/outputstream.hg:
	* gio/src/simpleasyncresult.hg:
	* gio/src/volume.hg: Added class documentation, based on the C 
	documentation.

	svn path=/trunk/; revision=504

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	Wrapped AppInfo and AppLaunchContext, without the vfuncs. New conversions.

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/appinfo.ccg:
	* gio/src/appinfo.hg: Wrapped AppInfo and AppLaunchContext, without
	the vfuncs.
	* tools/m4/convert_glib.m4: New conversions.
	The previous comment on build was not valid.

	svn path=/trunk/; revision=503

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	Added AppInfo, with only two methods before we see why it doesn't get

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/appinfo.ccg:
	* gio/src/appinfo.hg:
	* gio/src/Makefile_list_of_hg.am_fragment:
	Added AppInfo, with only two methods before we see why it
	doesn't get included in the build.

	svn path=/trunk/; revision=502

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	Added poll_for_media, poll_for_media_finish.

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/drive.hg:
	* gio/src/drive.ccg: Added poll_for_media, poll_for_media_finish.
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/inputstream.hg:
	* gio/src/volume.hg: Modified *_finish functions to take a const
	AsyncResult.

	svn path=/trunk/; revision=501

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	Added missing capability checking functions. Updated svn:ignore

2008-01-10  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/drive.hg: Added missing capability checking functions.
	* gio/giomm: Updated svn:ignore properties.

	svn path=/trunk/; revision=500

2008-01-10  Jonathon Jongsma  <jjongsma@gnome.org>

	api change in reply() virtual function and addition of

2008-01-10  Jonathon Jongsma  <jjongsma@gnome.org>

	* gio/src/mountoperation.hg: api change in reply() virtual function and
	addition of MountOperationResult enumeration
	* tools/m4/convert_glib.m4: add MountOperationResult enum conversion
	* gio/src/gio_enums.defs: re-generate enums
	* gio/src/gio_methods.defs: re-generate methods

	svn path=/trunk/; revision=498

2008-01-10  Murray Cumming  <murrayc@murrayc.com>

	Copy (and very slightly adjust) the build_shared/ files from gtkmm, which

2008-01-10  Murray Cumming  <murrayc@murrayc.com>

	* Makefile.am:
	* build_shared/Makefile_build.am_fragment:
	* build_shared/Makefile_build_extra.am_fragment:
	* build_shared/Makefile_build_gensrc.am_fragment:
	* build_shared/Makefile_gensrc.am_fragment:
	* build_shared/Makefile_gensrc_platform.am_fragment:
	Copy (and very slightly adjust) the build_shared/ files from 
	gtkmm, which has had multiple sub-libraries for a long time.
	* gio/giomm/Makefile.am:
	* gio/src/Makefile.am:
	* gio/src/Makefile_list_of_hg.am_fragment:
	* glib/glibmm/Makefile.am:
	* glib/glibmm/private/Makefile.am:
	* glib/src/Makefile.am:
	* glib/src/Makefile_list_of_hg.am_fragment:
	Adapt to the structure (variable names, mostly) needed by the 
	newer build_shared/ files, so that the giomm library is actually 
	built. 

	* tools/m4/convert_glib.m4:
	* gio/giomm/init.cc:
	* gio/giomm/init.h:
	* gio/src/asyncresult.ccg:
	* gio/src/drive.ccg:
	* gio/src/drive.hg:
	* gio/src/file.ccg:
	* gio/src/file.hg:
	* gio/src/fileattribute.ccg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/volume.ccg:
	* gio/src/volume.hg: Various build fixes, including adding a flags 
	parameter to unmount and eject methods.

	svn path=/trunk/; revision=497

2008-01-10  Murray Cumming  <murrayc@murrayc.com>

	Correct an include.

2008-01-10  Murray Cumming  <murrayc@murrayc.com>

	* gio/giomm.h: Correct an include.
	* gio/src/asyncresult.hg:
	* gio/src/cancellable.hg:
	* gio/src/drive.hg:
	* gio/src/file.hg:
	* gio/src/fileattribute.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileicon.hg:
	* gio/src/fileinfo.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/outputstream.hg:
	* gio/src/simpleasyncresult.hg:
	* gio/src/volume.ccg:
	* gio/src/volume.hg: Correct several includes to use giomm/ instead of 
	glibmm/.

	* configure.in:
	* examples/Makefile.am_fragment:
	* tests/Makefile.am_fragment: Include/Link giomm too.

	* tests/Makefile.am:
	* tests/giomm_simple/Makefile.am:
	* tests/giomm_simple/giomm_simple.cc:
	Added a little test, which shows that the library is not being built 
	properly - we get undefined symbols.

	svn path=/trunk/; revision=496

2008-01-10  Murray Cumming  <murrayc@murrayc.com>

	Added some types used so far. There are probably more that should be added

2008-01-10  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_defs_gio.cc: Added some types used so 
	far. There are probably more that should be added here.
	* tools/extra_defs_gen/generate_extra_defs.cc: get_properties(): 
	Added warnings and a check to avoid a crash when 
	g_object_interface_list_properties() returns a NULL paramspec, but a 
	non-null properties count, as is happening with GVolume.
	* gio/src/gio_signals.defs: Generated this from generate_defs_gio.

	svn path=/trunk/; revision=495

2008-01-09  Murray Cumming  <murrayc@murrayc.com>

	Added this, though no methods or vfuncs are wrapped yet.

2008-01-09  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/Makefile_list_of_hg.am_fragment:
	* gio/src/loadableicon.ccg:
	* gio/src/loadableicon.hg: Added this, though no methods or vfuncs are 
	wrapped yet.
	* tools/m4/convert_glib.m4:
	* gio/src/fileicon.hg:
	* gio/src/fileinfo.hg: Derive from LoadableIcon and implement it.
	set_modification_time(): Take a const TimeVal.
	* gio/src/fileinputstream.ccg:
	* gio/src/fileinputstream.hg: Added documentation and a version of 
	seek() without the cancellable parameter.
	* gio/src/gio_docs.xml: Generated from docextract_to_xml.py so we get 
	documentation for methods created by _WRAP_METHOD().

	svn path=/trunk/; revision=494

2008-01-09  Murray Cumming  <murrayc@murrayc.com>

	Added method documentation for most *_async methods. See also GTK+ bug

2008-01-09  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/file.ccg:
	* gio/src/file.hg: Added method documentation for most *_async methods.
	See also GTK+ bug #508297.
	Removed one superfluous load_partial_contents_async() method overload.
	* gio/src/fileenumerator.hg: Corrected documentation for close_async(). 

	svn path=/trunk/; revision=493

2008-01-08  Murray Cumming  <murrayc@murrayc.com>

	Uncomment GTKMM_DOXYGEN_INPUT_SUBDIRS to fix the reference documentation

2008-01-08  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Uncomment GTKMM_DOXYGEN_INPUT_SUBDIRS to fix the 
	reference documentation build (no idea when this happened) and add 
	gio to the list of directories.

	* glib/src/optioncontext.ccg:
	* glib/src/optioncontext.hg: Added get_help().

	* gio/src/gio_enums.defs: Regenerated with enums.pl
	* gio/src/gio_methods.defs: Regenerated with h2defs.py.

	* tools/m4/convert_glib.m4:
	* gio/src/fileattribute.hg: Renamed FileAttributeFlags to 
	FileAttributeInfoFlags, as it is in gio.

	* gio/src/fileenumerator.hg:
	* gio/src/asyncresult.hg:
	* gio/src/cancellable.hg:
	* gio/src/drive.hg:
	* gio/src/file.hg: Added class documentation, and some method 
	documentation, based on the C documentation.
	Many giomm classes still need documentation.

	svn path=/trunk/; revision=492

2008-01-08  Murray Cumming  <murrayc@murrayc.com>

	Made some whitespace more consistent with the rest of glibmm. In

2008-01-08  Murray Cumming  <murrayc@murrayc.com>

	* gio/src/asyncresult.hg:
	* gio/src/cancellable.hg:
	* gio/src/fileattribute.hg:
	* gio/src/fileenumerator.hg:
	* gio/src/fileinputstream.hg:
	* gio/src/fileoutputstream.hg:
	* gio/src/icon.hg:
	* gio/src/inputstream.hg:
	* gio/src/mountoperation.hg:
	* gio/src/outputstream.hg:
	* gio/src/simpleasyncresult.hg:
	Made some whitespace more consistent with the rest of glibmm.
	In particular, white space alignment in .hg files will often be even worse 
	when seen in the generated .h files.

	* gio/src/drive.hg: get_icon(), 
	* gio/src/file.hg: read(), 
	* gio/src/fileicon.hg: get_file(), 
	* gio/src/fileinfo.hg: get_icon(), 
	* gio/src/volume.hg: get_drive(), get_icon():
	For the const versions, actually return a const RefPtr.

	svn path=/trunk/; revision=491

2007-12-28  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=490

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	Build a separate extra defs generating program for gio. Currently the

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	* tools/extra_defs_gen/generate_defs_gio.cc:
	* tools/extra_defs_gen/Makefile.am: Build a separate extra defs
	generating program for gio. Currently the program would crash
	with get_defs() calls with gio types.
	* configure.in: Define GIOMM_CFLAGS and GIOMM_LIBS.

	svn path=/trunk/; revision=489

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	Regenerated with enums.pl and h2defs.py.

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/gio_enums.defs:
	* gio/src/gio_methods.defs: Regenerated with enums.pl and h2defs.py.

	svn path=/trunk/; revision=488

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	Added files missing from the import.

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/src/icon.ccg:
	* gio/src/icon.hg:
	* gio/src/inputstream.ccg:
	* gio/src/inputstream.hg:
	* gio/src/Makefile_list_of_hg.am_fragment: Added files missing from
	the import.

	Set svn:ignore properties for gio.

	svn path=/trunk/; revision=487

2007-12-28  Kjartan Maraas  <kmaraas@src.gnome.org>

	Correct the version in AM_INIT too

	svn path=/trunk/; revision=486

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	Mention the new gio/giommconfig.h in AM_CONFIG_HEADER(). Change references

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Mention the new gio/giommconfig.h in AM_CONFIG_HEADER().
	* gio/Makefile.am: Change references to the giomm-2.0.pc to giomm-2.4.pc.
	* gio/src/Makefile_list_of_hg.am_fragment: Remove icon.hg and inputstream.hg 
	because they do not exist in svn.
	* gio/src/outputstream.hg: Comment out set_pending() because gmmproc complains 
	about the wrong number of parameters.

	This fixes the build, though I don't know yet if everything is working properly.

	svn path=/trunk/; revision=485

2007-12-28  Murray Cumming  <murrayc@src.gnome.org>

	Updated NEWS

	svn path=/trunk/; revision=484

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	Fixed typo.

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	* configure.in: Fixed typo.

	svn path=/trunk/; revision=483

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	Checked in sources from giomm. Build needs to be fixed to work with

2007-12-28  Marko Anastasov  <marko.anastasov@gmail.com>

	* gio/*:
	* configure.in:
	* Makefile.am:
	* tools/m4/convert_glib.m4: Checked in sources from giomm. Build
	needs to be fixed to work with scripts in build_shared/.

	svn path=/trunk/; revision=482

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	Added @newin2p16 to compose() and format() documentation.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/ustring.h: Added @newin2p16 to compose() and format() 
	documentation.
	* glib/src/keyfile.ccg:
	* glib/src/keyfile.hg: set_double_list(): Make the ArrayHandle argument const. 
	This could not have been used before.

	svn path=/trunk/; revision=481

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	Add class documentation from the glibmm-2-14 branch.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/keyfile.hg: Add class documentation from the glibmm-2-14 branch.

	svn path=/trunk/; revision=480

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	Merged from glibmm-2-14: 2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_gobject.m4:
	* tools/m4/ctor.m4:
	_INITIALLY_UNOWNED_SINK: Rename from INITIALLY_UNOWNED_SINK, 
	for consistency, because this could be used directly from .ccg files 
	that use _CONSTRUCT().
	Remove the debug code for the else case.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_gobject.m4:
	* tools/m4/ctor.m4:
	Added the _DERIVES_INITIALLY_UNOWNED macro, for use 
	after _CLASS_GOBJECT(), if the C type derives 
	from GInitiallyUnowned rather than just GObject.
	(Not for use with GtkObject-derived classes).
	This does g_object_ref_sink() so that we get a normally-behaved 
	GObject.

	svn path=/trunk/; revision=479

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	Added this, to fix the build. I forgot to add this when merging the change

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* scripts/c_std.m4: Added this, to fix the build. I forgot to 
	add this when merging the change from glibmm-2-14 on 2007-10-22.

	svn path=/trunk/; revision=478

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	Merged to trunk from glibmm-2-14. This should not have been applied to glibmm-2-14: 2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/refptr.h: Use @newin2p16 in the reset() documentation.

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/refptr.h: Deprecate clear(), replacing it with 
	reset(), because people often do treemodel.clear() when they 
	mean treemodel->clear(). reset() is consistent with std::auto_ptr<>.

	svn path=/trunk/; revision=476

2007-12-28  Daniel Elstner  <danielk@openismus.com>

	Merged to trunk from glibmm-2-14: 2007-12-14  Daniel Elstner  <danielk@openismus.com>

	* tools/pm/Output.pm (output_wrap_property): Refuse to generate
	a wrapper for a construct-only property which is also write-only,
	and display an error message accordingly. (#436789)

	svn path=/trunk/; revision=475

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	Include glib.h instead of gmessages.h or gtestutils.h so this builds with

2007-12-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/error.cc:
	* glib/glibmm/exception.cc:
	* glib/src/convert.ccg:
	* glib/src/date.ccg: Include glib.h instead of gmessages.h or 
	gtestutils.h so this builds with all versions of glib.

	svn path=/trunk/; revision=474

2007-12-03  Daniel Elstner  <daniel@src.gnome.org>

	Fix spaces/tabs mixup in one of my ChangeLog entries.

	svn path=/trunk/; revision=467

2007-11-20  Sebastien Bacher  <seb128@ubuntu.com>

	fix build issue when using gcc4.3 (#498438)

2007-11-20  Sebastien Bacher  <seb128@ubuntu.com>

	* glib/glibmm/object.cc: fix build issue when using gcc4.3 (#498438)

	svn path=/trunk/; revision=465

2007-10-22  Murray Cumming  <murrayc@murrayc.com>

	Added a test for the case that time_t is equivalent to guint32, as seems

2007-10-22  Murray Cumming  <murrayc@murrayc.com>

	* Merged this change from 2007-03-03 from the glibmm-2-12 branch, which was 
	missing from this branch:
	* configure.in:
	* glib/glibmmconfig.h.in:
	* glib/src/date.ccg:
	* glib/src/date.hg:
	* scripts/Makefile.am:
	* scripts/c_std.m4: Added a test for the case that time_t is equivalent to 
	guint32, as seems to be the case on NetBSD-4.99.6/amd64, so we can ifdef-out 
	the (deprecated, anyway) Glib::Date::set_time(GTime) method when necessary, because 
	GTime is also equivalent to guint32.
	Bug #386990.

	svn path=/trunk/; revision=456

2007-10-12  Armin Burgmeier  <armin@openismus.com>

	Added a new section called SECTION_HEADER_FIRST that within the header

2007-10-12  Armin Burgmeier  <armin@openismus.com>

	* tools/m4/base.m4: Added a new section called SECTION_HEADER_FIRST
	that within the header file that is before any generated code (apart
	from the include guards) and a _CONFIGINCLUDE macro that includes a
	file within this section. This is intended to be used with
	g*mmconfig.h so the *_DISABLE_DEPRECATED define is set for deprecated
	classes also when included from other code.

	svn path=/trunk/; revision=452

2007-10-05  Philipp Kerling  <philipp@gmail.com>

	Also create defs for interfaces, by refing and unrefing them temporarily.

	2007-10-05  Philipp Kerling <philipp@gmail.com>

	* tools/extra_defs_gen/generate_extra_defs.cc: 
	Also create defs for interfaces, by refing and unrefing them 
	temporarily.

	svn path=/trunk/; revision=451

2007-10-03  Murray Cumming  <murrayc@murrayc.com>

	Replaced wrap_create_new_wrapper() (introduced by the last commit) with

2007-10-02  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/wrap.cc:
	* glib/glibmm/wrap.h: Replaced wrap_create_new_wrapper() 
	(introduced by the last commit) with wrap_create_new_wrapper(),
	allowing us to check that the parent GType actually implements 
	the interface. This allows us to return a parent known type 
	if it implements the wanted interface.

	svn path=/trunk/; revision=448

2007-09-25  Murray Cumming  <murrayc@murrayc.com>

	Added wrap_auto_interface<>(), which should be used by wrap()

2007-09-25  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/wrap.cc:
	* glib/glibmm/wrap.h: Added wrap_auto_interface<>(), which should 
	be used by wrap() specializations for interfaces, so we create 
	instances of the interface even if the derived C type is unknown to 
	us.
	* glib/glibmm/signalproxy_connectionnode.h: Do not wrap.h from here 
	unnecessarily, to allow us to include objectbase.h in wrap.h, 
	needed by the new templated method.
	* tools/m4/class_interface.m4: Use wrap_auto_interface<>() 
	instead of wrap_auto() for interfaces.

	svn path=/trunk/; revision=445

2007-09-12  Daniel Elstner  <danielk@openismus.com>

	Some cosmetic cleanup. Also replace C-style casts in default argument

2007-09-06  Daniel Elstner  <danielk@openismus.com>

	* glib/src/regex.{ccg,hg} (Regex): Some cosmetic cleanup.  Also
	replace C-style casts in default argument values with static_cast<>.
	(escape_string): Wrap missing function.
	(match_full): Rename to and add as overloads of match().
	(match_all_full): Rename to and add as overloads of match_all().
	(split_full): Rename to and add as overloads of split().

	svn path=/trunk/; revision=443

2007-09-03  Daniel Elstner  <daniel@src.gnome.org>

	:FormatStream::FormatStream): Use the global C++ locale instead of forcing

	* glib/glibmm/ustring.cc (ustring::FormatStream::FormatStream): Use
	the global C++ locale instead of forcing the environment's locale
	onto the formatting stream.  This lifts an unnecessary restriction
	at the cost of requiring users to call std::locale::global().
	* glib/glibmm/ustring.h (ustring): Advertise the new compose and
	format API in the class documentation.
	(ustring::format): Correct a couple of cut'n'paste mistakes -- ouch.
	Also add two more overloads so that format() now takes up to eight
	arguments.  Extent the method documentation, too.
	(ustring::Stringify): Explicitly declare the class as noncopyable.
	(ustring::compose): Qualify calls to method ustring::compose_argv()
	in order to avoid surprising name lookup results in the context of
	the template instantiation.

	* docs/reference/Doxyfile.in (PREDEFINED): Add GLIBMM_HAVE_WIDESTREAM
	so that the wide stream I/O operators show up in the documentation.

	svn path=/trunk/; revision=441

2007-09-03  Daniel Elstner  <daniel@src.gnome.org>

	Update MAINTAINERS file to new required format.

	svn path=/trunk/; revision=440

2007-08-16  Jonathon Jongsma  <jjongsma@src.gnome.org>

	added <div> to doxygen header and footer to make it easier to integrate

	* docs/reference/glibmm_footer.html_fragment,
	docs/reference/glibmm_header.html_fragment: added <div> to doxygen header
	and footer to make it easier to integrate with library.gnome.org, per a
	request by Frederic Peters

	svn path=/trunk/; revision=438

2007-08-15  Daniel Elstner  <daniel@src.gnome.org>

	:compose_argv): Rename "format" argument to "fmt" to avoid name clashes

	* glib/glibmm/ustring.{cc,h} (ustring::compose_argv): Rename
	"format" argument to "fmt" to avoid name clashes with the method
	of the same name.
	(ustring::compose): Make the type of each substitution parameter
	a template argument, and invoke ustring::format() implicitly for
	non-string arguments.  Explicit invocation of ustring::format() is
	still necessary in order to apply I/O manipulators to an argument.
	(ustring::Stringify): New auxiliary template class used in the
	implementation of ustring::compose().

	* examples/compose/main.cc (show_examples): Omit explicit calls
	to ustring::format() where possible.

	svn path=/trunk/; revision=437

2007-08-12  Daniel Elstner  <daniel@src.gnome.org>

	New example demonstrating the message compose and format features. New

	* examples/compose: New example demonstrating the message
	compose and format features.
	* examples/compose/main.cc: New file.
	* examples/compose/Makefile.am: New file.

	* examples/Makefile.am (example_dirs): Add compose directory.
	* configure.in (AC_CONFIG_FILES): Add examples/compose/Makefile.

	svn path=/trunk/; revision=434

2007-08-12  Daniel Elstner  <daniel@src.gnome.org>

	Add -I$(top_builddir) in order to allow <config.h> to be included.

	* build_shared/Makefile_build.am_fragment (all_includes): Add
	-I$(top_builddir) in order to allow <config.h> to be included.

	* glib/glibmm/ustring.{cc,h}: Include <config.h> for the
	definition of SIZEOF_WCHAR_T.
	(ustring::FormatStream::stream): Replace accessor with template
	method that passes its argument onto the stream.  Add overload
	for "const char*" to enable the use of UTF-8 string literals as
	arguments to ustring::format().
	(ustring::FormatStream::FormatStream): Handle exceptions on
	failure to initialize the locale gracefully.
	(ustring::format): Adapt to the modified stream() method.
	(operator<<): Add missing call to ustring::raw() to get the
	number of bytes instead of code points.  Oops.

	svn path=/trunk/; revision=433

2007-08-12  Daniel Elstner  <daniel@src.gnome.org>

	Add preliminary implementation of a message compose and format API (bug

	* glib/glibmm/ustring.{cc,h}: Add preliminary implementation of
	a message compose and format API (bug #399216).  The API design
	is not final and still open for discussion.
	(ustring::compose): New set of static methods for composing
	internationalized text messages by substituting placeholders
	in a template string.
	(ustring::format): New set of static methods for locale-dependent
	formatting of numbers and other streamable objects to strings.
	(ustring::compose_argv): New static method which implements the
	common functionality of the compose() overloads.
	(ustring::FormatStream): New helper class which implements the
	type-independent functionality of the format() templates.
	(operator>>): New operator overload for std::wistream.
	(operator<<): New operator overload for std::wostream.

	svn path=/trunk/; revision=432

2007-08-12  Daniel Elstner  <daniel@src.gnome.org>

	New file, defining M4 utility macros for feature testing. These macros are

	* scripts/dk-feature.m4: New file, defining M4 utility macros for
	feature testing.  These macros are part of my personal autoconf
	library and are not specific to glibmm, as indicated by the "DK_"
	namespace prefix.

	* configure.in (AC_INIT): Switch to the non-deprecated usage of
	AC_INIT() by passing project name and version number as arguments.
	This is necessary to define a couple of auxiliary macros.
	(AC_PREREQ): Bump Autoconf version requirement to 2.58.
	(AC_CONFIG_SRCDIR): Point to project-specific source file.
	(AC_CONFIG_MACRO_DIR): Declare scripts/ as M4 directory.
	(AM_INIT_AUTOMAKE): Switch to non-deprecated usage.
	(AC_CHECK_SIZEOF): Use to determine the size of wchar_t.
	(DK_CHECK_FEATURE): Use new feature test macro to check for
	support of wide-character streams.

	* config.h.in (SIZEOF_WCHAR_T): Add #undef template.
	* glib/glibmmconfig.h.in (GLIBMM_HAVE_WIDE_STREAM): Likewise.

	svn path=/trunk/; revision=431

2007-08-03  Daniel Elstner  <daniel@src.gnome.org>

	Rewrite completely broken type adapter (bug #406960). Fix the

	* containerhandle_shared.h (TypeTraits<bool>): Rewrite completely
	broken type adapter (bug #406960).
	* src/keyfile.{ccg,hg}: Fix the implementation to correctly use
	ArrayHandle<>.  Fix compilation with the new ArrayHandle<bool>
	code.

	svn path=/trunk/; revision=430

2007-07-30  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=429

2007-07-29  Murray Cumming  <murrayc@murrayc.com>

	Added a set_double() without the group_name parameter, because the C

2007-07-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/keyfile.hg:
	* glib/src/keyfile.ccg: Added a set_double() without the group_name 
	parameter, because the C function can take NULL.
	* glib/src/glib_docs_override.xml: Corrected the documnentation for 
	g_keyfile_set/get_double() to mention 2.14, instead of 2.12, 
	because we only added these to glibmm in 2.14.
	* glib/src/regex.hg: Correct the since documentation to be 2.14 
	not 2.12.
	* glib/src/iochannel.hg: read(): Corrected a parameter name to 
	match the generated documentation.
	* glib/glibmm/miscutils.h: Fixed typos in the use of newin2p14.

	svn path=/trunk/; revision=428

2007-07-28  Murray Cumming  <murrayc@murrayc.com>

	Corrected the rsync options, to match those used by gtkmm, to fix the

2007-07-28  Murray Cumming  <murrayc@murrayc.com>

	* docs/Makefile_web.am_fragment: Corrected the rsync options, to 
	match those used by gtkmm, to fix the examples upload.
	* glib/src/glib_docs.xml: Regenerated from the C documentation.

	svn path=/trunk/; revision=427

2007-07-14  Murray Cumming  <murrayc@murrayc.com>

	Added get_double(), set_double(), get_double_list() and set_double_list().

2007-07-14  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/keyfile.ccg:
	* glib/src/keyfile.hg: Added get_double(), set_double(), get_double_list() 
	and set_double_list().

	svn path=/trunk/; revision=426

2007-07-09  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=425

2007-07-09  Jonathon Jongsma  <jjongsma@gnome.org>

	add some new API that was added in glib 2.12, including get/set_summary(),

2007-07-07  Jonathon Jongsma  <jjongsma@gnome.org>

	* glib/src/optioncontext.ccg:
	* glib/src/optioncontext.hg: add some new API that was added in glib 2.12,
	including get/set_summary(), get/set_description(), set_translation_domain(),
	and set_translate_fun().
	* glib/src/glib_docs.xml: Regenerated with docextract_to_xml.py
	* glib/src/glib_docs_override.xml: override docs for the new functions so
	that they say that they were introduced in glibmm 2.14 instead of 2.12

	svn path=/trunk/; revision=424

2007-07-02  Johannes Schmid  <johannes.schmid@openismus.com>

	Added class documentation

	2007-07-02  Johannes Schmid <johannes.schmid@openismus.com>

	* glib/src/regex.hg:
	Added class documentation

	svn path=/trunk/; revision=423

2007-07-02  Murray Cumming  <murrayc@murrayc.com>

	convert_tags_to_doxygen(): Handle newin markers for 2.12 and a few after

2007-07-02  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/DocsParser.pm: convert_tags_to_doxygen():
	Handle newin markers for 2.12 and a few after that. 
	* docs/reference/Doxyfile.in: Added ALIASES for newin2p12 and 
	a few more.

	svn path=/trunk/; revision=422

2007-06-30  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=421

2007-06-22  Murray Cumming  <murrayc@murrayc.com>

	Added SignalTimeout::connect_seconds() as an equivalent for

2007-06-22  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/main.cc:
	* glib/glibmm/main.h: Added SignalTimeout::connect_seconds() 
	as an equivalent for g_timeout_add_seconds() and took the improved 
	documentation from glib.

	* glib/glibmm/miscutils.cc:
	* glib/glibmm/miscutils.h: Added get_user_special_dir(), though we 
	should maybe wrap the enum.
	Reimplemented many of the functions with the 
	convert_return_gchar_ptr_to_stdstring() and 
	convert_const_gchar_ptr_to_stdstring() functions to simplify them 
	and make them handle NULLs properly.

	svn path=/trunk/; revision=420

2007-06-22  Murray Cumming  <murrayc@murrayc.com>

	Added a create() method, and added some more default parameter values to

2007-06-22  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/regex.ccg:
	* glib/src/regex.hg: Added a create() method, and added some 
	more default parameter values to the methods.

	* configure.in:
	* examples/Makefile.am:
	* examples/regex/main.cc: Added a very simple example.

	* glib/glibmm/value_custom.h: Put header guards around this, though 
	this should never be included directly anyway.

	svn path=/trunk/; revision=419

2007-06-17  Murray Cumming  <murrayc@murrayc.com>

	2.13.6:

2007-06-17  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/regex.hg:
	* glib/src/matchinfo.hg: Removed API that uses GMatchInfo, until we 
	wrap this properly, probably as a C++ iterator. This will avoid this 
	API accidentally being released as stable sometime.

	svn path=/trunk/; revision=418

2007-06-12  Murray Cumming  <murrayc@murrayc.com>

	Regenerated with enums.pl Regenerated with h2defs.py

2007-06-12  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/glib_enums.defs: Regenerated with enums.pl
	* glib/src/glib_functions.defs: Regenerated with h2defs.py

	* glib/src/Makefile_list_of_hg.am_fragment:
	* tools/m4/convert_glib.m4:
	* glib/src/matchinfo.ccg:
	* glib/src/matchinfo.hg:
	* glib/src/regex.ccg:
	* glib/src/regex.hg: Added the RegEx and MatchInfo classes.
	These need some examples to test them. The MatchInfo class is 
	probably particularly broken at the moment. See the TODO comments.

	* glib/glibmm.h: Added regex.h

	svn path=/trunk/; revision=417

2007-05-14  Murray Cumming  <murrayc@murrayc.com>

	Explicitly mention Glib::wrap() in the documentation for generated

2007-05-14  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_boxedtype.m4:
	* tools/m4/class_gobject.m4:
	* tools/m4/class_gtkobject.m4:
	* tools/m4/class_interface.m4:
	* tools/m4/class_opaque_copyable.m4:
	* tools/m4/class_opaque_refcounted.m4: Explicitly mention Glib::wrap() 
	in the documentation for generated Glib::wrap() functions, because doxygen 
	does not show their namespace.

	svn path=/trunk/; revision=413

2007-05-04  Murray Cumming  <murrayc@murrayc.com>

	When generating example prototypes for signal handlers, prefix them with

2007-05-04  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/Function.pm: When generating example prototypes for 
	signal handlers, prefix them with on_my_, to avoid confusion with 
	similarly named functions and with on_*() default signal handlers.

	svn path=/trunk/; revision=412

2007-05-01  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=408

2007-04-30  Johannes Schmid  <johannes.schmid@openismus.com>

	Use _IS_DEPRECATED instead of _CLASS_DEPRECATED because the latter

	2007-04-30  Johannes Schmid <johannes.schmid@openismus.com>

	* tools/generate_wrap_init.pl.in:
	* tools/m4/class_gtkobject.m4:
	Use _IS_DEPRECATED instead of _CLASS_DEPRECATED because
	the latter confuses gmmproc.
	We cannot just use _DEPRECATED because it will result
	in incorrect handling of for example
	#ifndef GTKMM_DISABLE_DEPRECATED

	svn path=/trunk/; revision=404

2007-04-24  Yselkowitz  <yselkowitz@users.sourceforge.net>

	Check for both m4 and M4 in the GNU m4 output, to fix the build on some

	2007-04-24  Yselkowitz <yselkowitz@users.sourceforge.net>

	* scripts/macros.m4: Check for both m4 and M4 in the GNU m4 output,
	to fix the build on some platforms.
	Bug #423990

	svn path=/trunk/; revision=401

2007-04-24  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

	svn path=/trunk/; revision=400

2007-04-23  Murray Cumming  <murrayc@src.gnome.org>

	Updated NEWS

	svn path=/trunk/; revision=399

2007-04-15  Armin Burgmeier  <armin@openismus.com>

	Added peek_token() function which only returns the next token without

2007-04-11  Armin Burgmeier  <armin@openismus.com>

	* tools/pm/WrapParser.pm: Added peek_token() function which only
	returns the next token without removing it from the tokens array.
	Parse '/**' as a separate token and handle it in a special way so that
	when the final '*/' is encountered and _WRAP_SIGNAL follows, the
	comment is not terminated but continued by that automatically
	generated doxygen comment.

	* tools/pm/Output.pm: Added a merge_doxygen_comment_with_previous
	parameter in output_wrap_sig_decl(). If it is nonzero, the function
	assumes that there is already a comment open and continues to use it
	instead of opening a new comment by removing the leading '/**' from
	what get_refdoc_comment() returns. Bug #378810.

	svn path=/trunk/; revision=392

2007-04-09  Johannes Schmid  <johannes.schmid@openismus.com>

	Use _CLASS_DEPRECATE instead of just _DEPRECATE to known whether a whole

	2007-04-06  Johannes Schmid <johannes.schmid@openismus.com>

	* tools/generate_wrap_init.pl.in:
	Use _CLASS_DEPRECATE instead of just _DEPRECATE to
	known whether a whole class should be avoided in wrap_init.
	Otherwise every .hg file containing deprecated methods
	might get ignored. (Fixes Gtk::TextBuffer bug in maemo)

	svn path=/trunk/; revision=388

2007-03-23  Bradley Bell  <btb@debian.org>

	Change variable name to avoid warnings about a shadowed member. Bug

2007-03-19  Bradley Bell  <btb@debian.org>

	* glib/glibmm/helperlist.h: Change variable name to avoid
	warnings about a shadowed member.
	Bug #420316.

2007-03-19  Bradley Bell  <btb@debian.org>

	* glib/glibmm/utility.h: remove g_free prototype, include gmem.h
	instead, to avoid a warning about a redundant declaration.
	Bug #420339.

	svn path=/trunk/; revision=386

2007-03-23  Armin Burgmeier  <armin@openismus.com>

	Use static_cast in vfuncs and signal handlers to cast the wrapper object

2007-03-17  Armin Burgmeier  <armin@openismus.com>

	* tools/m4/signal.m4:
	* tools/m4/vfunc.m4: 
	Use static_cast in vfuncs and signal handlers to cast the
	wrapper object to ObjectBase*. This is enough to check whether the object is
	from a derived type or not. A slow dynamic_cast has only to be performed if it
	is derived, and the C++ vfunc needs to be called.
	* glib/glibmm/objectbase.h: This requires ObjectBase::is_derived_ to be public, 
	because it is called on a ObjectBase* rather than the actual type.
	This causes a slight speed up of vfuncs and default signal handler invokation.

	Also added commented-out inline versions of ObjectBase::_get_current_wrapper() and 
	ObjectBase::is_derived(), which could be used in the generated code if we find 
	that this has significant performance benefits. Note that these methods must be 
	additional to the non-inline methods, because inline methods are not usually exported in the 
	shared library. 

	svn path=/trunk/; revision=385

2007-02-10  Murray Cumming  <murrayc@murrayc.com>

	Use a default value, to show that it can be done. (This change, from

2007-02-10  Murray Cumming  <murrayc@murrayc.com>

	* examples/options/main.cc: Use a default value, to show that it 
	can be done.
	(This change, from 2006-03-30 was restored after being accidentally lost on Apr 12 2006)

	2007-02-10  Armin Burgmeier <armin@arbur.net>

	* glib/src/optiongroup.ccg: default_c_arg(): Set the initial
	value of the C argument to the value the C++ argument has, to avoid
	that glibmm resets arguments to zero that were not given on the
	command line.
	(This change, from 2006-03-30 was restored after being accidentally lost on Apr 12 2006)

	svn path=/trunk/; revision=378

2007-01-28  Daniel Elstner  <daniel@src.gnome.org>

	If the argument list is empty, call the non- varargs overload of the

	* tools/m4/ctor.m4: If the argument list is empty, call the non-
	varargs overload of the Glib::ConstructParams constructor instead
	of using an empty varargs list.  This mistake was exposed thanks
	to the recent addition of G_GNUC_NULL_TERMINATED to the varargs
	constructor declaration.  Fortunately it was harmless in this case.
	Also use the opportunity to clean up the M4 code and prefix builtin
	M4 macros with m4_, so that we may get rid of the unprefixed macros
	altogether some day.

	svn path=/trunk/; revision=376

2007-01-26  Dodji Seketeli  <dodji@src.gnome.org>

	Thu, 25 Jan 2007 23:13:05 +0100 Dodji Seketeli

	* tools/m4/base.m4:
	prefix the builting mkstemp with 'm4' because otherwise,
	m4 1.4.8 recognizes it as a builtin macro and expands it, leading
	to compilation errors on some distros.
	This should fix #397167. Thanks to Daniel Elstner for spotting this.

	svn path=/trunk/; revision=372

2007-01-20  Daniel Elstner  <daniel@src.gnome.org>

	Early spring cleaning. Also add a paragraph about Dispatcher on win32 to

	* glib/glibmm/dispatcher.{cc,h}: Early spring cleaning.  Also add
	a paragraph about Dispatcher on win32 to the documentation.
	(DispatchNotifyData): Remove the 'tag' member from the struct that
	was always set to 0xdeadbeef in order to detect memory corruption.
	This is pointless, as we already check the DispatchNotifier pointer
	sent across the pipe, which is a far better indicator of corruption
	anyway.
	(warn_failed_pipe_io): Remove the err_no parameter and retrieve
	errno respectively GetLastError() within the function instead.
	(DispatchNotifier::conn_io_handler_): Remove, as we now inherit
	from sigc::trackable.  I verified that this doesn't cause problems
	with threading in this particular case.
	(DispatchNotifier::DispatchNotifier): If creating the pipe failed
	and exceptions are disabled, call at least warn_failed_pipe_io()
	instead of doing nothing at all.
	(DispatchNotifier::*): Rework the win32 implementation so that it
	matches more closely the Dispatcher semantics on Unix.  This still
	needs testing by someone on win32, though.  So far I only verified
	that it compiles with dummy definitions of the win32 API.  Also,
	I accidentally located the real cause of the race condition Cedric
	experienced in bug #109966.  It was a bug in my patch, rather than
	in the example code.

	* examples/thread/dispatcher.cc: Cleanup.  In particular, get rid
	of the Glib::RefPtr<> abuse with non-Glib::Object types.  I don't
	believe we endorse such usage officially, so it shouldn't be in
	the examples.

	svn path=/trunk/; revision=370

2007-01-20  Daniel Elstner  <daniel@src.gnome.org>

	Clean up the code a bit. (get_application_name): Remove the code that

	* glib/glibmm/miscutils.cc: Clean up the code a bit.
	(get_application_name): Remove the code that checked the string for
	valid UTF-8, and attempted conversion if not valid.  I must have
	been on crack when I wrote this, as the combination of conditions
	that would cause the string to be invalid UTF-8 is quite unlikely.
	If this is a valid concern at all, it should be filed as a GLib bug
	and not worked around in glibmm.
	(build_filename(const std::string&, const std::string&)): Just call
	the plain g_build_filename() instead of building a temporary array
	and passing that via ArrayHandle to the build_filename() overload
	for containers.
	(build_path): Remove the already deactivated custom implementation
	from the time before g_build_pathv() was added to GLib.

	* glib/glibmm/object.{cc,h}: Improve/fix a couple of comments.
	(ConstructParams::ConstructParams): Add G_GNUC_NULL_TERMINATED
	function attribute to make the compiler complain if the variadic
	argument list is not terminated by a NULL pointer.

	* glib/glibmm/ustring.{cc,h} (utf8_find_last_of): Avoid applying
	bitwise logical operators directly to (possibly signed) operands
	of char type.  In order to avoid relying on implementation-defined
	behavior, make sure that the operands are of unsigned integer type.
	(ustring::is_ascii): Likewise,
	(ustring_Iterator<T>::operator--): Likewise.
	(get_unichar_from_std_iterator): De-obfuscate this highly optimized
	piece of code, as the current stable release of GCC (4.1.2-pre on
	my system) generates better assembler output without the voodoo.

	svn path=/trunk/; revision=369

2007-01-20  Daniel Elstner  <daniel@src.gnome.org>

	Remove .cvsignore files.

	svn path=/trunk/; revision=367

2006-12-28  Murray Cumming  <murrayc@src.gnome.org>

	Increase version

2006-11-28  Daniel Elstner  <daniel@src.gnome.org>

	Allow an empty pair of parentheses in the innermost match. This fixes the

	* tools/pm/GtkDefs.pm (read_defs): Allow an empty pair of
	parentheses in the innermost match.  This fixes the problem of
	gmmproc choking on "()" in the documentation strings.  This would
	still break on unmatched parentheses, though.  Of course the
	parser should just skip over quoted strings, but I wasn't able
	to get that to work.
	* glib/src/glib_enums.defs (GNormalizeMode): Manually fix the
	improperly parsed value of G_NORMALIZE_NFD.  Fortunately this
	doesn't change anything since the "#error" token was interpreted
	as zero, which happens to be the right value.
	* glib/src/glib_functions.defs (g_iconv): Manually convert to
	a function definition, as it was improperly parsed as a method
	with a zero-length name (!) of object GIConv.  This fixes the
	annoying gmmproc warning about an allegedly unwrapped method.

2006-11-28  Murray Cumming  <murrayc@murrayc.com>

	Don't ifdef out PropertyProxy_Base when properties are disabled. It is

2006-11-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/propertyproxy_base.cc: Don't ifdef out
	PropertyProxy_Base when properties are disabled. It is needed
	for connect_property_changed().

2006-11-27  Daniel Elstner  <daniel@src.gnome.org>

	Ignore whitespace in front of an enum typedef. This fixes parsing of

	* tools/enum.pl (parse): Ignore whitespace in front of an enum
	typedef.  This fixes parsing of HildonTelephoneEditorFormat in
	hildon-libs.
	* tools/pm/Enum.pm (parse_values): Check whether the enumeration
	constants actually have a common module prefix before attempting
	to remove it.  This fixes the incorrect parsing of inconsistently
	named enums in hildon-libs.

2006-11-27  Daniel Elstner  <daniel@src.gnome.org>

	Break the loop if the length of the common prefix reaches zero. This fixes

	* tools/enum.pl (form_names): Break the loop if the length of the
	common prefix reaches zero.  This fixes the infinite loop when
	processing the inconsistently named enumeration constants of the
	Hildon libraries.

2006-11-22  Murray Cumming  <murrayc@murrayc.com>

	Updated from the libstdc++ site. Note that the original does not have an

2006-11-20  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/libstdc++.tag.xml: Updated from the libstdc++ site.
	Note that the original does not have an .xml extension. This is is
	lots bigger, but that should mean there is more documentation now.

2006-11-22  Oliver Nittka  <oly@nittka.com>

	When registering float parameters, use -G_MAXFLOAT instead of G_MINFLOAT.

2006-11-22  Oliver Nittka  <oly@nittka.com>

	* glib/src/value_basictypes.cc.m4: When registering float parameters,
	use -G_MAXFLOAT instead of G_MINFLOAT. Since we first implemented this,
	the glib documentation has been updated to make it cleare that this is
	the real minimum and G_MINFLOAT is the minimum positive value.
	Do the same for doubles too.

2006-11-10  Murray Cumming  <murrayc@murrayc.com>

	Add enum.pl to the dist, so that it is in tarballs. Someone saw it

2006-11-10  Murray Cumming  <murrayc@murrayc.com>

	* tools/Makefile.am: Add enum.pl to the dist, so that it is in
	tarballs. Someone saw it mentioned in the appendix, but could not
	find it in the tarball.

2006-11-10  Murray Cumming  <murrayc@murrayc.com>

	Add PREDEFINES for the optional API, so that the documentation shows the

2006-11-10  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/Doxyfile.in: Add PREDEFINES for the optional API,
	so that the documentation shows the regular API.

2006-11-10  Murray Cumming  <murrayc@src.gnome.org>

	Correct ChangeLog.

2006-11-10  Murray Cumming  <murrayc@murrayc.com>

	Added connect_property_changed(), as an alternative to use when the

2006-11-10  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/objectbase.cc:
	* glib/glibmm/objectbase.h: Added connect_property_changed(),
	as an alternative to use when the property proxies are not
	available because GLIBMM_PROPERTIES_ENABLED is not defined.
	* glib/glibmm/propertyproxy_base.cc:
	* glib/glibmm/propertyproxy_base.h: Move PropertyProxyConnectionNode
	into the header, so we can reuse it for connect_property_changed().

2006-10-04  Murray Cumming  <murrayc@murrayc.com>

	Add a silly line to avoid unused parameters when GLIBMM_EXCEPTION_ENABLED

2006-10-04  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/class.cc:
	* glib/src/iochannel.ccg:
	* glib/src/markup.ccg: Add a silly line to avoid unused parameters
	when GLIBMM_EXCEPTION_ENABLED is not set.
	* glib/glibmm/error.h: Do not use G_GNU_NO_RETURN on the version
	of throw_exception() that returns, to avoid a warning.

2006-10-01  Murray Cumming  <murrayc@murrayc.com>

	Upload to the new hoster instead of to sourceforge. Abstracted the host

2006-10-01  Murray Cumming  <murrayc@murrayc.com>

	* Makefile.am:
	* docs/Makefile.am:
	* docs/Makefile_web.am_fragment:
	* docs/images/Makefile.am:
	* docs/reference/Makefile.am:
	* docs/reference/README:
	* examples/Makefile.am: Upload to the new hoster instead of to sourceforge.
	Abstracted the host and path names into docs/Makefile_web.am_fragment to
	avoid duplication.

2006-09-28  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2006-09-28  Cedric Gustin  <cedric.gustin@gmail.com>

	Remove sarray from list of source and header files.

2006-09-28  Cedric Gustin  <cedric.gustin@gmail.com>

	* MSVC_Net2003/glibmm/glibmm.vcproj: Remove sarray from list of
	source and header files.

2006-09-26  Murray Cumming  <murrayc@murrayc.com>

	For win32, define GLIBMM_ARG_ENABLE_API_DEFAULT_SIGNAL_HANDLERS to 1,

2006-09-26  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmmconfig.h.in: For win32, define
	GLIBMM_ARG_ENABLE_API_DEFAULT_SIGNAL_HANDLERS to 1,
	instead of just defining it to nothing.
	* scripts/reduced.m4: In the AC_ARG_ENABLE() to
	define (or not) GLIBMM_ARG_ENABLE_API_DEFAULT_SIGNAL_HANDLERS,
	use api-default-signal-handlers as the first parameter
	instead of api-exceptions (a copy/paste error), though it does
	not seem to make any difference.
	Bug #357830.

2006-09-23  Jonathon Jongsma  <jonathon.jongsma@gmail.com>

	added new files that were missed from an earlier commit

2006-09-23  Jonathon Jongsma  <jonathon.jongsma@gmail.com>

	* glib/src/keyfile.ccg, glib/src/keyfile.hg: added new files that were
	missed from an earlier commit

2006-09-21  Murray Cumming  <murrayc@src.gnome.org>

	Increase version.

2006-09-19  Ralf Stephan  <ralf@ark.in-berlin.de>

	ustring(const ustring& src, size_type i, size_type n=npos) and

2006-09-19  Ralf Stephan  <ralf@ark.in-berlin.de>

	* glib/glibmm/ustring.h:
	ustring(const ustring& src, size_type i, size_type n=npos)
	and
	ustring(const char* src, size_type n) constructors:
	In the reference documentation, mention explicitly that
	n is the number of _UTF-8_ characters, rather than
	ASCII characters (bytes).

2006-09-19  Rob Page  <page.rob@gmail.com>

	Wraps GKeyFile (Bug #330535) Added include of keyfile.h Added keyfile.h

2006-02-20  Rob Page  <page.rob@gmail.com>

	Wraps GKeyFile (Bug #330535)
	* glib/glibmm.h: Added include of keyfile.h
	* glib/glibmm/Makefile.am: Added keyfile.h
	* glib/glibmm/containerhandle_shared.h: Added a TypeTraits
	specialization for converting between bool and gboolean*.
	* glib/src/Makefile_list_of_hg.am_fragment: Added keyfile.hg
	to files_general_hg.
	* glib/src/keyfile.hg: KeyFile header
	* glib/src/keyfile.ccg: KeyFile implementation
	* tools/m4/convert_glib.m4: Added a conversion for KeyFileFlags

2006-09-19  Johannes Schmid  <jhs@gnome.org>

	Change _IMPLEMENTS_INTERFACE to _IMPLEMENTS_INTERFACE_CC so we can have

	2006-09-14  Johannes Schmid <jhs@gnome.org>

	* tools/m4/class_shared.m4: Change _IMPLEMENTS_INTERFACE to
	_IMPLEMENTS_INTERFACE_CC so we can have more control over it,
	by generating the _IMPLEMENTS_INTERFACE_CC from the WrapParser.pm.
	* tools/m4/method.m4:
	* tools/m4/signal.m4:
	* tools/m4/vfunc.m4: Added optional parameters that result in
	#ifdefs around methods, signals, vfuncs, etc.
	* tools/pm/Output.pm: Addef ifdef() and endif().
	output_wrap_vfunc_h(), output_wrap_vfunc_cc(),
	output_wrap_default_signal_handler_h(),
	output_wrap_default_signal_handler_cc(),
	output_wrap_meth(),
	output_wrap_create(),
	output_wrap_sig_decl(): Support optional ifdefs around
	declarations and implementations, by calling ifdef() and endif(),
	or by passing the extra argument to the m4 macros.
	* tools/pm/WrapParser.pm: parse_and_build_output():
	Parse _IMPLEMENTS_INTERFACE, and call the new on_implements_interface()
	method, which uses the new output_implements_interface() method,
	so it can have an optional ifdef parameter.
	on_wrap_method(), on_wrap_create(), on_wrap_vfunc(), output_wrap_signal(),
	output_wrap_vfunc(): Handle the optional ifdef (with a parameter) option
	for the _WRAP*() macros.

	This adds support for disabling certain features by using the new
	ifdef argument for methods, vfuncs, signals and interfaces.

2006-09-19  Murray Cumming  <murrayc@src.gnome.org>

	Mark this as HEAD in ChangeLog to avoid confusion.

2006-09-10  Jonathon Jongsma  <jonathon.jongsma@gmail.com>

	rebuild docs when a .h files changes in glib/glibmm

2006-09-05  Jonathon Jongsma  <jonathon.jongsma@gmail.com>

	* docs/reference/Makefile.am: rebuild docs when a .h files changes in
	glib/glibmm
	* glib/glibmm/miscutils.cc:
	* glib/glibmm/miscutils.h: wrap g_get_user_data_dir(),
	g_get_user_config_dir(), and g_get_user_cache_dir()

2006-08-18  Cedric Gustin  <cedric.gustin@gmail.com>

	Updated for glibmm-2.12.

2006-08-18  Cedric Gustin  <cedric.gustin@gmail.com>

	* MSVC_Net2003/*.vcproj: Updated for glibmm-2.12.

2006-08-17  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2006-07-24  Murray Cumming  <murrayc@murrayc.com>

	2.11.3:

2006-04-25  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* glib/glibmmconfig.h.in:
	* scripts/reduced.m4: Added a --enable-api-default-signal-handlers option. This defines
	GLIBMM_DEFAULT_SIGNAL_HANDLERS_ENABLED, which is used to #ifdef default signal handlers.
	This saves on library code size (less code and API symbols) and application code size and
	loading time (less virtual methods, which must be imported and resolved at load time) and
	per-object memory size (smaller object sizes because of less virtual methods.)
	* tools/m4/class_interface.m4:
	* tools/m4/class_shared.m4: Put default signal handler code in #ifdefs.

2006-07-19  Murray Cumming  <murrayc@murrayc.com>

	Added a --enable-api-default-signal-handlers option. This defines

2006-04-25  Murray Cumming  <murrayc@murrayc.com>

	* configure.in:
	* glib/glibmmconfig.h.in:
	* scripts/reduced.m4: Added a --enable-api-default-signal-handlers option. This defines
	GLIBMM_DEFAULT_SIGNAL_HANDLERS_ENABLED, which is used to #ifdef default signal handlers.
	This saves on library code size (less code and API symbols) and application code size and
	loading time (less virtual methods, which must be imported and resolved at load time) and
	per-object memory size (smaller object sizes because of less virtual methods.)
	* tools/m4/class_interface.m4:
	* tools/m4/class_shared.m4: Put default signal handler code in #ifdefs.

2006-07-17  Murray Cumming  <murrayc@murrayc.com>

	2.11.2:

2006-07-17  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Reverted the previous patch slightly to unbreak glibmmconfig.h.

2006-07-16  Murray Cumming  <murrayc@murrayc.com>

	Quote GLIBMM_*_VERSION to avoid m4 warnings. Patch from Bug #347076 from

2006-07-16  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Quote GLIBMM_*_VERSION to avoid m4 warnings. Patch from
	Bug #347076 from Kevin McBride.
	* scripts/sun.m4: Quote GLIBMM_PROG_CXX_SUN to avoid an m4 warning.
	Patch from Bug #347077 from Kevin McBride.

2006-07-16  Jonathon Jongsma  <jonathon.jongsma@gmail.com>

	fix implementation of Glib::Date::set_time_current() so that it doesn't

2006-07-16  Jonathon Jongsma  <jonathon.jongsma@gmail.com>

	* glib/src/date.ccg: fix implementation of Glib::Date::set_time_current() so
	that it doesn't set the date to Dec 31, 1969.

2006-06-19  Murray Cumming  <murrayc@murrayc.com>

	Check whether DestroyNotify is defined, so we can warn about including

2006-06-19  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/object.h: Check whether DestroyNotify is defined, so we can warn about
	including X11/Xlib.h before this header, which will break things.
	Bug #316726 from Mert Tugcu and Javeed Shaikh.

2006-06-09  Cedric Gustin  <cedric.gustin@gmail.com>

	Inline the set_property and get_property methods. This is required by

2006-06-09  Cedric Gustin  <cedric.gustin@gmail.com>

	* glib/glibmm/objectbase.h : Inline the set_property and
	get_property methods. This is required by mingw32-gcc as
	ObjectBase is explicitly dllexported.

2006-06-05  Murray Cumming  <murrayc@murrayc.com>

	When using --enable-api-exception=no, only try to get the Glib::Error when

2006-06-05  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/convert.ccg: When using --enable-api-exception=no, only try to get the Glib::Error
	when the GError is not null.

2006-05-18  Murray Cumming  <murrayc@murrayc.com>

	_METHOD(): When using errthrow, actually print the function call even if

2006-05-18  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/method.m4: _METHOD(): When using errthrow, actually print the function call even if
	the return type is 0.

2006-05-16  Murray Cumming  <murrayc@murrayc.com>

	_METHOD(), _STATIC_METHOD(): Remove spaces before dnl statements, to avoid

2006-05-16  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/method.m4:  _METHOD(), _STATIC_METHOD(): Remove spaces before dnl statements,
	to avoid unwanted indentation in .cc files.

2006-05-16  Murray Cumming  <murrayc@murrayc.com>

	_CONVERT(): If the return type is void, use the unconverted statement, not

2006-05-16  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/convert_base.m4: _CONVERT(): If the return type is void, use the unconverted
	statement, not no statement. This prevents some void methods from being totally empty.
	This was a (very bad) regression introduced by the optional API changed.
	Bug #341895 from Philip Langdale.
	* tools/m4/method.m4: _METHOD(), _STATIC_METHOD(): Attempt to remove unnecessary newlines,
	though some indenting spaces slipped in instead. Must fix that.

2006-05-14  Murray Cumming  <murrayc@murrayc.com>

	Restored the init(GValue*) method that was lost when merging changes from

2006-05-14  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/value.cc:
	* glib/glibmm/value.h: Restored the init(GValue*) method that was lost when
	merging changes from the glibmm-2-10 branch.

2006-05-12  Murray Cumming  <murrayc@src.gnome.org>

	Merged changes from glibmm-2-10 branch.

2006-05-09  Murray Cumming  <murrayc@murrayc.com>

	Added init(const GValue*), so that we can copy GValue instances of any

2006-05-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/value.cc:
	* glib/glibmm/value.h: Added init(const GValue*), so that we can copy GValue instances
	of any type at runtime. Needed by libgdamm, which returns const GValue* instances.

2006-05-09  Murray Cumming  <murrayc@src.gnome.org>

	Mark the branch in the ChangeLog

2006-04-14  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2006-04-14  Murray Cumming  <murrayc@src.gnome.org>

	Fix typo in ChangeLog

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	Remove this file because it is not installed and does not seem to be used.

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/signalproxy_custom.m4: Remove this file because it is not installed and
	does not seem to be used.

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	Mark the (private) signal info callback functions as static, to save on

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/signal.m4: Mark the (private) signal info callback functions as
	static, to save on code size.

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	Parse a new optional constversion parameter for _WRAP_METHOD(), to save on

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/WrapParser.pm: Parse a new optional constversion parameter for
	_WRAP_METHOD(), to save on code size by just calling the non-const overload
	instead of generating almost identical code.
	* tools/m4/method.m4: _METHOD(): Take extra parameters for use when constversion is used.
	* tools/pm/Output.pm: Send the extra parameters to _METHOD().
	* docs/internal/using_gmmproc.txt: Documented the new constversion option.

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	Mark the (private) signal info callback functions as static, to save on

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/signal.m4: Mark the (private) signal info callback functions as
	static, to save on code size.

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	Mark private functions as static, to stop them being exported in the API,

2006-04-12  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/main.cc:
	* glib/glibmm/objectbase.cc:
	* glib/glibmm/property.cc:
	* glib/glibmm/ustring.cc:
	* glib/glibmm/value_custom.cc:
	* glib/src/spawn.ccg: Mark private functions as
	static, to stop them being exported in the API, to reduce the
	library code size slightly.
	* tools/m4/signal.m4: Make generated callback functions static, for
	the same reasons.

2006-04-07  Cedric Gustin  <cedric.gustin@gmail.com>

	Updated for Mingw-4.1.

2006-04-07  Cedric Gustin  <cedric.gustin@gmail.com>

	* README.win32: Updated for Mingw-4.1.

2006-04-06  Cedric Gustin  <cedric.gustin@gmail.com>

	Embed the manifest file into executables in the case of the Debug target.

2006-04-06  Cedric Gustin  <cedric.gustin@gmail.com>

	* MSVC_Net2003/*.vcproj: Embed the manifest file into executables
	in the case of the Debug target.
	* README.win32: Fixed a few typos.
	* build_shared/Makefile_build.am_fragment: Add -DGLIBMM_BUILD to
	the extra_defines compiler flags (switch between
	dllexport/dllimport on win32).
	* glib/glibmmconfig.h.in: Define GLIBMM_DLL when building with
	mingw32/cygwin. This makes the GLIBMM_API tag (and GTKMM_API for
	gtkmm) active with these two platforms, as required by bug
	#309030.
	* glib/glibmm/object.h, glib/glibmm/objectbase.h : Tag the Object
	and ObjectBase classes with GLIBMM_API to make Visual Studio happy.

2006-03-31  Murray Cumming  <murrayc@src.gnome.org>

	file maemo_ignore_doxygen_tags.patch was initially added on branch glibmm-2-8.

2006-03-08  Murray Cumming  <murrayc@murrayc.com>

	looklookup_documentation(): Put the @deprecated text immediately after the

2006-02-25  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/DocsParser.pm: looklookup_documentation(): Put the
	@deprecated text immediately after the main description, before
	the parameters, so that Doxygen actually uses it.

2006-02-25  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/DocsParser.pm: looklookup_documentation(): Accept an
	extra deprecated_documentation parameter, to be appended to the
	Doxygen documentation.
	* tools/pm/Output.pm: output_wrap_meth(): Put the documentation
	inside the deprecation #ifdef, for neatness.
	* tools/pm/WrapParser.pm: on_wrap_method(): Read an optional string
	after the optional deprecated parameter, used to say why the
	method is deprecated, in case it was not deprecated by the C API,
	in which case it would already have documentation for this.

2006-03-08  Murray Cumming  <murrayc@src.gnome.org>

	Merge in changes from glibmm 2.8 branch. These are documentation and build fixes, allowed during the hard code freeze.

2006-02-27  Cedric Gustin  <cedric.gustin@gmail.com>

	Tag npos with GLIBMM_API, in order to dllexport it on win32. Bug #332438.

	2006-02-27  Cedric Gustin <cedric.gustin@gmail.com>

	* glib/glibmm/ustring.h: Tag npos with GLIBMM_API, in order to
	dllexport it on win32. Bug #332438.

2006-02-07  Rob Page  <page.rob@gmail.com>

	fix a typo in the documenation for uppercase()

2006-02-07  Rob Page  <page.rob@gmail.com>

	* glib/glibmm/ustring.h: fix a typo in the documenation for uppercase()

2006-01-29  Murray Cumming  <murrayc@src.gnome.org>

	Increase version for release.

2006-01-28  Murray Cumming  <murrayc@murrayc.com>

	add_entry_with_wrapper(): Copy the CppOptionEntry into the map _after_

2006-01-28  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optiongroup.ccg: add_entry_with_wrapper(): Copy the
	CppOptionEntry into the map _after_ setting entry_ so that we
	really delete it in release_c_arg(), to avoid a memory leak.

2006-01-28  Rob Page  <rob@gmail.com>

	Fix the link to the Main page. Bug #328299.

	2006-01-28  Rob Page <rob@gmail.com>

	* docs/reference/glibmm_header.html_fragment: Fix the link
	to the Main page. Bug #328299.

2006-01-27  Murray Cumming  <murrayc@murrayc.com>

	Constructor: Avoid memory leak caused by double instantiation of gobject_.

2006-01-27  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.ccg: Constructor: Avoid memory
	leak caused by double instantiation of gobject_.

2005-12-16  Murray Cumming  <murrayc@murrayc.com>

	Hide some internal stuff from Doxygen. Add/Improve the Doxygen

	2005-12-16  Murray Cumming <murrayc@murrayc.com>

	* glib/glibmm/object.h:
	* glib/glibmm/objectbase.h: Hide some internal stuff
	from Doxygen. Add/Improve the Doxygen documentation.
	* glib/src/convert.hg: Correct the declaration of
	filename_display_name() to match the implementation.
	Previously this would have been unusable due to a linker
	error.

2005-11-30  Murray Cumming  <murrayc@murrayc.com>

	Define the @newin aliases, as in gtkmm. Convert Since: in gtk-doc text to

	2005-11-30  Murray Cumming <murrayc@murrayc.com>

	* docs/reference/Doxyfile.in: Define the @newin aliases,
	as in gtkmm.
	* tools/pm/DocsParser.pm: Convert Since: in gtk-doc
	text to @newin for our doxygen docs.

2005-11-29  Murray Cumming  <murrayc.com>

	Added --enable-use-deprecations, defaulting to no (do not check for them),

	2005-11-29  Murray Cumming <murrayc.com>

	* build_shared/Makefile_build.am_fragment:
	* configure.in: Added --enable-use-deprecations,
	defaulting to no (do not check for them), so that
	the tarball will still build when newer versions
	of glib deprecate some API.
	* examples/Makefile.am_fragment: Use the
	deprecation, if wanted.

2005-11-29  Murray Cumming  <murrayc@murrayc.com>

	Added --enable-deprecated-api option. When set to disabled, it does not

	2005-11-29  Murray Cumming <murrayc@murrayc.com>

	* build_shared/Makefile_build.am_fragment:
	* configure.in: Added --enable-deprecated-api
	option. When set to disabled, it does not build
	deprecated API. This reduces the size of the library,
	and might be useful for embedded devices.
	* glib/src/date.ccg:
	* glib/src/date.hg: Use _DEPRECATE_IFDEF_START/END
	around the deprecated set_time() method.

2005-11-29  Murray Cumming  <murrayc@murrayc.com>

	Add _DEPRECATE_IFDEF_START and _DEPRECATE_IFDEF_END macros, to #ifdef-out

	2005-11-29  Murray Cumming <murrayc@murrayc.com>

	* tools/m4/base.m4: Add
	_DEPRECATE_IFDEF_START and _DEPRECATE_IFDEF_END
	macros, to #ifdef-out generated methods.
	Added _DEPRECATE_IFDEF_CLASS_START and
	_DEPRECATE_IFDEF_CLASS_END for whole classes.
	Put _DEPRECATE_IFDEF_CLASS* around all generated
	code. It does nothing if the class is not deprecated.
	* tools/m4/class_gtkobject.m4: Add _DEPRECATED macro,
	used to mark a class as deprecated.
	* tools/m4/method.m4: Take an extra parameter, to
	optionally mark the method as deprecated, to add
	#ifdefs around the code, with
	_DEPRECATE_IFDEF_START/END
	* tools/pm/Output.pm: _DEPRECATE_IFDEF_START/END
	around the declarations of deprecated methods.
	* tools/pm/WrapParser.pm: Check for an optional
	deprecated parameter to _WRAP_METHOD().
	* tools/m4/member.m4: Allow optional deprecated
	method for _MEMBER_GET/SET*() to ifdef the code
	out.
	* tools/generate_wrap_init.pl.in: Put an #ifdef
	around use of deprecated classes.

2005-11-23  Murray Cumming  <murrayc@murrayc.com>

	Depend on glib 2.9, which has new API.

	2005-11-23  Murray Cumming <murrayc@murrayc.com>

	* configure.in: Depend on glib 2.9, which
	has new API.
	* glib/src/date.ccg:
	* glib/src/date.hg: Wrap glib_date_set_time_t()
	and glib_date_set_time_val(). Deprecate
	set_time(GTime) in favour of the new method
	overloads. Added set_time_current(), wrapping the
	case that the time_t is 0.

2005-11-23  Murray Cumming  <murrayc@murrayc.com>

	2.8.2:

	2005-11-23  Murray Cumming <murrayc@murrayc.com>

	* glib/glibmm/containers.h: Do not use g_assert() in
	a header, because g++ sometimes warns that it has
	no effect.

2005-10-29  Murray Cumming  <murrayc@murrayc.com>

	AL_PROG_GNU_MAKE(): Use -make instead of , which apparently fixes a build

	2005-10-29  Murray Cumming <murrayc@murrayc.com>

	* scripts/macros.m4: AL_PROG_GNU_MAKE():
	Use -make instead of , which
	apparently fixes a build problem on some
	Solaris systems. Thanks to Mark Rouchal in
	bug #307480.

2005-10-19  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2005-10-19  Murray Cumming  <murrayc@murrayc.com>

	Check for glib 2.8. Bug #317913.

2005-10-19  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Check for glib 2.8. Bug #317913.

2005-09-06  Murray Cumming  <murrayc@src.gnome.org>

	2.8.0:

	Updated NEWS and increased version to 2.8.0.

2005-08-17  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2005-08-17  Murray Cumming  <murrayc@murrayc.com>

	Regenerated with docextract_to_xml.py Regenerated with enums.pl

2005-08-17  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/glib_docs.xml: Regenerated with docextract_to_xml.py
	* glib/src/glib_enums.defs: Regenerated with enums.pl
	* glib/src/glib_functions.defs: Regenerated with h2defs.py

2005-07-31  Murray Cumming  <murrayc@src.gnome.org>

	Stuff I forgot to commit.

2005-06-09  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2005-06-08  Murray Cumming  <murrayc@src.gnome.org>

	2005-06-08  Murray Cumming <murrayc@murrayc.com

	* glib/glibmm/propertyproxy.h:
	PropertyProxy_ReadOnly<>::get_value(),
	PropertyProxy_WriteOnly<>::set_value(): Add implementations
	instead of casting to unrelated PropertyProxy() and calling it
	there. The AIX compiler did not like this hack. Bug #301610

2005-06-07  Cedric Gustin  <cedric.gustin@swing.be>

	In get_home_dir, return an empty string when HOME is not defined (Win9x).

	2005-06-07  Cedric Gustin <cedric.gustin@swing.be>

	* glib/glibmm/miscutils.cc: In get_home_dir, return an empty
	string when HOME is not defined (Win9x). Bug #306310 from Michael
	Hofmann.
	* glib/glibmm/miscutils.h: Updated docstring for the get_home_dir
	method.

2005-04-27  Murray Cumming  <murrayc@murrayc.com>

	Inherit signal handler objects from sigc::trackable. This is necessary

	2005-04-27  Murray Cumming <murrayc@murrayc.com>

	* examples/child_watch/main.cc:
	* examples/thread/dispatcher.cc:
	* examples/thread/thread.cc:
	* glib/glibmm/dispatcher.cc: Inherit signal handler objects from
	sigc::trackable. This is necessary with some libsigc++ patches,
	though not currently necessary with regular libsigc++.

2005-04-22  Murray Cumming  <murrayc@murrayc.com>

	Regenerate with enums.pl Regenerate with h2defs.py This adds the

2005-04-22  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/gmodule_enums.defs: Regenerate with enums.pl
	* glib/src/gmodule_functions.defs: Regenerate with h2defs.py
	This adds the BIND_LOCAL enum value. Bug #172748 from
	Phillip Neiswanger.

2005-04-07  Murray Cumming  <murrayc@murrayc.com>

	output_wrap_property(): Do not add the const read-only method override if

2005-04-05  Murray Cumming  <murrayc@murrayc.com>

	* tool/pm/Output.pm: output_wrap_property(): Do not add the
	const read-only method override if the property can not be read. Be
	careful because this removes a little API from generated code. You
	should hand-code the wrongly-generated methods and mark them as
	deprecated.
	* glib/glibmm/refptr.h: Added cast_const<>, like the existing
	cast_dynamic<> and cast_static.

2005-04-06  Murray Cumming  <murrayc@murrayc.com>

	output_wrap_property(): Do not add the const read-only method override if

2005-04-05  Murray Cumming  <murrayc@murrayc.com>

	* tool/pm/Output.pm: output_wrap_property(): Do not add the
	const read-only method override if the property can not be read. Be
	careful because this removes a little API from generated code. You
	should hand-code the wrongly-generated methods and mark them as
	deprecated.

2005-03-31  Murray Cumming  <murrayc@murrayc.com>

	Updated with h2defs.py.

	2005-03-31  Murray Cumming <murrayc@murrayc.com>

	* glib/src/glib_functions.defs: Updated with
	h2defs.py.

2005-03-14  Yair Hershkovitz  <yairhr@gmail.com>

	Added MainContext::signal_child_watch() Added child_watch/ example

	2005-03-13  Yair Hershkovitz <yairhr@gmail.com>

	* glib/glibmm/main.h,
	glib/glibmm/main.cc: Added MainContext::signal_child_watch()
	* examples/: Added child_watch/ example

2005-03-14  Murray Cumming  <murrayc@src.gnome.org>

	Mark HEAD in the ChangeLog

2005-03-09  Cedric Gustin  <cedric.gustin@swing.be>

	Add blank.cpp to EXTRA_DIST. Remove sarray.cc from the list of source

	2005-03-09  Cedric Gustin <cedric.gustin@swing.be>

	* MSVC_Net2003/Makefile.am: Add blank.cpp to EXTRA_DIST.
	* MSVC_Net2003/glibmm/glibmm.vcproj: Remove sarray.cc from the
	list of source files.
	* MSVC_Net2003/examples/*/*.vcproj,
	MSVC_Net2003/tests/glibmm_value/glibmmvalue.vcproj: Change name of
	PDB file to $(OutDir)/$(TargetName).pdb.

2005-03-07  Murray Cumming  <murrayc@murrayc.com>

	2.6.1:

2005-03-07  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/interface.cc: Disable the new check for pre-existing
	interface implementations, because it checks all base gtypes and
	not just the current gtype. Bug #169442 by Bryan Forbes.

2005-03-06  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2005-02-23  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2005-02-18  Murray Cumming  <murrayc@murrayc.com>

	Interface_Class:add_interface(), used by add_interface() methods of

2005-02-18  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/interface.cc: Interface_Class:add_interface(), used by
	add_interface() methods of Interfaces: Do not add interfaces that
	have been added before, to avoid the warning from glib. This
	allows application code to be simpler.

2005-02-18  Murray Cumming  <murrayc@murrayc.com>

	Add the documentation to the const property() accessor as well as the

2005-02-18  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/Output.pm: Add the documentation to the const property()
	accessor as well as the non-const one.

2005-02-13  Murray Cumming  <murrayc@murrayc.com>

	Use g_param_spec_get_blurb() to output the documentation for the

2005-02-13  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_extra_defs.cc: Use
	g_param_spec_get_blurb() to output the documentation for the
	properties in the .defs file.
	* tools/m4/property.m4: Take an extra docs argument, and put it in the
	doxygen docs.
	* tools/pm/Output.pm: Add the extra docs argument when calling the
	property m4 macro.
	* tools/pm/Property.pm: Read in the new docs part of the .defs, and
	add a period at the end if neccessary.

2005-02-13  Murray Cumming  <murrayc@murrayc.com>

	Use g_param_spec_get_blurb() to output the documentation for the

2005-02-13  Murray Cumming  <murrayc@murrayc.com>

	* tools/extra_defs_gen/generate_extra_defs.cc: Use
	g_param_spec_get_blurb() to output the documentation for the
	properties in the .defs file.

2005-02-01  Murray Cumming  <murrayc@murrayc.com>

	Removed the #ifdef for AIX, because sigc::bind now works on AIX.

2005-02-01  Murray Cumming  <murrayc@murrayc.com>

	* examples/threadpool.cc, dispatcher.cc, dispatcher2.cc: Removed the
	#ifdef for AIX, because sigc::bind now works on AIX.

2005-01-27  Cedric Gustin  <cedric.gustin@swing.be>

	Reverted to 2.4 for the library version number.

	2005-01-27  Cedric Gustin <cedric.gustin@swing.be>

	* MSVC_Net2003/glibmm/glibmm.rc.in: Reverted to 2.4 for the
	library version number.

2005-01-26  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2005-01-26  Cedric Gustin  <cedric.gustin@swing.be>

	Reverted to 2.4 for the library version number.

	2005-01-26  Cedric Gustin <cedric.gustin@swing.be>

	* MSVC_Net2003/glibmm/glibmm.vcproj: Reverted to 2.4 for the
	library version number.

2005-01-24  Cedric Gustin  <cedric.gustin@swing.be>

	Added MSVC_Net2003 directory. Added mkfifo #define (for mingw32). Added

	2005-01-24  Cedric Gustin <cedric.gustin@swing.be>

	* Makefile.am, configure.in: Added MSVC_Net2003 directory.
	* config.h.in: Added mkfifo #define (for mingw32).
	* glib/glibmmconfig.h.in: Added new #define's to MSVC section.
	* examples/iochannel_stream/Makefile.am: Do not build on win32
	with mingw32 (mkfifo not available).
	* scripts/cxx_std.m4: Fixed typo in AC_DEFINE macros.
	* build_shared/Makefile_build.am_fragment: Removed
	$(sublib_name)_COMPILATION variable (is useless now on
	cygwin/mingw as all symbols are dll exported).
	* MSVC_Net2003/*: Initial commit imported from glibmm-2-4 branch.
	* MSVC_Net2003/glibmm/Makefile.am: Rewrote rule for local copy of
	glibmmconfig.h (required for 'make distcheck').

2005-01-21  Murray Cumming  <murrayc@murrayc.com>

	Added new compiler tests to see whether extern C functions are put in the

2005-01-21  Murray Cumming  <murrayc@murrayc.com>

	* configure.in, scripts/cxx.m4, glibmm/glibmmconfig.h.in: Added new
	compiler tests to see whether extern C functions are put in the
	global namespace, even when we use extern C inside a namespace
	declaration. The AIX xlC compiler does this, but allows us to
	redeclare the namespace inside the extern C block.
	* glib/glibmm/property.h: Use the new
	#ifdef GLIBMM_MUST_REDECLARE_NAMESPACES_INSIDE_EXTERNC and redeclare
	the namespace when necessary.
	* examples/thread/dispatcher.cc, dispatcher2.cc: Use sigc::bind<1>
	instead of just sigc::bind<> because the AIX xlC compiler needs the
	extra hint. However, the linker then fails, so the use of sigc::bind
	is ifdefed out for _AIX. See the comments in the code

2005-01-21  Murray Cumming  <murrayc@localhost.localdomain>

	Added new compiler tests. 1. To see whether it allows use of non extern C

2005-01-21  Murray Cumming  <murrayc@localhost.localdomain>

	* configure.in, scripts/cxx.m4, glibmm/glibmmconfig.h.in: Added new
	compiler tests.
	1. To see whether it allows use of non extern C functions
	as extern C callbacks, because the Tru64 compiler does not
	allow this, when using strict_ansi. We do not actually use this yet.
	2. To see whether it allows us to define a template that uses an
	undefined type, even if we do not use it before defining the type.
	Tru64 does not allow this. That's probably correct.
	* glib/glibmm/container.h: #ifdef out a dynamic_cast that Tru64
	does not allow, and which I can not think of a better place to put.
	See the comment in the code.
	* glib/glibmm/containerhandler_helpers.h: When the compiler does not
	alllow the GObject and GtkObject (dynamic_cast of) specializations
	here, then put them in glib/glibmm/object.h and
	gtkmm/gtk/src/object.hg instead.- needed by Tru64 compiler.
	* glib/glibmm/value.h, value_custom.[h|cc]: Conditionally moved
	the RefPtr Value specialization into object.h, as above.
	* glib/src/ optiongroup.ccg, spawn.ccg, thread.ccg: Make C callacks
	separate extern C.
	* glib/src/optiongroup.ccg: Do not use the StringArrayHandle,
	because the Tru64 compiler has problems with it - see comments
	in code.
	* glib/src/optionentry.hg: Remove the include of value.h, because
	it is not used and it causes a Tru64 compile error in
	optioncontext.cc because its templates are included before the
	types that the template uses.

2005-01-19  Murray Cumming  <murrayc@murrayc.com>

	* configure.in, scripts/cxx.m4, glibmm/glibmmconfig.h.in: Added a
	compiler test, because the IRIX MipsPro compiler does not allow the
	inline initialization of ustring::npos.
	* glib/glibmm/ustring.[h|cc]: When the compiler does not support the
	inline initialization of npos, initialize it in the .cc file.
	Declare partial specializations of the SequenceString inner class
	inside the class - needed by IRIX MipsPro compiler.

2005-01-21  Murray Cumming  <murrayc@src.gnome.org>

	Temporarily reverted some stuff. I will recommit some of it.

2005-01-21  Murray Cumming  <murrayc@localhost.localdomain>

	#include glibmmconfig.h so that

2005-01-21  Murray Cumming  <murrayc@localhost.localdomain>

	* glib/glibmm/class.h: #include glibmmconfig.h so that
	GLIBMM_CAN_ASSIGN_NON_EXTERN_C_FUNCTIONS_TO_EXTERN_C_CALLBACKS can
	be defined.
	* glib/glibmm/class.cc: Use ifdef instead of ifndef where that is
	what I meant. Fixes the build.

2005-01-20  Murray Cumming  <murrayc@src.gnome.org>

	Fix the build

2005-01-20  Murray Cumming  <murrayc@src.gnome.org>

	I mean Tru64, not MipsPro

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	More use of exern C, with an intermediate callback, to satisfy the IRIX

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/class.h: More use of exern C, with an intermediate
	callback, to satisfy the IRIX MipsPro compiler.
	* glib/glibmm/container.h: #ifdef out a dynamic_cast that MipsPro
	does not allow, and which I can not think of a better place to put.
	See the comment in the code.

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	Custom boxed types, more #ifdef ABI-changing to add intermediate extern-C

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/value.h, value_custom.[h|cc]: Custom boxed types, more
	#ifdef ABI-changing to add intermediate extern-C callback function,
	for the IRIX MipsPro compiler. This might not actually work at runtime,
	but if it does not then lots of funtionality should still work.
	Conditionally moved the RefPtr Value specialization into object.h, as
	before.

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	Custom boxed types, more #ifdef ABI-changing to add intermediate extern-C

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/value.h, value_custom.[h|cc]: Custom boxed types, more
	#ifdef ABI-changing to add intermediate extern-C callback function,
	for the IRIX MipsPro compiler. This might not actually work at runtime,
	but if it does not then lots of funtionality should still work.
	Conditionally moved the RefPtr Value specialization into object.h, as
	before.

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	Custom boxed types, more #ifdef ABI-changing to add intermediate extern-C

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/value.h, value_custom.[h|cc]: Custom boxed types, more
	#ifdef ABI-changing to add intermediate extern-C callback function,
	for the IRIX MipsPro compiler. This might not actually work at runtime,
	but if it does not then lots of funtionality should still work.
	Conditionally moved the RefPtr Value specialization into object.h, as
	before.

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	Added a compiler test, to see whether it allows use of non extern C

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	* configure.in, scripts/cxx.m4, glibmm/glibmmconfig.h.in: Added a
	compiler test, to see whether it allows use of non extern C functions
	as extern C callbacks, because the IRIX MipsPro compiler does not
	allow this, but we can not completely fix that without changing ABI,
	which we can not do on the existing platforms.
	* glib/src/thread.[hg|ccg]: On (new) platforms that do not allow
	non-exern-C C callbacks, store the destruction callback in a base
	class and call it from an intermediate extern-C callback.

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	Added a compiler test, to see whether it allows use of non extern C

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	* configure.in, scripts/cxx.m4, glibmm/glibmmconfig.h.in: Added a
	compiler test, to see whether it allows use of non extern C functions
	as extern C callbacks, because the IRIX MipsPro compiler does not
	allow this, but we can not completely fix that without changing ABI,
	which we can not do on the existing platforms.
	* glib/src/thread.[hg|ccg]: On (new) platforms that do not allow
	non-exern-C C callbacks, store the destruction callback in a base
	class and call it from an intermediate extern-C callback.

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	Make C callacks separate extern C functions instead of static member

2005-01-20  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/iochannel.[hg|ccg], markup.[hg|ccg], optiongroup.ccg,
	spawn.ccg, thread.ccg:
	Make C callacks
	separate extern C functions instead of static member functions, to
	satisfy the IRIX MipsPro compiler. Unfortunately this means that
	we export some private API.
	* glib/src/optionentry.hg: Remove the include of value.h, because
	it is not used and it causes a MipsPro compile error in
	optioncontext.cc because its templates are included before the
	types that the template uses.
	* glib/src/optiongroup.ccg: Do not use the StringArrayHandle,
	because the MipsPro compiler has problems with it - see comments
	in code.
	* configure.in, scripts/cxx.m4, glibmm/glibmmconfig.h.in: Added a
	compiler test, because the IRIX MipsPro compiler does not allow us
	to define a template that uses an undefined type, even if we do not
	use it before defining the type. That's probably correct.
	* glib/glibmm/containerhandler_helpers.h: When the compiler does not
	alllow the GObject and GtkObject (dynamic_cast of) specializations
	here, then put them in glib/glibmm/object.h and
	gtkmm/gtk/src/object.hg instead.- needed by MipsPro (IRIX) compiler..

2005-01-19  Murray Cumming  <murrayc@murrayc.com>

	Added a compiler test, because the IRIX MipsPro compiler does not allow

2005-01-19  Murray Cumming  <murrayc@murrayc.com>

	* configure.in, scripts/cxx.m4, glibmm/glibmmconfig.h.in: Added a
	compiler test, because the IRIX MipsPro compiler does not allow the
	inline initialization of ustring::npos.
	* glib/glibmm/ustring.[h|cc]: When the compiler does not support the
	inline initialization of npos, initialize it in the .cc file.
	Declare partial specializatoins of the SequenceString inner class
	inside the class - needed by MipsPro (IRIX) compiler..

2005-01-18  Murray Cumming  <murrayc@murrayc.com>

	CppOptionEntry::convert_c_to_cpp(): Copy the strings to the vector in a

2005-01-18  Murray Cumming  <murrayc@murrayc.com>

	* glibmm/src/optiongrup.[hg|ccg]: CppOptionEntry::convert_c_to_cpp():
	Copy the strings to the vector in a loop, instead of using the
	ArrayHandle constructor, because that does not seem to work with the
	SUN Forte compiler.

2005-01-17  Murray Cumming  <murrayc@src.gnome.org>

	Updated NEWS

2005-01-10  Murray Cumming  <murrayc@murrayc.com>

	2.5.4:

2005-01-10  Murray Cumming  <murrayc@murrayc.com>

	* glibmm/src/optiongroup.[hg|ccg]: Added a castitem constructor
	that always takes ownership, needed by Gtk::Main. Added the new
	FLAG_REVERSE flag value. Added reference documentation.

2005-01-09  Murray Cumming  <murrayc@murrayc.com>

	2.5.3:

2005-01-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/misc_utils.[h|cc]: Added setenv() and unsetenv(),
	wrapping new functions added in glib 2.4.
	* glib/src/convert.[hg|ccg]: Added filename_display_name() and
	filename_display_basename().

2005-01-09  Murray Cumming  <murrayc@murrayc.com>

	Copy constructor: Copy the short name form the src, not from itself. Bug

2005-01-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.ccg: Copy constructor: Copy the short name
	form the src, not from itself. Bug #16331 from Daniel Holbach.

2005-01-09  Murray Cumming  <murrayc@murrayc.com>

	Add add_entry(entry, bool&), to wrap use of G_OPTION_ARG_NONE. Bug #163325

2005-01-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.[hg|cc]: Add add_entry(entry, bool&), to wrap
	use of G_OPTION_ARG_NONE. Bug #163325 from Daniel Holbach.
	* examples/options/main.cc: Use the new add_entry() overload.

2005-01-06  Benoît Dejean  <TazForEver@dlfp.org>

	Don't export private API. Closes #163031.

2005-01-06  Benoît Dejean  <TazForEver@dlfp.org>

	* glib/glibmm/dispatcher.cc:
	* glib/glibmm/error.cc:
	* glib/glibmm/exceptionhandler.cc:
	* glib/glibmm/main.cc:
	* glib/glibmm/threadpool.cc:
	* glib/glibmm/ustring.cc:
	* glib/glibmm/wrap.cc: Don't export private API.
	Closes #163031.

2005-01-05  Chris Vine  <chris@cvine.freeserve.co.uk>

	Provide a means of obtaining Glib::IOChannel error information from the

	2005-01-04  Chris Vine <chris@cvine.freeserve.co.uk>

	* examples/iochannel_stream/: Provide a means of obtaining
	Glib::IOChannel error information from the streambuffer.  Remove
	the code conversion option from the fdstream/fdstreambuf
	constructors and add comments in fdstream.h about code conversion
	and other matters.  Add a detach() function and a destructor to
	fdstreambuf.  Correct an error in fdstreambuf::xsgetn().  Include
	missing <string> header file in main.cc.

2004-12-19  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	Adapted and added iochannel_stream example from Chris Vine in bug #138259.

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	* examples/: Adapted and added iochannel_stream example from
	Chris Vine in bug #138259.

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	Added glib_docs.xml, generated with docsextract_to_xml.py and

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/: Added glib_docs.xml, generated with docsextract_to_xml.py
	and glib_docs_override.xml, to generate some API reference from
	the C docs.
	* glib/src/Makefile.am: Mention the new files.

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	Added a copy of the libstdc++ doxygen tags file, but it still does not

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/: Added a copy of the libstdc++ doxygen tags file,
	but it still does not seem to work, for example with std::vector<>
	and std::string.

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	Use the libstdc++ TAG files, so that references to std:: classes take

	2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/Doxyfile.in: Use the libstdc++ TAG files, so that
	references to std:: classes take people to their docs.
	* glib/src/: Added glib_docs.xml and glib_docs_override.xml, and
	mentioned them in Makefile.am.

2004-12-18  Murray Cumming  <murrayc@murrayc.com>

	Deal with some doxygen warnings about undocumented parameters. Added

2004-12-19  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/date.hg, glib/glibmm/main.h,
	glib/glibmm/signalproxy_connectionnode.h: Deal with some doxygen
	warnings about undocumented parameters.
	* glib/glibmm/ustring.h: Added documentation for the size() and
	bytes() methods.

2004-12-12  Cedric Gustin  <gustin@src.gnome.org>

	file glibmm-2.4.rc.in was initially added on branch glibmm-2-4.

2004-11-22  Murray Cumming  <murrayc@murrayc.com>

	Removed OptionEntry enum and set_arg_data(), because they are not needed

2004-11-21  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.[hg|ccg]: Removed OptionEntry enum and
	set_arg_data(), because they are not needed any more.

2004-11-01  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2004-11-01  Murray Cumming  <murrayc@murrayc.com>

	Added add_entry() for vector<ustring> and add_entry_filename() for

2004-11-01  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optiongroup.[hg|ccg]: Added add_entry() for vector<ustring>
	and add_entry_filename() for std::string and vector<std::string>.
	* examples/options/main.cc: Test these new methods.

2004-10-30  Murray Cumming  <murrayc@murrayc.com>

	Added gobj_give_ownership(). add_group(), set_main_group(): Use

2004-10-30  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optiongroup.[hg|ccg]: Added gobj_give_ownership().
	* glib/src/optioncontext.[hg|ccg]: add_group(), set_main_group(): Use
	gobj_give_ownership() because GOptionContext deletes the GOptionGroups
	that we give it.

2004-10-26  Murray Cumming  <murrayc@src.gnome.org>

	Added a comment.

2004-10-26  Murray Cumming  <murrayc@murrayc.com>

	Remove accessors for arg and arg_data. add_entry(): Remove arg_type

2004-10-26  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optionentry.hg: Remove accessors for arg and arg_data.
	* glib/src/optiongroup.[hg|ccg]: add_entry(): Remove arg_type parameter
	and instead add overrides which take specific C++ value types.
	Add CppOptionEntry inner class to hold information about each entry
	and its dynamically allocated C value.
	Add map_entries_ map to store them, so we can iterate over them during
	post_parse.

2004-10-21  Murray Cumming  <murrayc@murrayc.com>

	Patch from Roger Leigh in bug # 15589 to use PLATFORM_WIN32 rather than

2004-10-21  Murray Cumming  <murrayc@murrayc.com>

	* build_shared/Makefile_build.am_fragment: Patch from Roger Leigh in
	bug # 15589 to use PLATFORM_WIN32 rather than OS_WIN32 to enable
	-no-undefined. This allows glibmm to build in a cgwin environment,
	apparently.

2004-10-18  Murray Cumming  <murrayc@src.gnome.org>

	file glibmmconfig.h was initially added on branch glibmm-2-4.

2004-10-17  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2004-10-17  Murray Cumming  <murrayc@murrayc.com>

	add_entry(): Fixed crash by creating a temporary array, with a nulled last

2004-10-17  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/optioncontext.[hg|ccg]: add_entry(): Fixed crash by
	creating a temporary array, with a nulled last item, which is what the
	C function wants. In callbacks, ignore the group parameter because our
	option group in the data parameter is the same, and does not require
	construction of a second C++ wrapper instance for the same C instance.
	* glib/src/optiongroup.[hg|ccg]: Removed the cast constructor, because
	it is not needed anymore, and there is no clear way to implement it.

2004-10-14  Murray Cumming  <murrayc@murrayc.com>

	on_wrap_property(): Convert property name to canonical form, so that we

2004-10-14  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/WrapParser.pm: on_wrap_property(): Convert property name to
	canonical form, so that we can recognise notifications of property
	value changes. Bug #152764.

2004-10-10  Murray Cumming  <murrayc@murrayc.com>

	Rethought the structure now that I see how the parts work together.

2004-10-01  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/option*.[hg|ccg], examples/options/main.cc: Rethought the
	structure now that I see how the parts work together. Rearranged the
	example to show how the parsing can fill values in member variables
	of a derived OptionGroup class. However, 1. it crashes now, 2. we need
	extra code to map the GOption C types to suitable C++ types, probably
	by doing pre and post parsing to create temporary C types for the C++
	types.

2004-10-07  Philip Langdale  <plangdale@vmware.com>

	Forgot the bug number.

2004-10-07  Philip Langdale  <plangdale@vmware.com>

	Forgot the bug number.

2004-10-07  Philip Langdale  <plangdale@vmware.com>

	Remove unnecessary warning when notify() is called after

2004-10-07  Philip Langdale  <plangdale@vmware.com>

	* glib/glibmm/signalproxy_connectionnode.cc: Remove unnecessary warning
	when notify() is called after destroy_notify_handler().

2004-09-27  Murray Cumming  <murrayc@murrayc.com>

	Wrapped more methods, but I have still not finished. Started an example.

2004-09-27  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/option*.[hg|ccg]: Wrapped more methods, but I have still not
	finished.
	* examples/options/: Started an example.

2004-09-26  Murray Cumming  <murrayc@murrayc.com>

	Regenerated with h2defs.py Added optionentry.[hg|ccg],

2004-09-26  Murray Cumming  <murrayc@murrayc.com>

	* glib/src/glib_functions.defs: Regenerated with h2defs.py
	* glib/src/: Added optionentry.[hg|ccg], optiongroup.[hg|ccg],
	optioncontext.[hg|ccg].

2004-09-19  Murray Cumming  <murrayc@murrayc.com>

	This is the HEAD branch.

2004-09-19  Murray Cumming  <murrayc@murrayc.com>

	* This is the HEAD branch.

2004-09-13  Cedric Gustin  <cedric.gustin@swing.be>

	Fixed a race condition on win32 that involved the combined use of auto_ptr

	2004-09-13  Cedric Gustin <cedric.gustin@swing.be>

	* examples/thread/dispatcher.cc: Fixed a race condition on win32
	that involved the combined use of auto_ptr and multithreading (bug
	#109966).

2004-08-09  Murray Cumming  <murrayc@src.gnome.org>

	increased version

2004-08-01  Martin Schulze  <mschulze@cvs.gnome.org>

	Move deletion of SourceConnectionNode object into

2004-07-23  Martin Schulze  <mschulze@cvs.gnome.org>

	* glib/glibmm/main.cc: Move deletion of SourceConnectionNode
	object
	into destroy_notify_callback() exclusively; do not delete from
	notify().        (bug #144420)

2004-07-10  Murray Cumming  <murrayc@murrayc.com>

	notify(): Do not delete the connection after disconnecting it, because

2004-07-10  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/signalproxy_connectionnode.cc: notify(): Do not delete
	the connection after disconnecting it, because disconnecting it
	always causes disconnect_notify to be called, so just delete it there.
	This prevents double deletes and reading of deleting memory, found in
	bug #145571.

2004-07-09  Murray Cumming  <murrayc@murrayc.com>

	Added some documentation.

2004-07-09  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/signalproxy.h.m4: Added some documentation.

2004-06-20  Daniel Elstner  <daniel@src.gnome.org>

	Spring cleaning. ditto.

	* glib/glibmm/objectbase.cc: Spring cleaning.
	* glib/glibmm/object.cc: ditto.

2004-06-18  Murray Cumming  <murrayc@src.gnome.org>

	Updated NEWS

2004-06-18  Daniel Elstner  <daniel@src.gnome.org>

	Add -Wno-long-long to the list of tried warning flags.

	* scripts/macros.m4 (GTKMM_ARG_ENABLE_WARNINGS): Add
	-Wno-long-long to the list of tried warning flags.

2004-06-16  Daniel Elstner  <daniel@src.gnome.org>

	:create_pipe): There is no point in calling g_file_error_from_errno() on

	* glib/glibmm/dispatcher.cc (DispatchNotifier::create_pipe): There
	is no point in calling g_file_error_from_errno() on win32 since we
	have no real errno.  Also fix the error text to say "event" rather
	than "pipe".

2004-06-14  Daniel Elstner  <daniel@src.gnome.org>

	Add a couple of casts to void in order to suppress warnings about unused

	* scripts/cxx.m4: Add a couple of casts to void in order to suppress
	warnings about unused variables.  I still have no idea as to why the
	hardcore warning flags are remembered when running make distcheck...

2004-06-14  Daniel Elstner  <daniel@src.gnome.org>

	Explicitely join all threads. Hopefully that'll fix the crash on win32

	* examples/thread/dispatcher.cc: Explicitely join all threads.
	Hopefully that'll fix the crash on win32 (see bug #109966).

2004-06-13  Daniel Elstner  <daniel@src.gnome.org>

	Remove unused parameter names to fix building with -Werror.

	* examples/thread/dispatcher*.cc (main): Remove unused parameter
	names to fix building with -Werror.

2004-06-13  Daniel Elstner  <daniel@src.gnome.org>

	s/^GTK/GLIB/

	* configure.in (GTKMM_ENABLE_DEBUG_REFCOUNTING): s/^GTK/GLIB/

2004-06-10  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2004-06-08  Daniel Elstner  <daniel@src.gnome.org>

	Remove left-over include paths for pango, atk, gdk and gtk.

	* build_shared/Makefile_build.am_fragment (all_includes): Remove
	left-over include paths for pango, atk, gdk and gtk.

2004-06-07  Daniel Elstner  <daniel@src.gnome.org>

	Replace a couple of double quotes with &quot; to prevent doxygen from

	* glib/glibmm/stringutils.h: Replace a couple of double quotes with
	&quot; to prevent doxygen from escaping the enclosed HTML entities.

2004-06-04  Murray Cumming  <murrayc@src.gnome.org>

	Increase version

2004-06-04  Daniel Elstner  <daniel@src.gnome.org>

	Use /*! instead of /** to introduce doxygen comments in order to avoid

	* glib/glibmm/ustring.h: Use /*! instead of /** to introduce
	doxygen comments in order to avoid cluttering the long method list
	of class Glib::ustring.  Replace a few double quotes with &quot;
	to prevent doxygen from escaping the enclosed HTML entities.

2004-06-03  Daniel Elstner  <daniel@src.gnome.org>

	Remove mkinstalldirs, because automake-1.8 doesn't use it anymore and

	* scripts/Makefile.am (EXTRA_DIST): Remove mkinstalldirs, because
	automake-1.8 doesn't use it anymore and prior versions should pick
	it up automatically anyway.

2004-06-03  Daniel Elstner  <daniel@src.gnome.org>

	Complete overhaul of the Win32 implementation of Glib::Dispatcher. That

	* glib/glibmm/dispatcher.cc: Complete overhaul of the Win32
	implementation of Glib::Dispatcher.  That is, mutex locking is
	done correctly now and dynamic memory allocation is no longer
	used, plus a few other cleanups.  See reopened bug #109966.

2004-06-03  Daniel Elstner  <daniel@src.gnome.org>

	:SignalProxyConnectionNode): Reorder the initializer list to match the

	* glib/glibmm/signalproxy_connectionnode.cc
	(SignalProxyConnectionNode::SignalProxyConnectionNode):
	Reorder the initializer list to match the declaration order.

	(SignalProxyConnectionNode::notify): Add missing return 0.

2004-05-26  Daniel Elstner  <daniel@src.gnome.org>

	Globally apply some minor code cleanup and optimization tweaks.

	* glib/glibmm/ustring.{cc,h}: Globally apply some minor code
	cleanup and optimization tweaks.

	(get_unichar_from_std_iterator): Replace implementation with a
	hand-optimized and profiled variant that has been lurking in my
	local tree for quite some time, thus should be well tested.
	Also add the G_GNUC_PURE() attribute.

	(operator+): Explicitely instantiate and return a temporary string,
	instead of accessing the reference ustring::operator+=() returns.
	This quite often allows the compiler to eliminate the additional
	copy constructor invocation.

2004-05-25  Murray Cumming  <murrayc@murrayc.com>

	Removed the glibmm.spec files, because it is broken and nobody has

2004-05-25  Murray Cumming  <murrayc@murrayc.com>

	* configure.in, Makefile.am: Removed the glibmm.spec files, because
	it is broken and nobody has volunteered to fix it.

2004-05-20  Daniel Elstner  <daniel@src.gnome.org>

	Revert last commit because it's silly. To make the code truly

	* examples/thread/dispatcher.cc: Revert last commit because it's
	silly.  To make the code truly exception-safe it would be necessary
	to either join all threads or to notify them, which is way beyond
	the scope of this example.

2004-05-20  Daniel Elstner  <daniel@src.gnome.org>

	Set a good example and be paranoid about possible memory leaks due to

	* examples/thread/dispatcher.cc: Set a good example and
	be paranoid about possible memory leaks due to exeptions.

2004-05-20  Daniel Elstner  <daniel@src.gnome.org>

	Code cleanup. Most importantly, get rid of the locking around std::cout

	* examples/thread/dispatcher.cc: Code cleanup.  Most importantly,
	get rid of the locking around std::cout since it obfuscates the
	purpose of using Glib::Dispatcher.

2004-05-13  Daniel Elstner  <daniel@src.gnome.org>

	:ConstructParams): Implement the copy constructor in a way that actually

	* glib/glibmm/object.{cc,h} (ConstructParams::ConstructParams):
	Implement the copy constructor in a way that actually works if used.
	Relying on the compiler to optimize it away is a bad idea. (#132300)

2004-05-04  Murray Cumming  <murrayc@murrayc@murrayc.com>

	Documented the constructors, based on the libstdc++ documentation, to make

2004-05-04  Murray Cumming  <murrayc@murrayc@murrayc.com>

	* glib/glibmm/ustring.h: Documented the constructors, based on
	the libstdc++ documentation, to make it clear that sizes are in
	characters rather than bytes.

2004-05-01  Murray Cumming  <murrayc@murrayc.com>

	Increase glib dependency to 2.4.0.

2004-05-01  Murray Cumming  <murrayc@murrayc.com>

	* configure.in: Increase glib dependency to 2.4.0.

2004-04-29  Murray Cumming  <murrayc@murrayc.com>

	Allow use of _CUSTOM_DTOR(), needed by Gnome::Gda::Connection.

2004-04-30  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/gobject.m4: Allow use of _CUSTOM_DTOR(), needed by
	Gnome::Gda::Connection.

2004-04-29  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2004-04-17  Murray Cumming  <murrayc@murrayc.com>

	Make the generated html depend on the beautify_docs.pl.in source instead

2004-04-17  Murray Cumming  <murrayc@murrayc.com>

	* docs/reference/Makefile.am: Make the generated html depend on the
	beautify_docs.pl.in source instead of the generated beautify_docs.pl,
	so that the html is not rebuilt from tarballs.

2004-04-17  Murray Cumming  <murrayc@src.gnome.org>

	try again

2004-04-17  Murray Cumming  <murrayc@murrayc.com>

	Reimplemented more of the to_cpp_type() methods without using dependent

2004-04-17  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/container_handle.h: Reimplemented more of the
	to_cpp_type() methods without using dependent methods, so that they
	work with g++ 3.4 (cvs versions).

2004-04-11  Murray Cumming  <murrayc@src.gnome.org>

	fix the fix.

2004-04-11  Murray Cumming  <murrayc@murrayc.com>

	2.4.0:

2004-04-11  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/WrapParser.pm, Output.pm, m4/signal.m4: Allow _WRAP_SIGNAL()
	to take an refreturn argument, so that Gtk::Widget::on_get_accessible()
	can do an extra ref before returning the Atk::Object.

2004-04-09  Murray Cumming  <murrayc@murrayc.com>

	output_wrap_property(): Provide the actual property name as well as one

2004-04-09  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/Output.pm: output_wrap_property(): Provide the actual
	property name as well as one with - replace with _, so we can
	test for the correct value in notification signal handler.
	* tools/m4/property.m4: Use the actual property name when calling
	C functions.

2004-03-30  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2004-03-24  Murray Cumming  <murrayc@murrayc.com>

	Corrected parentheses, which cause the docs to be written into config.h.

2004-03-24  Murray Cumming  <murrayc@murrayc.com>

	* scripts/cxx.m4: Corrected parentheses, which cause the docs to be
	written into config.h. Thanks to Alexander Nedotsukov.

2004-03-23  Murray Cumming  <murrayc@murrayc.com>

	Corrected the ambiguous const template test, which failed on all platforms

2004-03-23  Murray Cumming  <murrayc@murrayc.com>

	* scripts/cxx.m4: Corrected the ambiguous const template test, which
	failed on all platforms because it generated bad code.

2004-03-20  Martin Schulze  <mschulze@cvs.gnome.org>

	Bug fix in SourceConnectionNode::notify() (#137030).

2004-03-20  Martin Schulze  <mschulze@cvs.gnome.org>

	* glibmm/main.cc: Bug fix in SourceConnectionNode::notify() (#137030).

2004-03-18  Murray Cumming  <murrayc@murrayc.com>

	Change a regex so that files are included without full path. Apparently

2004-03-18  Murray Cumming  <murrayc@murrayc.com>

	* tools/generate_wrap_init.pl: Change a regex so that files are
	included without full path. Apparently this helps when building outside
	of the source directory, though I'm sceptical. By Victor Zverovich in
	bug #137530.

2004-03-15  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2004-03-14  Murray Cumming  <murrayc@murrayc.com>

	Set the correct variable, so it is actually set in glibmmconfig.

2004-03-14  Murray Cumming  <murrayc@murrayc.com>

	* scripts/sun.m4: Set the correct variable, so it is actually set in
	glibmmconfig.

2004-03-14  Murray Cumming  <murrayc@murrayc.com>

	Used ifdef GLIBMM_HAVE_DISAMBIGUOUS_CONST_TEMPLATE_SPECIALIZATIONS to

2004-03-14  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/containerhandle_shared.h value.h: Used ifdef
	GLIBMM_HAVE_DISAMBIGUOUS_CONST_TEMPLATE_SPECIALIZATIONS to avoid
	problems with the SUN Forte compiler.

2004-03-13  Murray Cumming  <murrayc@murrayc.com>

	Added CAN_DISAMBIGUATE_CONST_TEMPLATE_SPECIALIZATIONS m4 macro to use in

2004-03-14  Murray Cumming  <murrayc@murrayc.com>

	* scripts/cxx.m4: Added CAN_DISAMBIGUATE_CONST_TEMPLATE_SPECIALIZATIONS
	m4 macro to use in configure.in, to check for the SUN Forte problem -
	see the comments in cxx.m4.
	* scripts/sun.m4: Moved some brackets around to make the define
	actually work.

2004-03-13  Murray Cumming  <murrayc@murrayc.com>

	TypeTraits to_cpp_type() specializations: Use wrap_auto() directly instead

2004-03-13  Murray Cumming  <murrayc@murrayc.com>

	* glib/glibmm/containerhandle_shared.h: TypeTraits to_cpp_type()
	specializations: Use wrap_auto() directly instead of a specific
	wrap() overload that would be dependent. Needed for g++ 3.4.
	* glib/glibmm/containers.h: Same again.

2004-03-13  Murray Cumming  <murrayc@murrayc.com>

	Remove the parent get_type() call from the Class::init() function, because

2004-03-13  Murray Cumming  <murrayc@murrayc.com>

	* tools/m4/class_shared.m4: Remove the parent get_type() call from
	the Class::init() function, because it is optimised away, and g++ 3.4
	actually complains that it does nothing.
	* glib/glibmm/object.[h|cc]: Add a public ConstructParams copy
	constructor, needed by g++ 3.4. See comments in the code.
	* tests/glibmm_value/glibmm_value.cc: Instantiate instances of
	value types, to fix the g++ 3.4 build. I don't know what the code
	was meant to do before anyway.

2004-03-11  Murray Cumming  <murrayc@murrayc.com>

	Added sun.m4, copied from libsigc++-1.2/scripts and modified, so we can

2004-03-11  Murray Cumming  <murrayc@murrayc.com>

	* scripts/: Added sun.m4, copied from libsigc++-1.2/scripts and
	modified, so we can detect the SUN Forte compiler.
	* configure.in: Used the m4 macro.
	* glibmm/glibmm-config.h: Undef the GLIBMM_COMPILER_SUN_FORTE macro
	so that it will be defined if configure sets it.

2004-03-10  Murray Cumming  <murrayc@murrayc.com>

	Use existing sun-specific conversion when converting from any RefPtr<const

2004-03-09  Murray Cumming  <murrayc@murrayc.com>

	* Some, but not all, SUN Forte build fixes:
	* tools/m4/convert_gdk.m4, convert_glib.m4: Use existing
	sun-specific conversion when converting from any
	RefPtr<const Something> to *Something.

2004-03-09  Hagen Moebius  <hagen.moebius@starschiffchen.de>

	Another change to give better warnings and errors at gmmproc-runtime.

2004-04-08  Hagen Moebius  <hagen.moebius@starschiffchen.de>

	* tools/pm/DocsParser.pm: Another change to give better warnings and
	errors at gmmproc-runtime. Further improvment of parsing parameter names
	to strip traling underscres. This not only for reference text, but for
	the parameter list also.

2004-03-08  Hagen Moebius  <hagen.moebius@starschiffchen.de>

	Allow overrides to only override part of the docs. Add a <mapping> tag to

2004-04-07  Hagen Moebius  <hagen.moebius@starschiffchen.de>

	* tools/pm/DocsParser.pm: Allow overrides to only override
	part of the docs. Add a <mapping> tag to associate non-prefixed
	functions with classes. Improve parsing of parameter names so they
	can now have numbers in the names.

2004-03-05  Murray Cumming  <murrayc@src.gnome.org>

	Updated some .cvsignore files

2004-03-03  Murray Cumming  <murrayc@src.gnome.org>

	Increased version

2004-03-02  Murray Cumming  <murrayc@murrayc.com>

	Added glib/glibmm/i18n.h and i18n-lib.h which defines _() and friends for

2004-03-03  Murray Cumming  <murrayc@murrayc.com>

	* Added glib/glibmm/i18n.h and i18n-lib.h which defines _() and friends
	for internationalization. See the comments in the header - you must
	include things in the right order.
	* glib/src/spawn.[hg|ccg]: Added spawn_close_id() as wrapper for
	g_spawn_close_id().
	* glib/glibmm/main.[h|cc]: Added MainLoop::depth() as wrapper for
	g_main_depth().

2004-03-02  Murray Cumming  <murrayc@murrayc.com>

	parse_param(): Only parse const as an individual part of the type name if

2004-03-02  Murray Cumming  <murrayc@murrayc.com>

	* tools/pm/Function.pm: parse_param(): Only parse const as an
	individual part of the type name if it is followed by a space, so
	that we can have const const_iterator& types.

2004-02-27  Martin Schulze  <teebaum@cvs.gnome.org>

	Fix typo reported by Chris Vine.

2004-02-27  Martin Schulze  <teebaum@cvs.gnome.org>

	* CHANGES: Fix typo reported by Chris Vine.

2004-02-13  Martin Schulze  <teebaum@cvs.gnome.org>

	documentation fixes and corrections in the comments reflecting the shift

2004-02-13  Martin Schulze  <teebaum@cvs.gnome.org>

	* documentation fixes and corrections in the comments reflecting
	the shift to libsigc++ 2.
	* make all source files in example thread use libsigc++ 2 instead
	of libsigc++ 1.2.

2004-02-13  Murray Cumming  <murrayc@src.gnome.org>

	Increased version number.

2004-02-10  Murray Cumming  <murrayc@usa.net>

	glibmm now uses libsigc++ 2 instead of libsigc++ 1.2. See bug #125061 for

2004-02-10  Murray Cumming  <murrayc@usa.net>

	* glibmm now uses libsigc++ 2 instead of libsigc++ 1.2. See bug
	#125061 for more details. We must update CHANGES later.

2004-02-04  Murray Cumming  <murrayc@src.gnome.org>

	increased vesion

2004-02-03  Murray Cumming  <murrayc@usa.net>

	Traits<const T*>: Added const_cast, needed by TreeView::get_columns()

2004-02-02  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/containerhandle_shared.h: Traits<const T*>: Added
	const_cast, needed by TreeView::get_columns() const: bug #126721.

2004-01-29  Murray Cumming  <murrayc@usa.net>

	Add an optional custom_c_callback parameter to _WRAP_SIGNAL to allow

2004-01-29  Murray Cumming  <murrayc@usa.net>

	* tools/pm/Parser.pm, Output.pm, tools/m4/signal.m4: Add an optional
	custom_c_callback parameter to _WRAP_SIGNAL to allow special code
	for the SelectionData& output parameter in Gtk::Widget signals.
	Hopefully we won't need too many more of these hacks - the m4 is
	becoming very hard to read, with all these nested ifelse() statements.

2004-01-29  Cedric Gustin  <cedric.gustin@swing.be>

	Added win32-specific --export-all-symbols to linker flags. This is

2004-01-27  Cedric Gustin  <cedric.gustin@swing.be>

	* build_shared/Makefile_build.am_fragment: Added win32-specific
	--export-all-symbols to linker flags. This is backported from
	gtkmm-2.2.
	* README.win32: Updated text for glibmm-2.4.
	* tools/generate_wrap_init.pl.in: Replaced GTKMM_WIN32 by the
	standard G_OS_WIN32.

2004-01-23  Murray Cumming  <murrayc@src.gnome.org>

	Updated version

2004-01-22  Murray Cumming  <murrayc@usa.net>

	Added clamp_min() and clamp_max() to wrap the case where g_date_clamp()

2004-01-22  Murray Cumming  <murrayc@usa.net>

	* glib/date.[hg|ccg]: Added clamp_min() and clamp_max() to wrap the
	case where g_date_clamp() takes null values.

2004-01-16  Murray Cumming  <murrayc@src.gnome.org>

	tiny docs change.

2004-01-12  Murray Cumming  <murrayc@usa.net>

	Object::Object() default constructor. Remove the warning because we really

2004-01-12  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/object.cc: Object::Object() default constructor.
	Remove the warning because we really need this to implement a custom
	TreeModel. Derive a new GType, as in the
	Object::Object(ConstructParams) constructor. Like that constructor,
	the default one also assumes that you have called a suitable
	ObjectBase constructor, such as ObejctBase(typeid(MyCustomClass)).

2004-01-09  Murray Cumming  <murrayc@usa.net>

	output_wrap_property(): Allow construct-only properties to be wrapped, as

2004-01-09  Murray Cumming  <murrayc@usa.net>

	* tools/pm/Output.pm: output_wrap_property(): Allow construct-only
	properties to be wrapped, as read-only properties.

2004-01-05  Murray Cumming  <murrayc@usa.net>

	Removed the mergecdocs option - because we always want to merge C docs, to

2004-01-03  Murray Cumming  <murrayc@usa.net>

	* tools/gmmproc.in, pm/WrapParser.pm, DocsParser.pm: Removed the
	mergecdocs option - because we always want to merge C docs, to avoid
	accidental upload of half-complete docs.

2003-12-30  Murray Cumming  <murrayc@src.gnome.org>

	Added missing file.

2003-12-30  Murray Cumming  <murrayc@usa.net>

	Add scripts and tests directories to SUBDIRS instead of DIST_SUBDIRS, so

2003-12-29  Murray Cumming  <murrayc@usa.net>

	* Makefile.am: Add scripts and tests directories to SUBDIRS instead of
	DIST_SUBDIRS, so that their Makefile.am files are actually used.
	* scripts/macros.m4: renamed GTKMM_CHECK_PERL() to GLIBMM_CHECK_PERL()
	and install it as glibmm_check_perl.m4, so that other *mm projects
	can use it. They need the PERL_PATH for Doxygen.

2003-12-22  Murray Cumming  <murrayc@usa.net>

	generate beautify_docs.pl from beautify_docs.pl.in, so it can have the

2003-12-22  Murray Cumming  <murrayc@usa.net>

	* docs/reference: generate beautify_docs.pl from beautify_docs.pl.in,
	so it can have the perl path in it. Install it, so other *mm
	modules can use it.

2003-12-14  Murray Cumming  <murrayc@usa.net>

	Added fuller Doxygen documentation to all gobj() and wrap() methods.

2003-12-13  Murray Cumming  <murrayc@usa.net>

	* tools/m4/*.m4: Added fuller Doxygen documentation to all gobj() and
	wrap() methods. Doxygen should not emit warnings about these now.

2003-12-10  Murray Cumming  <murrayc@src.gnome.org>

	released.

2003-12-03  Murray Cumming  <murrayc@usa.net>

	Add spaces inside signal_proxy template types, to avoid << and >> when

2003-11-29  Murray Cumming  <murrayc@usa.net>

	* tools/m4/signal.m4: Add spaces inside signal_proxy template types,
	to avoid << and >> when using templated types.

2003-11-28  Murray Cumming  <murrayc@usa.net>

	Added WRAP_METHOD_DOCS_ONLY() macro. Explained the new macro.

2003-11-27  Murray Cumming  <murrayc@usa.net>

	* tools/pm/WrapParser.pm, Output.pm: Added WRAP_METHOD_DOCS_ONLY()
	macro.
	* docs/internal/using_gmmproc.txt: Explained the new macro.

2003-11-03  Murray Cumming  <murrayc@usa.net>

	Added init.[h|cc] with Glib::init() so that the gnomemm init() methods do

2003-11-02  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/: Added init.[h|cc] with Glib::init() so that the
	gnomemm init() methods do not need to initialize gtkmm.
	* tools/m4/class_gobject.m4, class_gtkobject.m4: Added
	_GMMPROC_PROTECTED_GCLASS macro, needed by libgnomecanvasmm. This
	was not previously properly merged from gtkmm2.
	* tools/m4/property.m4: Re-added PropertyProxy reference documentation
	that did not survive a previous merge from gtkmm2.

2003-11-01  Murray Cumming  <murrayc@usa.net>

	Now uses ObjectBase instead of Object, because glib can now have

2003-11-01  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/propertyproxy.h, propertyproxy_base.[h|cc]: Now uses
	ObjectBase instead of Object, because glib can now have properties
	on interfaces. This is needed, for instance, by the GtkFileChooser
	interface wrapper in gtkmm.
	* glib/glibmm/object.h: Moved get/set_property() methods into
	ObjectBase, for the same reason.
	* tools/pm/WrapParser.pm, Output.pm: Added optional no_default_handler
	parameter to gmmproc _WRAP_SIGNAL() macro, for signals whose
	default signal handler is not in the klass struct and therefore
	can not be overridden.

2003-10-31  Murray Cumming  <murrayc@src.gnome.org>

	added missing files.

2003-10-31  Murray Cumming  <murrayc@usa.net>

	Corrected install location, so that links from the gtkmm docs work when

2003-10-31  Murray Cumming  <murrayc@usa.net>

	* docs/Makefile_web.am_fragment: Corrected install location,
	so that links from the gtkmm docs work when they are installed.

2003-10-30  Murray Cumming  <murrayc@src.gnome.org>

	Corrected upload paths.

2003-10-30  Murray Cumming  <murrayc@usa.net>

	Added images directory, copied from gtkmm, for the reference html docs.

2003-10-30  Murray Cumming  <murrayc@usa.net>

	* docs: Added images directory, copied from gtkmm, for the reference
	html docs.
	* configure.in: Mention docs/images/Makefile.
	* docs/reference/Doxyfile.in: Genereate glibmm_doxygen_tags instead
	of gtkmm_doxygen_tags.
	* docs/reference/Makefile.am: dist glibmm_doxygen_tags.
	* docs/reference: gtkmm*.html_fragment are now glibmm*.html_fragment.

2003-10-25  Murray Cumming  <murrayc@usa.net>

	output_wrap_create(): Used args_types_and_names_with_default_values()

2003-10-23  Murray Cumming  <murrayc@usa.net>

	* tools/pm/Output.pm: output_wrap_create(): Used
	args_types_and_names_with_default_values() intead of
	args_types_and_names(), so that create() functions .in .h files have
	the default values as specified in _WRAP_CREATE() in .hg files.
	* tools/pm/WrapParser.pm: on_ignore_signals(): Strip the quotes, to
	make _IGNORE_SIGNAL() really work in .hg files.

2003-10-18  Murray Cumming  <murrayc@src.gnome.org>

	minor example code cleanup

2003-10-17  J. Abelardo Gutierrez  <jabelardo@cantv.net>

	fixed to cast out all gktmm code, now they only need glimm. Added

	2003-10-02  J. Abelardo Gutierrez <jabelardo@cantv.net>

	* examples/threads/dispatcher.cc
	examples/threads/dispatcher2.cc: fixed to cast out all gktmm code,
	now they only need glimm.
	* configure.in: Added examples/threads because they don't use gtkmm
	anymore.  Now all examples/threads compiles and run just fine.

2003-09-30  Murray Cumming  <murrayc@usa.net>

	Removed examples/threads because we don't build or distribute it, because

2003-09-30  Murray Cumming  <murrayc@usa.net>

	* configure.in: Removed examples/threads because we don't build or
	distribute it, because it doesn't build, because it uses gtkmm.

2003-09-30  Murray Cumming  <murrayc@usa.net>

	ObjectBase inherits virtually from Sigc::Object. See bug #116280.

2003-09-30  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/object_base.h: ObjectBase inherits virtually from
	Sigc::Object. See bug #116280.

2003-09-28  Cedric Gustin  <cedric.gustin@swing.be>

	Removed _GTKMMPROC_SIGNAL_H_AND_CC(#ifndef G_OS_WIN32) restrictions. These

2003-09-27  Cedric Gustin  <cedric.gustin@swing.be>

	* glib/glibmm/threadpool.cc: Removed
	_GTKMMPROC_SIGNAL_H_AND_CC(#ifndef G_OS_WIN32) restrictions. These
	functions are now implemented in the latest (2.2.4) GTK+ on win32.
	* README.win32 : Updated list of unsupported functions.

2003-08-20  Frank Naumann  <fnaumann@freemint.de>

	Merged from gtkmm 2.2: 2003-08-20  Frank Naumann  <fnaumann@freemint.de>

	* glib/src/thread.hg,
	glib/src/unicode.hg: Warning bugfix for VisualStudio .NET 2003;
	made wrapper functions returning bool from glib functions
	returning int (C lacks builtin type bool) explicit by adding
	an != 0 check. Otherwise VisualStudio .NET warn about implicit
	int -> bool cast.

2003-07-27  Murray Cumming  <murrayc@usa.net>

	Added #include <algorithm>, needed by MSVC++, as suggested by Frank

2003-07-26  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/dispatcher.cc: Added #include <algorithm>, needed
	by MSVC++, as suggested by Frank Naumann in bug #118215.

2003-07-19  Murray Cumming  <murrayc@src.gnome.org>

	merged some bits from 2.2

2003-05-31  Murray Cumming  <murrayc@usa.net>

	Corrected location of installed .pm files. They are now in a glibmm-2.3

2003-05-31  Murray Cumming  <murrayc@usa.net>

	* tools/gmmproc.in: Corrected location of installed .pm files. They
	are now in a glibmm-2.3 folder instead of a glibmm-2.4 folder.

2003-05-21  Murray Cumming  <murrayc@src.gnome.org>

	stuff from gtkmm2

2003-05-09  Cedric Gustin  <cedric.gustin@swing.be>

	small typo in G_OS_WIN32 condition.

2003-05-09  Cedric Gustin  <cedric.gustin@swing.be>

	* glib/glibmm/dispatcher.cc: small typo in G_OS_WIN32 condition.

2003-05-07  Murray Cumming  <murrayc@usa.net>

	Made the --enable-debug-refouncting configure option set GLIBMM_* instead

2003-05-07  Murray Cumming  <murrayc@usa.net>

	* scripts/macros.m4: Made the --enable-debug-refouncting configure
	option set GLIBMM_* instead of GTKMM_*.

2003-05-02  Murray Cumming  <murrayc@usa.net>

	Added doxygen comments to gobj() methods. Commented-out a std::right that

2003-05-02  Murray Cumming  <murrayc@usa.net>

	* tools/m4/*.m4: Added doxygen comments to gobj() methods.
	* examples/markup/parser.cc: Commented-out a std::right that gcc 2.93
	does not like.

2003-04-24  Murray Cumming  <murrayc@src.gnome.org>

	2003-04-23  Andrew Makeev

	* glib/glibmm/dispatcher.cc: Added some #ifdefed code to implement
	Glib::Dispatcher on WIN32. See comments with the code.

2003-04-23  Murray Cumming  <murrayc@usa.net>

	Install headers in a glibmm-2.3 directory instead of glibmm-2.4, to be

2003-04-22  Murray Cumming  <murrayc@usa.net>

	* Install headers in a glibmm-2.3 directory instead of glibmm-2.4,
	to be consistent with gtkmm 2.4.

2003-04-21  Murray Cumming  <murrayc@src.gnome.org>

	2003-04-21  Murray Cumming  <murrayc@localhost.localdomain>commit -m

2003-04-20  Murray Cumming  <murrayc@src.gnome.org>

	finished previous commit

2003-04-20  Murray Cumming  <murrayc@usa.net>

	It's now updated and in gtkmm/examples/book.

2003-04-21  Murray Cumming  <murrayc@usa.net>

	* Removed examples/idle: It's now updated and in gtkmm/examples/book.

2003-04-19  Murray Cumming  <murrayc@localhost.localdomain>

	get_unwrapped(): Changed some & to && to avoid warnings and because that

2003-04-19  Murray Cumming  <murrayc@localhost.localdomain>

	* tools/pm/GtkDefs.pm: get_unwrapped(): Changed some & to && to
	avoid warnings and because that is probably what they should be.

	* tools/m4/extra_defs_gen/generate_defs_glib.cc: Removed parameter
	names from main(), because they are not used. Avoid warning.

2003-03-26  Ross Burton  <rburton@src.gnome.org>

	Added Glib::Module documentation

2003-03-22  Enrico Scholz  <enrico.scholz@informatik.tu-chemnitz.de>

	Added description to several AC_DEFINE statements to make 'autoheader'

2003-03-18  Enrico Scholz  <enrico.scholz@informatik.tu-chemnitz.de>

	* scripts/*.m4, configure.in:
	Added description to several AC_DEFINE statements to make 'autoheader'
	happy
	* Makefile.am:
	Added ACLOCAL_AMFLAGS to make 'autoreconf' work

2003-03-22  Cedric Gustin  <cgustin@ibelgique.com>

	removed examples from DIST_SUBDIRS

2003-03-18  Cedric Gustin  <cgustin@ibelgique.com>

	* Makefile.am : removed examples from DIST_SUBDIRS

2003-03-18  Enrico Scholz  <enrico.scholz@informatik.tu-chemnitz.de>

	* examples/Makefile.am_fragment:  Added DESTDIR-support.

2003-03-14  Cedric Gustin  <cgustin@ibelgique.com>

	Install examples. The are built by default too. Patch adapted for glibmm

2003-03-14  Cedric Gustin  <cgustin@ibelgique.com>

	* Install examples. The are built by default too. Patch adapted for
	glibmm 2.4 by Murray Cumming.

2003-03-14  Cedric Gustin  <cgustin@ibelgique.com>

	Removed libstdc++ in LDFLAGS on win32. Latest libtool is taking care of

2003-03-04  Cedric Gustin  <cgustin@ibelgique.com>

	* configure.in : Removed libstdc++ in LDFLAGS on win32. Latest
	libtool is taking care of it.
	* build_shared/Makefile_build.am_fragment,
	tools/extra_defs_gen/Makefile.am : Added
	--export-all-symbols linker flag on win32 (required by latest
	libtool to build DLLs).
	* build_shared/Makefile_gensrc.am_fragment : Modifiy rule that
	builds wrap_init.cc. wrap_init.cc now contains reference to all
	objects, event on win32. #ifdefs are included when needed.
	* README.win32 : updated for version 2.2. Added list of missing
	methods and signals on win32
	* tools/m4/base.m4 : Added _GTKMMPROC_SIGNAL_H_AND_CC macro.

2003-03-14  Martin Schulze  <MHL.Schulze@t-online.de>

	Correct name of [...]signals.defs generation utiliy.

2003-03-14  Martin Schulze  <MHL.Schulze@t-online.de>

	* docs/internal/using_gtkmmproc.txt: Correct name of
	[...]signals.defs generation utiliy.

2003-03-03  Rick L Vinyard Jr  <rvinyard@cs.nmsu.edu>

	Add documentation

	2003-01-30  Rick L Vinyard Jr <rvinyard@cs.nmsu.edu>

	* glib/src/thread.hg Cond: Add documentation

2003-01-27  Murray Cumming  <murrayc@usa.net>

	Removed RefPtr<>::is_null() to encourate use of more pointer-like operator

2003-01-27  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/refptr.h: Removed RefPtr<>::is_null() to encourate use
	of more pointer-like operator bool() instead. Wanted to remove clear()
	too, but there is no =0 equivalent yet.
	* tools/gmmproc.in: Change harcoded gtkmm-2.0/m4 path to glibmm-2.4/m4.

2003-01-27  Murray Cumming  <murrayc@usa.net>

	Removed RefPtr<>::is_null() to encourate use of more pointer-like operator

2003-01-27  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/refptr.h: Removed RefPtr<>::is_null() to encourate use
	of more pointer-like operator bool() instead. Wanted to remove clear()
	too, but there is no =0 equivalent yet.

2003-01-22  Murray Cumming  <murrayc@src.gnome.org>

	Some GTKMM_ prefixes that I forgot.

2003-01-22  Murray Cumming  <murrayc@usa.net>

	GTKMM_ m4 tests and #defines are now prefixed with GLIBMM_

2003-01-22  Murray Cumming  <murrayc@usa.net>

	* GTKMM_ m4 tests and #defines are now prefixed with GLIBMM_

2003-01-21  Murray Cumming  <murrayc@usa.net>

	Corrected LIBS and CFLAGS. Not all of these build because they use gtkmm

2003-01-21  Murray Cumming  <murrayc@usa.net>

	* tests/Makefile.am_fragment, examples/Makefile.am_fragment:
	Corrected LIBS and CFLAGS. Not all of these build because they
	use gtkmm stuff too. They need to be reduced to glibmm-only code.

2003-01-21  Murray Cumming  <murrayc@src.gnome.org>

	More version fixing.

2003-01-21  Murray Cumming  <murrayc@usa.net>

	Install headers in glibmm-2.4 directory rather than gtkmm-2.4

	2003-01-21  Murray Cumming <murrayc@usa.net>

	* glib/Makefile.am, glib/glibmm/Makefile.am: Install headers in
	glibmm-2.4 directory rather than gtkmm-2.4

2003-01-21  Murray Cumming  <murrayc@usa.net>

	Use GLIBMM_* instead of GTKMM_* to avoid config.h clashes with gtkmm 2.4.

2003-01-21  Murray Cumming  <murrayc@usa.net>

	* configure.in: Use GLIBMM_* instead of GTKMM_* to avoid config.h
	clashes with gtkmm 2.4.
	* glib/glibmm-2.4.pc.in: Correct cflags - report 2.4 instead of 2.0.

2003-01-21  Murray Cumming  <murrayc@usa.net>

	Changed extra_defs library name from 2.4 to 2.3, so it can be unstable.

2003-01-21  Murray Cumming  <murrayc@usa.net>

	* tools/extra_defs_gen/Makefile.am: Changed extra_defs library name
	from 2.4 to 2.3, so it can be unstable.

2003-01-21  Murray Cumming  <murrayc@src.gnome.org>

	Applied Daniels changes from gtkmm 2.2

2003-01-21  Murray Cumming  <murrayc@usa.net>

	Renamed gtkmmproc to gmmproc.

2003-01-21  Murray Cumming  <murrayc@usa.net>

	* Renamed gtkmmproc to gmmproc.

2003-01-08  Murray Cumming  <murrayc@usa.net>

	Removed the operator=(CppObject*), as suggested in the TODO comment.

2003-01-08  Murray Cumming  <murrayc@usa.net>

	* glib/glibmm/refptr.h: Removed the operator=(CppObject*), as
	suggested in the TODO comment.

2003-01-08  Murray Cumming  <murrayc@usa.net>

	make distcheck works.

2003-01-08  Murray Cumming  <murrayc@usa.net>

	* make distcheck works.

2003-01-08  Murray Cumming  <murrayc@src.gnome.org>

	Added missing file.

2003-01-08  Murray Cumming  <murrayc@usa.net>

	It now builds, though I haven' tried installing it. The library names and

2003-01-08  Murray Cumming  <murrayc@usa.net>

	* It now builds, though I haven' tried installing it. The
	library names and header directories should now all have 2.4
	instead of 2.0 in their name.

2003-01-07  Murray Cumming  <murrayc@src.gnome.org>

	initial import

2003-01-07  Murray Cumming  <murrayc@src.gnome.org>

	Initial revision

