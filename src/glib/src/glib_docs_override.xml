<root>
    <function name="g_option_context_set_summary">
        <description>
            Adds a string to be displayed in --help output before the list of options. This
            is typically a summary of the program functionality. 

            Note that the summary is translated (see set_translate_func(),
            set_translation_domain()).

            Since: 2.14

        </description>
        <parameters>
            <parameter name="summary">
                <parameter_description> a string to be shown in --help output before the list of
                    options
                </parameter_description>
            </parameter>
        </parameters>
        <return></return>
    </function>

    <function name="g_option_context_get_summary">
        <description>
            Returns: the summary
            See set_summary() for more information

            Since: 2.14
        </description>
        <parameters>
        </parameters>
        <return> the summary
        </return>
    </function>

    <function name="g_option_context_set_description">
        <description>
            Adds a string to be displayed in --help output after the list of
            options. This text often includes a bug reporting address.

            Note that the summary is translated (see set_translate_func()).

            Since: 2.14

        </description>
        <parameters>
            <parameter name="description">
                <parameter_description> a string to be shown in --help output
                    after the list of options
                </parameter_description>
            </parameter>
        </parameters>
        <return></return>
    </function>

    <function name="g_option_context_get_description">
        <description>
            Returns: the description
            See set_description() for more information

            Since: 2.14
        </description>
        <parameters>
        </parameters>
        <return> the description
        </return>
    </function>

    <function name="g_option_context_set_translation_domain">
        <description>
            A convenience function to use gettext() for translating
            user-visible strings. 

            Since: 2.14

        </description>
        <parameters>
            <parameter name="domain">
                <parameter_description> the domain to use
                </parameter_description>
            </parameter>
        </parameters>
        <return></return>
    </function>


<function name="g_key_file_get_double">
<description>
Return value: the value associated with the key as a double.

Since: 2.14

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError
</parameter_description>
</parameter>
</parameters>
<return> the value associated with the key as a double, or
0.0 if the key was not found or could not be parsed.
</return>
</function>


<function name="g_key_file_set_double">
<description>
Associates a new double value with @key under @group_name.
If @key cannot be found then it is created. 

Since: 2.14

</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="value">
<parameter_description> an double value
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>


<function name="g_key_file_load_from_file">
<description>
Loads a key file into an empty KeyFile instance.
If the file could not be loaded then a FileError or KeyFileError exception is thrown.

Since: 2.6
\throw Glib::FileError
\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> an empty #GKeyFile struct
</parameter_description>
</parameter>
<parameter name="file">
<parameter_description> the path of a filename to load, in the GLib file name encoding
</parameter_description>
</parameter>
<parameter name="flags">
<parameter_description> flags from #GKeyFileFlags
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if a key file could be loaded, %FALSE otherwise
</return>
</function>


<function name="g_key_file_get_value">
<description>
Returns the value associated with @key under @group_name.

Since: 2.6

\throw Glib::FileError in the event the key cannot be found (with the Glib::KEY_FILE_ERROR_KEY_NOT_FOUND code).
\throw Glib::KeyFileError in the event that the @group_name cannot be found (with the Glib::KEY_FILE_ERROR_GROUP_NOT_FOUND).
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> The value as a string.
</return>
</function>

<function name="g_key_file_get_comment">
<description>
Retrieves a comment above @key from @group_name.
If @key is %NULL then @comment will be read from above 
@group_name. If both @key and @group_name are %NULL, then 
@comment will be read from above the first group in the file.
Use the overrides for a %NULL @key or @group.

Since: 2.6

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError
</parameter_description>
</parameter>
</parameters>
<return> The comment
</return>
</function>

<function name="g_key_file_set_comment">
<description>
Places a comment above @key from @group_name.
If @key is %NULL then @comment will be written above @group_name.  
If both @key and @group_name  are %NULL, then @comment will be 
written above the first group in the file.

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name, or %NULL
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="comment">
<parameter_description> a comment
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="g_key_file_remove_comment">
<description>
Removes a comment above @key from @group_name.
If @key is %NULL then @comment will be removed above @group_name. 
If both @key and @group_name are %NULL, then @comment will
be removed above the first group in the file.

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name, or %NULL
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="g_key_file_has_key">
<description>
Looks whether the key file has the key @key in the group
@group_name. 

Since: 2.6

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key name
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError
</parameter_description>
</parameter>
</parameters>
<return> %TRUE if @key is a part of @group_name, %FALSE
otherwise.
</return>
</function>

<function name="g_key_file_get_value">
<description>
Return value: a newly allocated string or %NULL.

Since: 2.6

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> a newly allocated string or %NULL if the specified 
key cannot be found.
</return>
</function>

<function name="g_key_file_get_string">
<description>
Return value: a newly allocated string or %NULL.

Since: 2.6

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> a newly allocated string or %NULL if the specified 
key cannot be found.
</return>
</function>

<function name="g_key_file_get_locale_string">
<description>
Return value: a newly allocated string or %NULL.

Since: 2.6

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="locale">
<parameter_description> a locale identifier or %NULL
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError, or %NULL
</parameter_description>
</parameter>
</parameters>
<return> a newly allocated string or %NULL if the specified 
key cannot be found.
</return>
</function>

<function name="g_key_file_get_boolean">
<description>
Return value: the value associated with the key as a boolean.

Since: 2.6

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError
</parameter_description>
</parameter>
</parameters>
<return> the value associated with the key as a boolean, 
or %FALSE if the key was not found or could not be parsed.
</return>
</function>

<function name="g_key_file_get_integer">
<description>
Return value: the value associated with the key as an integer.

Since: 2.6

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError
</parameter_description>
</parameter>
</parameters>
<return> the value associated with the key as an integer, or
0 if the key was not found or could not be parsed.
</return>
</function>

<function name="g_key_file_remove_group">
<description>
Removes the specified group, @group_name, 
from the key file. 

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError or %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

<function name="g_key_file_remove_key">
<description>
Removes @key in @group_name from the key file. 

\throw Glib::KeyFileError
</description>
<parameters>
<parameter name="key_file">
<parameter_description> a #GKeyFile
</parameter_description>
</parameter>
<parameter name="group_name">
<parameter_description> a group name
</parameter_description>
</parameter>
<parameter name="key">
<parameter_description> a key name to remove
</parameter_description>
</parameter>
<parameter name="error">
<parameter_description> return location for a #GError or %NULL
</parameter_description>
</parameter>
</parameters>
<return></return>
</function>

</root>
