# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
check_PROGRAMS = giomm_ioerror/test$(EXEEXT) \
	giomm_ioerror_and_iodbuserror/test$(EXEEXT) \
	giomm_memoryinputstream/test$(EXEEXT) \
	giomm_simple/test$(EXEEXT) \
	giomm_asyncresult_sourceobject/test$(EXEEXT) \
	giomm_tls_client/test$(EXEEXT) glibmm_btree/test$(EXEEXT) \
	glibmm_base64/test$(EXEEXT) glibmm_date/test$(EXEEXT) \
	glibmm_buildfilename/test$(EXEEXT) \
	glibmm_interface_implementation/test$(EXEEXT) \
	glibmm_mainloop/test$(EXEEXT) glibmm_nodetree/test$(EXEEXT) \
	glibmm_ustring_compose/test$(EXEEXT) \
	glibmm_ustring_format/test$(EXEEXT) glibmm_value/test$(EXEEXT) \
	glibmm_valuearray/test$(EXEEXT) glibmm_variant/test$(EXEEXT) \
	glibmm_vector/test$(EXEEXT) glibmm_bool_vector/test$(EXEEXT) \
	glibmm_bool_arrayhandle/test$(EXEEXT) \
	glibmm_null_vectorutils/test$(EXEEXT) \
	glibmm_null_containerhandle/test$(EXEEXT) \
	glibmm_refptr_sigc_bind/test$(EXEEXT) \
	glibmm_bytearray/test$(EXEEXT)
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/build/depcomp $(top_srcdir)/build/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/build/c_std.m4 \
	$(top_srcdir)/build/cxx.m4 $(top_srcdir)/build/cxx_std.m4 \
	$(top_srcdir)/build/debug.m4 $(top_srcdir)/build/dk-feature.m4 \
	$(top_srcdir)/build/libtool.m4 \
	$(top_srcdir)/build/ltoptions.m4 \
	$(top_srcdir)/build/ltsugar.m4 \
	$(top_srcdir)/build/ltversion.m4 \
	$(top_srcdir)/build/lt~obsolete.m4 $(top_srcdir)/build/sun.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h \
	$(top_builddir)/glib/glibmmconfig.h \
	$(top_builddir)/gio/giommconfig.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__dirstamp = $(am__leading_dot)dirstamp
am_giomm_asyncresult_sourceobject_test_OBJECTS =  \
	giomm_asyncresult_sourceobject/main.$(OBJEXT)
giomm_asyncresult_sourceobject_test_OBJECTS =  \
	$(am_giomm_asyncresult_sourceobject_test_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(local_libglibmm) $(local_libgiomm) \
	$(am__DEPENDENCIES_1)
giomm_asyncresult_sourceobject_test_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_giomm_ioerror_test_OBJECTS = giomm_ioerror/main.$(OBJEXT)
giomm_ioerror_test_OBJECTS = $(am_giomm_ioerror_test_OBJECTS)
giomm_ioerror_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_giomm_ioerror_and_iodbuserror_test_OBJECTS =  \
	giomm_ioerror_and_iodbuserror/main.$(OBJEXT)
giomm_ioerror_and_iodbuserror_test_OBJECTS =  \
	$(am_giomm_ioerror_and_iodbuserror_test_OBJECTS)
giomm_ioerror_and_iodbuserror_test_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_giomm_memoryinputstream_test_OBJECTS =  \
	giomm_memoryinputstream/main.$(OBJEXT)
giomm_memoryinputstream_test_OBJECTS =  \
	$(am_giomm_memoryinputstream_test_OBJECTS)
giomm_memoryinputstream_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_giomm_simple_test_OBJECTS = giomm_simple/main.$(OBJEXT)
giomm_simple_test_OBJECTS = $(am_giomm_simple_test_OBJECTS)
giomm_simple_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_giomm_tls_client_test_OBJECTS = giomm_tls_client/main.$(OBJEXT)
giomm_tls_client_test_OBJECTS = $(am_giomm_tls_client_test_OBJECTS)
giomm_tls_client_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_glibmm_base64_test_OBJECTS = glibmm_base64/main.$(OBJEXT)
glibmm_base64_test_OBJECTS = $(am_glibmm_base64_test_OBJECTS)
glibmm_base64_test_LDADD = $(LDADD)
glibmm_base64_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_bool_arrayhandle_test_OBJECTS =  \
	glibmm_bool_arrayhandle/main.$(OBJEXT)
glibmm_bool_arrayhandle_test_OBJECTS =  \
	$(am_glibmm_bool_arrayhandle_test_OBJECTS)
glibmm_bool_arrayhandle_test_LDADD = $(LDADD)
glibmm_bool_arrayhandle_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_bool_vector_test_OBJECTS =  \
	glibmm_bool_vector/main.$(OBJEXT)
glibmm_bool_vector_test_OBJECTS =  \
	$(am_glibmm_bool_vector_test_OBJECTS)
glibmm_bool_vector_test_LDADD = $(LDADD)
glibmm_bool_vector_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_btree_test_OBJECTS = glibmm_btree/main.$(OBJEXT)
glibmm_btree_test_OBJECTS = $(am_glibmm_btree_test_OBJECTS)
glibmm_btree_test_LDADD = $(LDADD)
glibmm_btree_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_buildfilename_test_OBJECTS =  \
	glibmm_buildfilename/main.$(OBJEXT)
glibmm_buildfilename_test_OBJECTS =  \
	$(am_glibmm_buildfilename_test_OBJECTS)
glibmm_buildfilename_test_LDADD = $(LDADD)
glibmm_buildfilename_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_bytearray_test_OBJECTS = glibmm_bytearray/main.$(OBJEXT)
glibmm_bytearray_test_OBJECTS = $(am_glibmm_bytearray_test_OBJECTS)
glibmm_bytearray_test_LDADD = $(LDADD)
glibmm_bytearray_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_date_test_OBJECTS = glibmm_date/main.$(OBJEXT)
glibmm_date_test_OBJECTS = $(am_glibmm_date_test_OBJECTS)
glibmm_date_test_LDADD = $(LDADD)
glibmm_date_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_interface_implementation_test_OBJECTS =  \
	glibmm_interface_implementation/main.$(OBJEXT)
glibmm_interface_implementation_test_OBJECTS =  \
	$(am_glibmm_interface_implementation_test_OBJECTS)
glibmm_interface_implementation_test_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_glibmm_mainloop_test_OBJECTS = glibmm_mainloop/main.$(OBJEXT)
glibmm_mainloop_test_OBJECTS = $(am_glibmm_mainloop_test_OBJECTS)
glibmm_mainloop_test_LDADD = $(LDADD)
glibmm_mainloop_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_nodetree_test_OBJECTS = glibmm_nodetree/main.$(OBJEXT)
glibmm_nodetree_test_OBJECTS = $(am_glibmm_nodetree_test_OBJECTS)
glibmm_nodetree_test_LDADD = $(LDADD)
glibmm_nodetree_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_null_containerhandle_test_OBJECTS =  \
	glibmm_null_containerhandle/main.$(OBJEXT)
glibmm_null_containerhandle_test_OBJECTS =  \
	$(am_glibmm_null_containerhandle_test_OBJECTS)
glibmm_null_containerhandle_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_glibmm_null_vectorutils_test_OBJECTS =  \
	glibmm_null_vectorutils/main.$(OBJEXT)
glibmm_null_vectorutils_test_OBJECTS =  \
	$(am_glibmm_null_vectorutils_test_OBJECTS)
glibmm_null_vectorutils_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_glibmm_refptr_sigc_bind_test_OBJECTS =  \
	glibmm_refptr_sigc_bind/main.$(OBJEXT)
glibmm_refptr_sigc_bind_test_OBJECTS =  \
	$(am_glibmm_refptr_sigc_bind_test_OBJECTS)
glibmm_refptr_sigc_bind_test_LDADD = $(LDADD)
glibmm_refptr_sigc_bind_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_ustring_compose_test_OBJECTS =  \
	glibmm_ustring_compose/main.$(OBJEXT)
glibmm_ustring_compose_test_OBJECTS =  \
	$(am_glibmm_ustring_compose_test_OBJECTS)
glibmm_ustring_compose_test_LDADD = $(LDADD)
glibmm_ustring_compose_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_ustring_format_test_OBJECTS =  \
	glibmm_ustring_format/main.$(OBJEXT)
glibmm_ustring_format_test_OBJECTS =  \
	$(am_glibmm_ustring_format_test_OBJECTS)
glibmm_ustring_format_test_LDADD = $(LDADD)
glibmm_ustring_format_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_value_test_OBJECTS = glibmm_value/glibmm_value.$(OBJEXT) \
	glibmm_value/main.$(OBJEXT)
glibmm_value_test_OBJECTS = $(am_glibmm_value_test_OBJECTS)
glibmm_value_test_LDADD = $(LDADD)
glibmm_value_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_valuearray_test_OBJECTS = glibmm_valuearray/main.$(OBJEXT)
glibmm_valuearray_test_OBJECTS = $(am_glibmm_valuearray_test_OBJECTS)
glibmm_valuearray_test_LDADD = $(LDADD)
glibmm_valuearray_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_variant_test_OBJECTS = glibmm_variant/main.$(OBJEXT)
glibmm_variant_test_OBJECTS = $(am_glibmm_variant_test_OBJECTS)
glibmm_variant_test_LDADD = $(LDADD)
glibmm_variant_test_DEPENDENCIES = $(local_libglibmm) \
	$(am__DEPENDENCIES_1)
am_glibmm_vector_test_OBJECTS = glibmm_vector/main.$(OBJEXT)
glibmm_vector_test_OBJECTS = $(am_glibmm_vector_test_OBJECTS)
glibmm_vector_test_DEPENDENCIES = $(am__DEPENDENCIES_2)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = 
depcomp = $(SHELL) $(top_srcdir)/build/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(giomm_asyncresult_sourceobject_test_SOURCES) \
	$(giomm_ioerror_test_SOURCES) \
	$(giomm_ioerror_and_iodbuserror_test_SOURCES) \
	$(giomm_memoryinputstream_test_SOURCES) \
	$(giomm_simple_test_SOURCES) $(giomm_tls_client_test_SOURCES) \
	$(glibmm_base64_test_SOURCES) \
	$(glibmm_bool_arrayhandle_test_SOURCES) \
	$(glibmm_bool_vector_test_SOURCES) \
	$(glibmm_btree_test_SOURCES) \
	$(glibmm_buildfilename_test_SOURCES) \
	$(glibmm_bytearray_test_SOURCES) $(glibmm_date_test_SOURCES) \
	$(glibmm_interface_implementation_test_SOURCES) \
	$(glibmm_mainloop_test_SOURCES) \
	$(glibmm_nodetree_test_SOURCES) \
	$(glibmm_null_containerhandle_test_SOURCES) \
	$(glibmm_null_vectorutils_test_SOURCES) \
	$(glibmm_refptr_sigc_bind_test_SOURCES) \
	$(glibmm_ustring_compose_test_SOURCES) \
	$(glibmm_ustring_format_test_SOURCES) \
	$(glibmm_value_test_SOURCES) $(glibmm_valuearray_test_SOURCES) \
	$(glibmm_variant_test_SOURCES) $(glibmm_vector_test_SOURCES)
DIST_SOURCES = $(giomm_asyncresult_sourceobject_test_SOURCES) \
	$(giomm_ioerror_test_SOURCES) \
	$(giomm_ioerror_and_iodbuserror_test_SOURCES) \
	$(giomm_memoryinputstream_test_SOURCES) \
	$(giomm_simple_test_SOURCES) $(giomm_tls_client_test_SOURCES) \
	$(glibmm_base64_test_SOURCES) \
	$(glibmm_bool_arrayhandle_test_SOURCES) \
	$(glibmm_bool_vector_test_SOURCES) \
	$(glibmm_btree_test_SOURCES) \
	$(glibmm_buildfilename_test_SOURCES) \
	$(glibmm_bytearray_test_SOURCES) $(glibmm_date_test_SOURCES) \
	$(glibmm_interface_implementation_test_SOURCES) \
	$(glibmm_mainloop_test_SOURCES) \
	$(glibmm_nodetree_test_SOURCES) \
	$(glibmm_null_containerhandle_test_SOURCES) \
	$(glibmm_null_vectorutils_test_SOURCES) \
	$(glibmm_refptr_sigc_bind_test_SOURCES) \
	$(glibmm_ustring_compose_test_SOURCES) \
	$(glibmm_ustring_format_test_SOURCES) \
	$(glibmm_value_test_SOURCES) $(glibmm_valuearray_test_SOURCES) \
	$(glibmm_variant_test_SOURCES) $(glibmm_vector_test_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
ACLOCAL_FLAGS = @ACLOCAL_FLAGS@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOCINSTALL_FLAGS = @DOCINSTALL_FLAGS@
DOT = @DOT@
DOXYGEN = @DOXYGEN@
DOXYGEN_TAGFILES = @DOXYGEN_TAGFILES@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GIOMM_API_VERSION = @GIOMM_API_VERSION@
GIOMM_CFLAGS = @GIOMM_CFLAGS@
GIOMM_LIBS = @GIOMM_LIBS@
GIOMM_MAJOR_VERSION = @GIOMM_MAJOR_VERSION@
GIOMM_MICRO_VERSION = @GIOMM_MICRO_VERSION@
GIOMM_MINOR_VERSION = @GIOMM_MINOR_VERSION@
GIOMM_MODULE_NAME = @GIOMM_MODULE_NAME@
GIOMM_VERSION = @GIOMM_VERSION@
GLIBMM_API_VERSION = @GLIBMM_API_VERSION@
GLIBMM_CFLAGS = @GLIBMM_CFLAGS@
GLIBMM_LIBS = @GLIBMM_LIBS@
GLIBMM_MAJOR_VERSION = @GLIBMM_MAJOR_VERSION@
GLIBMM_MICRO_VERSION = @GLIBMM_MICRO_VERSION@
GLIBMM_MINOR_VERSION = @GLIBMM_MINOR_VERSION@
GLIBMM_MODULE_NAME = @GLIBMM_MODULE_NAME@
GLIBMM_VERSION = @GLIBMM_VERSION@
GLIBMM_WXXFLAGS = @GLIBMM_WXXFLAGS@
GLIB_COMPILE_SCHEMAS = @GLIB_COMPILE_SCHEMAS@
GREP = @GREP@
GSETTINGS_DISABLE_SCHEMAS_COMPILE = @GSETTINGS_DISABLE_SCHEMAS_COMPILE@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBGLIBMM_SO_VERSION = @LIBGLIBMM_SO_VERSION@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
M4 = @M4@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MMDOCTOOLDIR = @MMDOCTOOLDIR@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
XSLTPROC = @XSLTPROC@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
gsettingsschemadir = @gsettingsschemadir@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AUTOMAKE_OPTIONS = subdir-objects
TESTS = $(check_PROGRAMS)
glibmm_includes = -I$(top_builddir)/glib $(if $(srcdir:.=),-I$(top_srcdir)/glib)
giomm_includes = -I$(top_builddir)/gio $(if $(srcdir:.=),-I$(top_srcdir)/gio)
local_cppflags = -I$(top_builddir) $(glibmm_includes) $(giomm_includes)
AM_CPPFLAGS = $(local_cppflags) $(GIOMM_CFLAGS)
AM_CXXFLAGS = $(GLIBMM_WXXFLAGS) -DGLIBMM_DISABLE_DEPRECATED -DGIOMM_DISABLE_DEPRECATED
local_libglibmm = $(top_builddir)/glib/glibmm/libglibmm-$(GLIBMM_API_VERSION).la
local_libgiomm = $(top_builddir)/gio/giomm/libgiomm-$(GIOMM_API_VERSION).la
LDADD = $(local_libglibmm) $(GLIBMM_LIBS)
giomm_ldadd = $(local_libglibmm) $(local_libgiomm) $(GIOMM_LIBS)
giomm_ioerror_test_SOURCES = giomm_ioerror/main.cc
giomm_ioerror_test_LDADD = $(giomm_ldadd)
giomm_ioerror_and_iodbuserror_test_SOURCES = giomm_ioerror_and_iodbuserror/main.cc
giomm_ioerror_and_iodbuserror_test_LDADD = $(giomm_ldadd)
giomm_memoryinputstream_test_SOURCES = giomm_memoryinputstream/main.cc
giomm_memoryinputstream_test_LDADD = $(giomm_ldadd)
giomm_simple_test_SOURCES = giomm_simple/main.cc
giomm_simple_test_LDADD = $(giomm_ldadd)
giomm_asyncresult_sourceobject_test_SOURCES = giomm_asyncresult_sourceobject/main.cc
giomm_asyncresult_sourceobject_test_LDADD = $(giomm_ldadd)
giomm_tls_client_test_SOURCES = giomm_tls_client/main.cc
giomm_tls_client_test_LDADD = $(giomm_ldadd)
glibmm_base64_test_SOURCES = glibmm_base64/main.cc
glibmm_btree_test_SOURCES = glibmm_btree/main.cc
glibmm_buildfilename_test_SOURCES = glibmm_buildfilename/main.cc
glibmm_date_test_SOURCES = glibmm_date/main.cc
glibmm_interface_implementation_test_SOURCES = glibmm_interface_implementation/main.cc
glibmm_interface_implementation_test_LDADD = $(giomm_ldadd)
glibmm_mainloop_test_SOURCES = glibmm_mainloop/main.cc
glibmm_nodetree_test_SOURCES = glibmm_nodetree/main.cc
glibmm_ustring_compose_test_SOURCES = glibmm_ustring_compose/main.cc
glibmm_ustring_format_test_SOURCES = glibmm_ustring_format/main.cc
glibmm_value_test_SOURCES = glibmm_value/glibmm_value.cc glibmm_value/main.cc
glibmm_valuearray_test_SOURCES = glibmm_valuearray/main.cc
glibmm_variant_test_SOURCES = glibmm_variant/main.cc
glibmm_vector_test_SOURCES = glibmm_vector/main.cc
glibmm_vector_test_LDADD = $(giomm_ldadd)
glibmm_bool_vector_test_SOURCES = glibmm_bool_vector/main.cc
glibmm_bool_arrayhandle_test_SOURCES = glibmm_bool_arrayhandle/main.cc
glibmm_null_vectorutils_test_SOURCES = glibmm_null_vectorutils/main.cc
glibmm_null_vectorutils_test_LDADD = $(giomm_ldadd)
glibmm_null_containerhandle_test_SOURCES = glibmm_null_containerhandle/main.cc
glibmm_null_containerhandle_test_LDADD = $(giomm_ldadd)
glibmm_refptr_sigc_bind_test_SOURCES = glibmm_refptr_sigc_bind/main.cc
glibmm_bytearray_test_SOURCES = glibmm_bytearray/main.cc
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
giomm_asyncresult_sourceobject/$(am__dirstamp):
	@$(MKDIR_P) giomm_asyncresult_sourceobject
	@: > giomm_asyncresult_sourceobject/$(am__dirstamp)
giomm_asyncresult_sourceobject/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) giomm_asyncresult_sourceobject/$(DEPDIR)
	@: > giomm_asyncresult_sourceobject/$(DEPDIR)/$(am__dirstamp)
giomm_asyncresult_sourceobject/main.$(OBJEXT):  \
	giomm_asyncresult_sourceobject/$(am__dirstamp) \
	giomm_asyncresult_sourceobject/$(DEPDIR)/$(am__dirstamp)

giomm_asyncresult_sourceobject/test$(EXEEXT): $(giomm_asyncresult_sourceobject_test_OBJECTS) $(giomm_asyncresult_sourceobject_test_DEPENDENCIES) $(EXTRA_giomm_asyncresult_sourceobject_test_DEPENDENCIES) giomm_asyncresult_sourceobject/$(am__dirstamp)
	@rm -f giomm_asyncresult_sourceobject/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(giomm_asyncresult_sourceobject_test_OBJECTS) $(giomm_asyncresult_sourceobject_test_LDADD) $(LIBS)
giomm_ioerror/$(am__dirstamp):
	@$(MKDIR_P) giomm_ioerror
	@: > giomm_ioerror/$(am__dirstamp)
giomm_ioerror/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) giomm_ioerror/$(DEPDIR)
	@: > giomm_ioerror/$(DEPDIR)/$(am__dirstamp)
giomm_ioerror/main.$(OBJEXT): giomm_ioerror/$(am__dirstamp) \
	giomm_ioerror/$(DEPDIR)/$(am__dirstamp)

giomm_ioerror/test$(EXEEXT): $(giomm_ioerror_test_OBJECTS) $(giomm_ioerror_test_DEPENDENCIES) $(EXTRA_giomm_ioerror_test_DEPENDENCIES) giomm_ioerror/$(am__dirstamp)
	@rm -f giomm_ioerror/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(giomm_ioerror_test_OBJECTS) $(giomm_ioerror_test_LDADD) $(LIBS)
giomm_ioerror_and_iodbuserror/$(am__dirstamp):
	@$(MKDIR_P) giomm_ioerror_and_iodbuserror
	@: > giomm_ioerror_and_iodbuserror/$(am__dirstamp)
giomm_ioerror_and_iodbuserror/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) giomm_ioerror_and_iodbuserror/$(DEPDIR)
	@: > giomm_ioerror_and_iodbuserror/$(DEPDIR)/$(am__dirstamp)
giomm_ioerror_and_iodbuserror/main.$(OBJEXT):  \
	giomm_ioerror_and_iodbuserror/$(am__dirstamp) \
	giomm_ioerror_and_iodbuserror/$(DEPDIR)/$(am__dirstamp)

giomm_ioerror_and_iodbuserror/test$(EXEEXT): $(giomm_ioerror_and_iodbuserror_test_OBJECTS) $(giomm_ioerror_and_iodbuserror_test_DEPENDENCIES) $(EXTRA_giomm_ioerror_and_iodbuserror_test_DEPENDENCIES) giomm_ioerror_and_iodbuserror/$(am__dirstamp)
	@rm -f giomm_ioerror_and_iodbuserror/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(giomm_ioerror_and_iodbuserror_test_OBJECTS) $(giomm_ioerror_and_iodbuserror_test_LDADD) $(LIBS)
giomm_memoryinputstream/$(am__dirstamp):
	@$(MKDIR_P) giomm_memoryinputstream
	@: > giomm_memoryinputstream/$(am__dirstamp)
giomm_memoryinputstream/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) giomm_memoryinputstream/$(DEPDIR)
	@: > giomm_memoryinputstream/$(DEPDIR)/$(am__dirstamp)
giomm_memoryinputstream/main.$(OBJEXT):  \
	giomm_memoryinputstream/$(am__dirstamp) \
	giomm_memoryinputstream/$(DEPDIR)/$(am__dirstamp)

giomm_memoryinputstream/test$(EXEEXT): $(giomm_memoryinputstream_test_OBJECTS) $(giomm_memoryinputstream_test_DEPENDENCIES) $(EXTRA_giomm_memoryinputstream_test_DEPENDENCIES) giomm_memoryinputstream/$(am__dirstamp)
	@rm -f giomm_memoryinputstream/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(giomm_memoryinputstream_test_OBJECTS) $(giomm_memoryinputstream_test_LDADD) $(LIBS)
giomm_simple/$(am__dirstamp):
	@$(MKDIR_P) giomm_simple
	@: > giomm_simple/$(am__dirstamp)
giomm_simple/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) giomm_simple/$(DEPDIR)
	@: > giomm_simple/$(DEPDIR)/$(am__dirstamp)
giomm_simple/main.$(OBJEXT): giomm_simple/$(am__dirstamp) \
	giomm_simple/$(DEPDIR)/$(am__dirstamp)

giomm_simple/test$(EXEEXT): $(giomm_simple_test_OBJECTS) $(giomm_simple_test_DEPENDENCIES) $(EXTRA_giomm_simple_test_DEPENDENCIES) giomm_simple/$(am__dirstamp)
	@rm -f giomm_simple/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(giomm_simple_test_OBJECTS) $(giomm_simple_test_LDADD) $(LIBS)
giomm_tls_client/$(am__dirstamp):
	@$(MKDIR_P) giomm_tls_client
	@: > giomm_tls_client/$(am__dirstamp)
giomm_tls_client/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) giomm_tls_client/$(DEPDIR)
	@: > giomm_tls_client/$(DEPDIR)/$(am__dirstamp)
giomm_tls_client/main.$(OBJEXT): giomm_tls_client/$(am__dirstamp) \
	giomm_tls_client/$(DEPDIR)/$(am__dirstamp)

giomm_tls_client/test$(EXEEXT): $(giomm_tls_client_test_OBJECTS) $(giomm_tls_client_test_DEPENDENCIES) $(EXTRA_giomm_tls_client_test_DEPENDENCIES) giomm_tls_client/$(am__dirstamp)
	@rm -f giomm_tls_client/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(giomm_tls_client_test_OBJECTS) $(giomm_tls_client_test_LDADD) $(LIBS)
glibmm_base64/$(am__dirstamp):
	@$(MKDIR_P) glibmm_base64
	@: > glibmm_base64/$(am__dirstamp)
glibmm_base64/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_base64/$(DEPDIR)
	@: > glibmm_base64/$(DEPDIR)/$(am__dirstamp)
glibmm_base64/main.$(OBJEXT): glibmm_base64/$(am__dirstamp) \
	glibmm_base64/$(DEPDIR)/$(am__dirstamp)

glibmm_base64/test$(EXEEXT): $(glibmm_base64_test_OBJECTS) $(glibmm_base64_test_DEPENDENCIES) $(EXTRA_glibmm_base64_test_DEPENDENCIES) glibmm_base64/$(am__dirstamp)
	@rm -f glibmm_base64/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_base64_test_OBJECTS) $(glibmm_base64_test_LDADD) $(LIBS)
glibmm_bool_arrayhandle/$(am__dirstamp):
	@$(MKDIR_P) glibmm_bool_arrayhandle
	@: > glibmm_bool_arrayhandle/$(am__dirstamp)
glibmm_bool_arrayhandle/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_bool_arrayhandle/$(DEPDIR)
	@: > glibmm_bool_arrayhandle/$(DEPDIR)/$(am__dirstamp)
glibmm_bool_arrayhandle/main.$(OBJEXT):  \
	glibmm_bool_arrayhandle/$(am__dirstamp) \
	glibmm_bool_arrayhandle/$(DEPDIR)/$(am__dirstamp)

glibmm_bool_arrayhandle/test$(EXEEXT): $(glibmm_bool_arrayhandle_test_OBJECTS) $(glibmm_bool_arrayhandle_test_DEPENDENCIES) $(EXTRA_glibmm_bool_arrayhandle_test_DEPENDENCIES) glibmm_bool_arrayhandle/$(am__dirstamp)
	@rm -f glibmm_bool_arrayhandle/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_bool_arrayhandle_test_OBJECTS) $(glibmm_bool_arrayhandle_test_LDADD) $(LIBS)
glibmm_bool_vector/$(am__dirstamp):
	@$(MKDIR_P) glibmm_bool_vector
	@: > glibmm_bool_vector/$(am__dirstamp)
glibmm_bool_vector/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_bool_vector/$(DEPDIR)
	@: > glibmm_bool_vector/$(DEPDIR)/$(am__dirstamp)
glibmm_bool_vector/main.$(OBJEXT): glibmm_bool_vector/$(am__dirstamp) \
	glibmm_bool_vector/$(DEPDIR)/$(am__dirstamp)

glibmm_bool_vector/test$(EXEEXT): $(glibmm_bool_vector_test_OBJECTS) $(glibmm_bool_vector_test_DEPENDENCIES) $(EXTRA_glibmm_bool_vector_test_DEPENDENCIES) glibmm_bool_vector/$(am__dirstamp)
	@rm -f glibmm_bool_vector/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_bool_vector_test_OBJECTS) $(glibmm_bool_vector_test_LDADD) $(LIBS)
glibmm_btree/$(am__dirstamp):
	@$(MKDIR_P) glibmm_btree
	@: > glibmm_btree/$(am__dirstamp)
glibmm_btree/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_btree/$(DEPDIR)
	@: > glibmm_btree/$(DEPDIR)/$(am__dirstamp)
glibmm_btree/main.$(OBJEXT): glibmm_btree/$(am__dirstamp) \
	glibmm_btree/$(DEPDIR)/$(am__dirstamp)

glibmm_btree/test$(EXEEXT): $(glibmm_btree_test_OBJECTS) $(glibmm_btree_test_DEPENDENCIES) $(EXTRA_glibmm_btree_test_DEPENDENCIES) glibmm_btree/$(am__dirstamp)
	@rm -f glibmm_btree/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_btree_test_OBJECTS) $(glibmm_btree_test_LDADD) $(LIBS)
glibmm_buildfilename/$(am__dirstamp):
	@$(MKDIR_P) glibmm_buildfilename
	@: > glibmm_buildfilename/$(am__dirstamp)
glibmm_buildfilename/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_buildfilename/$(DEPDIR)
	@: > glibmm_buildfilename/$(DEPDIR)/$(am__dirstamp)
glibmm_buildfilename/main.$(OBJEXT):  \
	glibmm_buildfilename/$(am__dirstamp) \
	glibmm_buildfilename/$(DEPDIR)/$(am__dirstamp)

glibmm_buildfilename/test$(EXEEXT): $(glibmm_buildfilename_test_OBJECTS) $(glibmm_buildfilename_test_DEPENDENCIES) $(EXTRA_glibmm_buildfilename_test_DEPENDENCIES) glibmm_buildfilename/$(am__dirstamp)
	@rm -f glibmm_buildfilename/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_buildfilename_test_OBJECTS) $(glibmm_buildfilename_test_LDADD) $(LIBS)
glibmm_bytearray/$(am__dirstamp):
	@$(MKDIR_P) glibmm_bytearray
	@: > glibmm_bytearray/$(am__dirstamp)
glibmm_bytearray/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_bytearray/$(DEPDIR)
	@: > glibmm_bytearray/$(DEPDIR)/$(am__dirstamp)
glibmm_bytearray/main.$(OBJEXT): glibmm_bytearray/$(am__dirstamp) \
	glibmm_bytearray/$(DEPDIR)/$(am__dirstamp)

glibmm_bytearray/test$(EXEEXT): $(glibmm_bytearray_test_OBJECTS) $(glibmm_bytearray_test_DEPENDENCIES) $(EXTRA_glibmm_bytearray_test_DEPENDENCIES) glibmm_bytearray/$(am__dirstamp)
	@rm -f glibmm_bytearray/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_bytearray_test_OBJECTS) $(glibmm_bytearray_test_LDADD) $(LIBS)
glibmm_date/$(am__dirstamp):
	@$(MKDIR_P) glibmm_date
	@: > glibmm_date/$(am__dirstamp)
glibmm_date/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_date/$(DEPDIR)
	@: > glibmm_date/$(DEPDIR)/$(am__dirstamp)
glibmm_date/main.$(OBJEXT): glibmm_date/$(am__dirstamp) \
	glibmm_date/$(DEPDIR)/$(am__dirstamp)

glibmm_date/test$(EXEEXT): $(glibmm_date_test_OBJECTS) $(glibmm_date_test_DEPENDENCIES) $(EXTRA_glibmm_date_test_DEPENDENCIES) glibmm_date/$(am__dirstamp)
	@rm -f glibmm_date/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_date_test_OBJECTS) $(glibmm_date_test_LDADD) $(LIBS)
glibmm_interface_implementation/$(am__dirstamp):
	@$(MKDIR_P) glibmm_interface_implementation
	@: > glibmm_interface_implementation/$(am__dirstamp)
glibmm_interface_implementation/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_interface_implementation/$(DEPDIR)
	@: > glibmm_interface_implementation/$(DEPDIR)/$(am__dirstamp)
glibmm_interface_implementation/main.$(OBJEXT):  \
	glibmm_interface_implementation/$(am__dirstamp) \
	glibmm_interface_implementation/$(DEPDIR)/$(am__dirstamp)

glibmm_interface_implementation/test$(EXEEXT): $(glibmm_interface_implementation_test_OBJECTS) $(glibmm_interface_implementation_test_DEPENDENCIES) $(EXTRA_glibmm_interface_implementation_test_DEPENDENCIES) glibmm_interface_implementation/$(am__dirstamp)
	@rm -f glibmm_interface_implementation/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_interface_implementation_test_OBJECTS) $(glibmm_interface_implementation_test_LDADD) $(LIBS)
glibmm_mainloop/$(am__dirstamp):
	@$(MKDIR_P) glibmm_mainloop
	@: > glibmm_mainloop/$(am__dirstamp)
glibmm_mainloop/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_mainloop/$(DEPDIR)
	@: > glibmm_mainloop/$(DEPDIR)/$(am__dirstamp)
glibmm_mainloop/main.$(OBJEXT): glibmm_mainloop/$(am__dirstamp) \
	glibmm_mainloop/$(DEPDIR)/$(am__dirstamp)

glibmm_mainloop/test$(EXEEXT): $(glibmm_mainloop_test_OBJECTS) $(glibmm_mainloop_test_DEPENDENCIES) $(EXTRA_glibmm_mainloop_test_DEPENDENCIES) glibmm_mainloop/$(am__dirstamp)
	@rm -f glibmm_mainloop/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_mainloop_test_OBJECTS) $(glibmm_mainloop_test_LDADD) $(LIBS)
glibmm_nodetree/$(am__dirstamp):
	@$(MKDIR_P) glibmm_nodetree
	@: > glibmm_nodetree/$(am__dirstamp)
glibmm_nodetree/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_nodetree/$(DEPDIR)
	@: > glibmm_nodetree/$(DEPDIR)/$(am__dirstamp)
glibmm_nodetree/main.$(OBJEXT): glibmm_nodetree/$(am__dirstamp) \
	glibmm_nodetree/$(DEPDIR)/$(am__dirstamp)

glibmm_nodetree/test$(EXEEXT): $(glibmm_nodetree_test_OBJECTS) $(glibmm_nodetree_test_DEPENDENCIES) $(EXTRA_glibmm_nodetree_test_DEPENDENCIES) glibmm_nodetree/$(am__dirstamp)
	@rm -f glibmm_nodetree/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_nodetree_test_OBJECTS) $(glibmm_nodetree_test_LDADD) $(LIBS)
glibmm_null_containerhandle/$(am__dirstamp):
	@$(MKDIR_P) glibmm_null_containerhandle
	@: > glibmm_null_containerhandle/$(am__dirstamp)
glibmm_null_containerhandle/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_null_containerhandle/$(DEPDIR)
	@: > glibmm_null_containerhandle/$(DEPDIR)/$(am__dirstamp)
glibmm_null_containerhandle/main.$(OBJEXT):  \
	glibmm_null_containerhandle/$(am__dirstamp) \
	glibmm_null_containerhandle/$(DEPDIR)/$(am__dirstamp)

glibmm_null_containerhandle/test$(EXEEXT): $(glibmm_null_containerhandle_test_OBJECTS) $(glibmm_null_containerhandle_test_DEPENDENCIES) $(EXTRA_glibmm_null_containerhandle_test_DEPENDENCIES) glibmm_null_containerhandle/$(am__dirstamp)
	@rm -f glibmm_null_containerhandle/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_null_containerhandle_test_OBJECTS) $(glibmm_null_containerhandle_test_LDADD) $(LIBS)
glibmm_null_vectorutils/$(am__dirstamp):
	@$(MKDIR_P) glibmm_null_vectorutils
	@: > glibmm_null_vectorutils/$(am__dirstamp)
glibmm_null_vectorutils/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_null_vectorutils/$(DEPDIR)
	@: > glibmm_null_vectorutils/$(DEPDIR)/$(am__dirstamp)
glibmm_null_vectorutils/main.$(OBJEXT):  \
	glibmm_null_vectorutils/$(am__dirstamp) \
	glibmm_null_vectorutils/$(DEPDIR)/$(am__dirstamp)

glibmm_null_vectorutils/test$(EXEEXT): $(glibmm_null_vectorutils_test_OBJECTS) $(glibmm_null_vectorutils_test_DEPENDENCIES) $(EXTRA_glibmm_null_vectorutils_test_DEPENDENCIES) glibmm_null_vectorutils/$(am__dirstamp)
	@rm -f glibmm_null_vectorutils/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_null_vectorutils_test_OBJECTS) $(glibmm_null_vectorutils_test_LDADD) $(LIBS)
glibmm_refptr_sigc_bind/$(am__dirstamp):
	@$(MKDIR_P) glibmm_refptr_sigc_bind
	@: > glibmm_refptr_sigc_bind/$(am__dirstamp)
glibmm_refptr_sigc_bind/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_refptr_sigc_bind/$(DEPDIR)
	@: > glibmm_refptr_sigc_bind/$(DEPDIR)/$(am__dirstamp)
glibmm_refptr_sigc_bind/main.$(OBJEXT):  \
	glibmm_refptr_sigc_bind/$(am__dirstamp) \
	glibmm_refptr_sigc_bind/$(DEPDIR)/$(am__dirstamp)

glibmm_refptr_sigc_bind/test$(EXEEXT): $(glibmm_refptr_sigc_bind_test_OBJECTS) $(glibmm_refptr_sigc_bind_test_DEPENDENCIES) $(EXTRA_glibmm_refptr_sigc_bind_test_DEPENDENCIES) glibmm_refptr_sigc_bind/$(am__dirstamp)
	@rm -f glibmm_refptr_sigc_bind/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_refptr_sigc_bind_test_OBJECTS) $(glibmm_refptr_sigc_bind_test_LDADD) $(LIBS)
glibmm_ustring_compose/$(am__dirstamp):
	@$(MKDIR_P) glibmm_ustring_compose
	@: > glibmm_ustring_compose/$(am__dirstamp)
glibmm_ustring_compose/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_ustring_compose/$(DEPDIR)
	@: > glibmm_ustring_compose/$(DEPDIR)/$(am__dirstamp)
glibmm_ustring_compose/main.$(OBJEXT):  \
	glibmm_ustring_compose/$(am__dirstamp) \
	glibmm_ustring_compose/$(DEPDIR)/$(am__dirstamp)

glibmm_ustring_compose/test$(EXEEXT): $(glibmm_ustring_compose_test_OBJECTS) $(glibmm_ustring_compose_test_DEPENDENCIES) $(EXTRA_glibmm_ustring_compose_test_DEPENDENCIES) glibmm_ustring_compose/$(am__dirstamp)
	@rm -f glibmm_ustring_compose/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_ustring_compose_test_OBJECTS) $(glibmm_ustring_compose_test_LDADD) $(LIBS)
glibmm_ustring_format/$(am__dirstamp):
	@$(MKDIR_P) glibmm_ustring_format
	@: > glibmm_ustring_format/$(am__dirstamp)
glibmm_ustring_format/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_ustring_format/$(DEPDIR)
	@: > glibmm_ustring_format/$(DEPDIR)/$(am__dirstamp)
glibmm_ustring_format/main.$(OBJEXT):  \
	glibmm_ustring_format/$(am__dirstamp) \
	glibmm_ustring_format/$(DEPDIR)/$(am__dirstamp)

glibmm_ustring_format/test$(EXEEXT): $(glibmm_ustring_format_test_OBJECTS) $(glibmm_ustring_format_test_DEPENDENCIES) $(EXTRA_glibmm_ustring_format_test_DEPENDENCIES) glibmm_ustring_format/$(am__dirstamp)
	@rm -f glibmm_ustring_format/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_ustring_format_test_OBJECTS) $(glibmm_ustring_format_test_LDADD) $(LIBS)
glibmm_value/$(am__dirstamp):
	@$(MKDIR_P) glibmm_value
	@: > glibmm_value/$(am__dirstamp)
glibmm_value/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_value/$(DEPDIR)
	@: > glibmm_value/$(DEPDIR)/$(am__dirstamp)
glibmm_value/glibmm_value.$(OBJEXT): glibmm_value/$(am__dirstamp) \
	glibmm_value/$(DEPDIR)/$(am__dirstamp)
glibmm_value/main.$(OBJEXT): glibmm_value/$(am__dirstamp) \
	glibmm_value/$(DEPDIR)/$(am__dirstamp)

glibmm_value/test$(EXEEXT): $(glibmm_value_test_OBJECTS) $(glibmm_value_test_DEPENDENCIES) $(EXTRA_glibmm_value_test_DEPENDENCIES) glibmm_value/$(am__dirstamp)
	@rm -f glibmm_value/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_value_test_OBJECTS) $(glibmm_value_test_LDADD) $(LIBS)
glibmm_valuearray/$(am__dirstamp):
	@$(MKDIR_P) glibmm_valuearray
	@: > glibmm_valuearray/$(am__dirstamp)
glibmm_valuearray/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_valuearray/$(DEPDIR)
	@: > glibmm_valuearray/$(DEPDIR)/$(am__dirstamp)
glibmm_valuearray/main.$(OBJEXT): glibmm_valuearray/$(am__dirstamp) \
	glibmm_valuearray/$(DEPDIR)/$(am__dirstamp)

glibmm_valuearray/test$(EXEEXT): $(glibmm_valuearray_test_OBJECTS) $(glibmm_valuearray_test_DEPENDENCIES) $(EXTRA_glibmm_valuearray_test_DEPENDENCIES) glibmm_valuearray/$(am__dirstamp)
	@rm -f glibmm_valuearray/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_valuearray_test_OBJECTS) $(glibmm_valuearray_test_LDADD) $(LIBS)
glibmm_variant/$(am__dirstamp):
	@$(MKDIR_P) glibmm_variant
	@: > glibmm_variant/$(am__dirstamp)
glibmm_variant/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_variant/$(DEPDIR)
	@: > glibmm_variant/$(DEPDIR)/$(am__dirstamp)
glibmm_variant/main.$(OBJEXT): glibmm_variant/$(am__dirstamp) \
	glibmm_variant/$(DEPDIR)/$(am__dirstamp)

glibmm_variant/test$(EXEEXT): $(glibmm_variant_test_OBJECTS) $(glibmm_variant_test_DEPENDENCIES) $(EXTRA_glibmm_variant_test_DEPENDENCIES) glibmm_variant/$(am__dirstamp)
	@rm -f glibmm_variant/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_variant_test_OBJECTS) $(glibmm_variant_test_LDADD) $(LIBS)
glibmm_vector/$(am__dirstamp):
	@$(MKDIR_P) glibmm_vector
	@: > glibmm_vector/$(am__dirstamp)
glibmm_vector/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) glibmm_vector/$(DEPDIR)
	@: > glibmm_vector/$(DEPDIR)/$(am__dirstamp)
glibmm_vector/main.$(OBJEXT): glibmm_vector/$(am__dirstamp) \
	glibmm_vector/$(DEPDIR)/$(am__dirstamp)

glibmm_vector/test$(EXEEXT): $(glibmm_vector_test_OBJECTS) $(glibmm_vector_test_DEPENDENCIES) $(EXTRA_glibmm_vector_test_DEPENDENCIES) glibmm_vector/$(am__dirstamp)
	@rm -f glibmm_vector/test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(glibmm_vector_test_OBJECTS) $(glibmm_vector_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f giomm_asyncresult_sourceobject/*.$(OBJEXT)
	-rm -f giomm_ioerror/*.$(OBJEXT)
	-rm -f giomm_ioerror_and_iodbuserror/*.$(OBJEXT)
	-rm -f giomm_memoryinputstream/*.$(OBJEXT)
	-rm -f giomm_simple/*.$(OBJEXT)
	-rm -f giomm_tls_client/*.$(OBJEXT)
	-rm -f glibmm_base64/*.$(OBJEXT)
	-rm -f glibmm_bool_arrayhandle/*.$(OBJEXT)
	-rm -f glibmm_bool_vector/*.$(OBJEXT)
	-rm -f glibmm_btree/*.$(OBJEXT)
	-rm -f glibmm_buildfilename/*.$(OBJEXT)
	-rm -f glibmm_bytearray/*.$(OBJEXT)
	-rm -f glibmm_date/*.$(OBJEXT)
	-rm -f glibmm_interface_implementation/*.$(OBJEXT)
	-rm -f glibmm_mainloop/*.$(OBJEXT)
	-rm -f glibmm_nodetree/*.$(OBJEXT)
	-rm -f glibmm_null_containerhandle/*.$(OBJEXT)
	-rm -f glibmm_null_vectorutils/*.$(OBJEXT)
	-rm -f glibmm_refptr_sigc_bind/*.$(OBJEXT)
	-rm -f glibmm_ustring_compose/*.$(OBJEXT)
	-rm -f glibmm_ustring_format/*.$(OBJEXT)
	-rm -f glibmm_value/*.$(OBJEXT)
	-rm -f glibmm_valuearray/*.$(OBJEXT)
	-rm -f glibmm_variant/*.$(OBJEXT)
	-rm -f glibmm_vector/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@giomm_asyncresult_sourceobject/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@giomm_ioerror/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@giomm_ioerror_and_iodbuserror/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@giomm_memoryinputstream/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@giomm_simple/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@giomm_tls_client/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_base64/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_bool_arrayhandle/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_bool_vector/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_btree/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_buildfilename/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_bytearray/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_date/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_interface_implementation/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_mainloop/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_nodetree/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_null_containerhandle/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_null_vectorutils/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_refptr_sigc_bind/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_ustring_compose/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_ustring_format/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_value/$(DEPDIR)/glibmm_value.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_value/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_valuearray/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_variant/$(DEPDIR)/main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@glibmm_vector/$(DEPDIR)/main.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf giomm_asyncresult_sourceobject/.libs giomm_asyncresult_sourceobject/_libs
	-rm -rf giomm_ioerror/.libs giomm_ioerror/_libs
	-rm -rf giomm_ioerror_and_iodbuserror/.libs giomm_ioerror_and_iodbuserror/_libs
	-rm -rf giomm_memoryinputstream/.libs giomm_memoryinputstream/_libs
	-rm -rf giomm_simple/.libs giomm_simple/_libs
	-rm -rf giomm_tls_client/.libs giomm_tls_client/_libs
	-rm -rf glibmm_base64/.libs glibmm_base64/_libs
	-rm -rf glibmm_bool_arrayhandle/.libs glibmm_bool_arrayhandle/_libs
	-rm -rf glibmm_bool_vector/.libs glibmm_bool_vector/_libs
	-rm -rf glibmm_btree/.libs glibmm_btree/_libs
	-rm -rf glibmm_buildfilename/.libs glibmm_buildfilename/_libs
	-rm -rf glibmm_bytearray/.libs glibmm_bytearray/_libs
	-rm -rf glibmm_date/.libs glibmm_date/_libs
	-rm -rf glibmm_interface_implementation/.libs glibmm_interface_implementation/_libs
	-rm -rf glibmm_mainloop/.libs glibmm_mainloop/_libs
	-rm -rf glibmm_nodetree/.libs glibmm_nodetree/_libs
	-rm -rf glibmm_null_containerhandle/.libs glibmm_null_containerhandle/_libs
	-rm -rf glibmm_null_vectorutils/.libs glibmm_null_vectorutils/_libs
	-rm -rf glibmm_refptr_sigc_bind/.libs glibmm_refptr_sigc_bind/_libs
	-rm -rf glibmm_ustring_compose/.libs glibmm_ustring_compose/_libs
	-rm -rf glibmm_ustring_format/.libs glibmm_ustring_format/_libs
	-rm -rf glibmm_value/.libs glibmm_value/_libs
	-rm -rf glibmm_valuearray/.libs glibmm_valuearray/_libs
	-rm -rf glibmm_variant/.libs glibmm_variant/_libs
	-rm -rf glibmm_vector/.libs glibmm_vector/_libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
giomm_ioerror/test.log: giomm_ioerror/test$(EXEEXT)
	@p='giomm_ioerror/test$(EXEEXT)'; \
	b='giomm_ioerror/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
giomm_ioerror_and_iodbuserror/test.log: giomm_ioerror_and_iodbuserror/test$(EXEEXT)
	@p='giomm_ioerror_and_iodbuserror/test$(EXEEXT)'; \
	b='giomm_ioerror_and_iodbuserror/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
giomm_memoryinputstream/test.log: giomm_memoryinputstream/test$(EXEEXT)
	@p='giomm_memoryinputstream/test$(EXEEXT)'; \
	b='giomm_memoryinputstream/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
giomm_simple/test.log: giomm_simple/test$(EXEEXT)
	@p='giomm_simple/test$(EXEEXT)'; \
	b='giomm_simple/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
giomm_asyncresult_sourceobject/test.log: giomm_asyncresult_sourceobject/test$(EXEEXT)
	@p='giomm_asyncresult_sourceobject/test$(EXEEXT)'; \
	b='giomm_asyncresult_sourceobject/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
giomm_tls_client/test.log: giomm_tls_client/test$(EXEEXT)
	@p='giomm_tls_client/test$(EXEEXT)'; \
	b='giomm_tls_client/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_btree/test.log: glibmm_btree/test$(EXEEXT)
	@p='glibmm_btree/test$(EXEEXT)'; \
	b='glibmm_btree/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_base64/test.log: glibmm_base64/test$(EXEEXT)
	@p='glibmm_base64/test$(EXEEXT)'; \
	b='glibmm_base64/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_date/test.log: glibmm_date/test$(EXEEXT)
	@p='glibmm_date/test$(EXEEXT)'; \
	b='glibmm_date/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_buildfilename/test.log: glibmm_buildfilename/test$(EXEEXT)
	@p='glibmm_buildfilename/test$(EXEEXT)'; \
	b='glibmm_buildfilename/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_interface_implementation/test.log: glibmm_interface_implementation/test$(EXEEXT)
	@p='glibmm_interface_implementation/test$(EXEEXT)'; \
	b='glibmm_interface_implementation/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_mainloop/test.log: glibmm_mainloop/test$(EXEEXT)
	@p='glibmm_mainloop/test$(EXEEXT)'; \
	b='glibmm_mainloop/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_nodetree/test.log: glibmm_nodetree/test$(EXEEXT)
	@p='glibmm_nodetree/test$(EXEEXT)'; \
	b='glibmm_nodetree/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_ustring_compose/test.log: glibmm_ustring_compose/test$(EXEEXT)
	@p='glibmm_ustring_compose/test$(EXEEXT)'; \
	b='glibmm_ustring_compose/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_ustring_format/test.log: glibmm_ustring_format/test$(EXEEXT)
	@p='glibmm_ustring_format/test$(EXEEXT)'; \
	b='glibmm_ustring_format/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_value/test.log: glibmm_value/test$(EXEEXT)
	@p='glibmm_value/test$(EXEEXT)'; \
	b='glibmm_value/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_valuearray/test.log: glibmm_valuearray/test$(EXEEXT)
	@p='glibmm_valuearray/test$(EXEEXT)'; \
	b='glibmm_valuearray/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_variant/test.log: glibmm_variant/test$(EXEEXT)
	@p='glibmm_variant/test$(EXEEXT)'; \
	b='glibmm_variant/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_vector/test.log: glibmm_vector/test$(EXEEXT)
	@p='glibmm_vector/test$(EXEEXT)'; \
	b='glibmm_vector/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_bool_vector/test.log: glibmm_bool_vector/test$(EXEEXT)
	@p='glibmm_bool_vector/test$(EXEEXT)'; \
	b='glibmm_bool_vector/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_bool_arrayhandle/test.log: glibmm_bool_arrayhandle/test$(EXEEXT)
	@p='glibmm_bool_arrayhandle/test$(EXEEXT)'; \
	b='glibmm_bool_arrayhandle/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_null_vectorutils/test.log: glibmm_null_vectorutils/test$(EXEEXT)
	@p='glibmm_null_vectorutils/test$(EXEEXT)'; \
	b='glibmm_null_vectorutils/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_null_containerhandle/test.log: glibmm_null_containerhandle/test$(EXEEXT)
	@p='glibmm_null_containerhandle/test$(EXEEXT)'; \
	b='glibmm_null_containerhandle/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_refptr_sigc_bind/test.log: glibmm_refptr_sigc_bind/test$(EXEEXT)
	@p='glibmm_refptr_sigc_bind/test$(EXEEXT)'; \
	b='glibmm_refptr_sigc_bind/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
glibmm_bytearray/test.log: glibmm_bytearray/test$(EXEEXT)
	@p='glibmm_bytearray/test$(EXEEXT)'; \
	b='glibmm_bytearray/test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f giomm_asyncresult_sourceobject/$(DEPDIR)/$(am__dirstamp)
	-rm -f giomm_asyncresult_sourceobject/$(am__dirstamp)
	-rm -f giomm_ioerror/$(DEPDIR)/$(am__dirstamp)
	-rm -f giomm_ioerror/$(am__dirstamp)
	-rm -f giomm_ioerror_and_iodbuserror/$(DEPDIR)/$(am__dirstamp)
	-rm -f giomm_ioerror_and_iodbuserror/$(am__dirstamp)
	-rm -f giomm_memoryinputstream/$(DEPDIR)/$(am__dirstamp)
	-rm -f giomm_memoryinputstream/$(am__dirstamp)
	-rm -f giomm_simple/$(DEPDIR)/$(am__dirstamp)
	-rm -f giomm_simple/$(am__dirstamp)
	-rm -f giomm_tls_client/$(DEPDIR)/$(am__dirstamp)
	-rm -f giomm_tls_client/$(am__dirstamp)
	-rm -f glibmm_base64/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_base64/$(am__dirstamp)
	-rm -f glibmm_bool_arrayhandle/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_bool_arrayhandle/$(am__dirstamp)
	-rm -f glibmm_bool_vector/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_bool_vector/$(am__dirstamp)
	-rm -f glibmm_btree/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_btree/$(am__dirstamp)
	-rm -f glibmm_buildfilename/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_buildfilename/$(am__dirstamp)
	-rm -f glibmm_bytearray/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_bytearray/$(am__dirstamp)
	-rm -f glibmm_date/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_date/$(am__dirstamp)
	-rm -f glibmm_interface_implementation/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_interface_implementation/$(am__dirstamp)
	-rm -f glibmm_mainloop/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_mainloop/$(am__dirstamp)
	-rm -f glibmm_nodetree/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_nodetree/$(am__dirstamp)
	-rm -f glibmm_null_containerhandle/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_null_containerhandle/$(am__dirstamp)
	-rm -f glibmm_null_vectorutils/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_null_vectorutils/$(am__dirstamp)
	-rm -f glibmm_refptr_sigc_bind/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_refptr_sigc_bind/$(am__dirstamp)
	-rm -f glibmm_ustring_compose/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_ustring_compose/$(am__dirstamp)
	-rm -f glibmm_ustring_format/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_ustring_format/$(am__dirstamp)
	-rm -f glibmm_value/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_value/$(am__dirstamp)
	-rm -f glibmm_valuearray/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_valuearray/$(am__dirstamp)
	-rm -f glibmm_variant/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_variant/$(am__dirstamp)
	-rm -f glibmm_vector/$(DEPDIR)/$(am__dirstamp)
	-rm -f glibmm_vector/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf giomm_asyncresult_sourceobject/$(DEPDIR) giomm_ioerror/$(DEPDIR) giomm_ioerror_and_iodbuserror/$(DEPDIR) giomm_memoryinputstream/$(DEPDIR) giomm_simple/$(DEPDIR) giomm_tls_client/$(DEPDIR) glibmm_base64/$(DEPDIR) glibmm_bool_arrayhandle/$(DEPDIR) glibmm_bool_vector/$(DEPDIR) glibmm_btree/$(DEPDIR) glibmm_buildfilename/$(DEPDIR) glibmm_bytearray/$(DEPDIR) glibmm_date/$(DEPDIR) glibmm_interface_implementation/$(DEPDIR) glibmm_mainloop/$(DEPDIR) glibmm_nodetree/$(DEPDIR) glibmm_null_containerhandle/$(DEPDIR) glibmm_null_vectorutils/$(DEPDIR) glibmm_refptr_sigc_bind/$(DEPDIR) glibmm_ustring_compose/$(DEPDIR) glibmm_ustring_format/$(DEPDIR) glibmm_value/$(DEPDIR) glibmm_valuearray/$(DEPDIR) glibmm_variant/$(DEPDIR) glibmm_vector/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf giomm_asyncresult_sourceobject/$(DEPDIR) giomm_ioerror/$(DEPDIR) giomm_ioerror_and_iodbuserror/$(DEPDIR) giomm_memoryinputstream/$(DEPDIR) giomm_simple/$(DEPDIR) giomm_tls_client/$(DEPDIR) glibmm_base64/$(DEPDIR) glibmm_bool_arrayhandle/$(DEPDIR) glibmm_bool_vector/$(DEPDIR) glibmm_btree/$(DEPDIR) glibmm_buildfilename/$(DEPDIR) glibmm_bytearray/$(DEPDIR) glibmm_date/$(DEPDIR) glibmm_interface_implementation/$(DEPDIR) glibmm_mainloop/$(DEPDIR) glibmm_nodetree/$(DEPDIR) glibmm_null_containerhandle/$(DEPDIR) glibmm_null_vectorutils/$(DEPDIR) glibmm_refptr_sigc_bind/$(DEPDIR) glibmm_ustring_compose/$(DEPDIR) glibmm_ustring_format/$(DEPDIR) glibmm_value/$(DEPDIR) glibmm_valuearray/$(DEPDIR) glibmm_variant/$(DEPDIR) glibmm_vector/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	recheck tags tags-am uninstall uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
